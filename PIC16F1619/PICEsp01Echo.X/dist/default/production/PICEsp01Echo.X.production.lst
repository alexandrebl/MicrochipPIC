

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Mar 29 00:13:33 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.10
    43                           ; Generated 31/07/2019 GMT
    44                           ; 
    45                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F1619 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  0111                     	;# 
   133  0112                     	;# 
   134  0113                     	;# 
   135  0114                     	;# 
   136  0115                     	;# 
   137  0116                     	;# 
   138  0117                     	;# 
   139  0118                     	;# 
   140  0119                     	;# 
   141  011C                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  018E                     	;# 
   145  0191                     	;# 
   146  0191                     	;# 
   147  0192                     	;# 
   148  0193                     	;# 
   149  0193                     	;# 
   150  0194                     	;# 
   151  0195                     	;# 
   152  0196                     	;# 
   153  0197                     	;# 
   154  0199                     	;# 
   155  0199                     	;# 
   156  0199                     	;# 
   157  019A                     	;# 
   158  019A                     	;# 
   159  019A                     	;# 
   160  019B                     	;# 
   161  019B                     	;# 
   162  019B                     	;# 
   163  019B                     	;# 
   164  019B                     	;# 
   165  019C                     	;# 
   166  019C                     	;# 
   167  019C                     	;# 
   168  019D                     	;# 
   169  019D                     	;# 
   170  019D                     	;# 
   171  019E                     	;# 
   172  019E                     	;# 
   173  019E                     	;# 
   174  019F                     	;# 
   175  019F                     	;# 
   176  019F                     	;# 
   177  019F                     	;# 
   178  019F                     	;# 
   179  020C                     	;# 
   180  020D                     	;# 
   181  020E                     	;# 
   182  0211                     	;# 
   183  0211                     	;# 
   184  0212                     	;# 
   185  0212                     	;# 
   186  0213                     	;# 
   187  0213                     	;# 
   188  0214                     	;# 
   189  0214                     	;# 
   190  0215                     	;# 
   191  0215                     	;# 
   192  0215                     	;# 
   193  0215                     	;# 
   194  0216                     	;# 
   195  0216                     	;# 
   196  0217                     	;# 
   197  0217                     	;# 
   198  028C                     	;# 
   199  028D                     	;# 
   200  028E                     	;# 
   201  0291                     	;# 
   202  0291                     	;# 
   203  0292                     	;# 
   204  0293                     	;# 
   205  0294                     	;# 
   206  0298                     	;# 
   207  0298                     	;# 
   208  0299                     	;# 
   209  029A                     	;# 
   210  029B                     	;# 
   211  029E                     	;# 
   212  030C                     	;# 
   213  030D                     	;# 
   214  030E                     	;# 
   215  038C                     	;# 
   216  038D                     	;# 
   217  038E                     	;# 
   218  0391                     	;# 
   219  0392                     	;# 
   220  0393                     	;# 
   221  0394                     	;# 
   222  0395                     	;# 
   223  0396                     	;# 
   224  0397                     	;# 
   225  0398                     	;# 
   226  0399                     	;# 
   227  040E                     	;# 
   228  0413                     	;# 
   229  0413                     	;# 
   230  0414                     	;# 
   231  0414                     	;# 
   232  0415                     	;# 
   233  0416                     	;# 
   234  0417                     	;# 
   235  0418                     	;# 
   236  041A                     	;# 
   237  041A                     	;# 
   238  041B                     	;# 
   239  041B                     	;# 
   240  041C                     	;# 
   241  041D                     	;# 
   242  041E                     	;# 
   243  041F                     	;# 
   244  0493                     	;# 
   245  0494                     	;# 
   246  0495                     	;# 
   247  0496                     	;# 
   248  049A                     	;# 
   249  049B                     	;# 
   250  049C                     	;# 
   251  049D                     	;# 
   252  058C                     	;# 
   253  058C                     	;# 
   254  058D                     	;# 
   255  058E                     	;# 
   256  058E                     	;# 
   257  058F                     	;# 
   258  0590                     	;# 
   259  0590                     	;# 
   260  0591                     	;# 
   261  0592                     	;# 
   262  0592                     	;# 
   263  0593                     	;# 
   264  0594                     	;# 
   265  0594                     	;# 
   266  0595                     	;# 
   267  0596                     	;# 
   268  0596                     	;# 
   269  0597                     	;# 
   270  0598                     	;# 
   271  0599                     	;# 
   272  059A                     	;# 
   273  059B                     	;# 
   274  059B                     	;# 
   275  059C                     	;# 
   276  059D                     	;# 
   277  060C                     	;# 
   278  060C                     	;# 
   279  060D                     	;# 
   280  060E                     	;# 
   281  060F                     	;# 
   282  060F                     	;# 
   283  0610                     	;# 
   284  0611                     	;# 
   285  0612                     	;# 
   286  0613                     	;# 
   287  0614                     	;# 
   288  0617                     	;# 
   289  0617                     	;# 
   290  0618                     	;# 
   291  0619                     	;# 
   292  061A                     	;# 
   293  061A                     	;# 
   294  061B                     	;# 
   295  061C                     	;# 
   296  0691                     	;# 
   297  0692                     	;# 
   298  0693                     	;# 
   299  0694                     	;# 
   300  0695                     	;# 
   301  0696                     	;# 
   302  0697                     	;# 
   303  0699                     	;# 
   304  069A                     	;# 
   305  0711                     	;# 
   306  0712                     	;# 
   307  0713                     	;# 
   308  0714                     	;# 
   309  0715                     	;# 
   310  0718                     	;# 
   311  0718                     	;# 
   312  0719                     	;# 
   313  071A                     	;# 
   314  071A                     	;# 
   315  071B                     	;# 
   316  071C                     	;# 
   317  071D                     	;# 
   318  0791                     	;# 
   319  0791                     	;# 
   320  0792                     	;# 
   321  0793                     	;# 
   322  0793                     	;# 
   323  0794                     	;# 
   324  0795                     	;# 
   325  0795                     	;# 
   326  0796                     	;# 
   327  0797                     	;# 
   328  0797                     	;# 
   329  0798                     	;# 
   330  0799                     	;# 
   331  079A                     	;# 
   332  080C                     	;# 
   333  080C                     	;# 
   334  080D                     	;# 
   335  080E                     	;# 
   336  080E                     	;# 
   337  080F                     	;# 
   338  0810                     	;# 
   339  0810                     	;# 
   340  0811                     	;# 
   341  0812                     	;# 
   342  0812                     	;# 
   343  0813                     	;# 
   344  0814                     	;# 
   345  0815                     	;# 
   346  0816                     	;# 
   347  0817                     	;# 
   348  0818                     	;# 
   349  0819                     	;# 
   350  081A                     	;# 
   351  081A                     	;# 
   352  081B                     	;# 
   353  081C                     	;# 
   354  081C                     	;# 
   355  081D                     	;# 
   356  088C                     	;# 
   357  088D                     	;# 
   358  088E                     	;# 
   359  088F                     	;# 
   360  088F                     	;# 
   361  0890                     	;# 
   362  0891                     	;# 
   363  0892                     	;# 
   364  0893                     	;# 
   365  0893                     	;# 
   366  0894                     	;# 
   367  0895                     	;# 
   368  0896                     	;# 
   369  0897                     	;# 
   370  0897                     	;# 
   371  0898                     	;# 
   372  0899                     	;# 
   373  0D8C                     	;# 
   374  0D8C                     	;# 
   375  0D8D                     	;# 
   376  0D8E                     	;# 
   377  0D8F                     	;# 
   378  0D8F                     	;# 
   379  0D90                     	;# 
   380  0D91                     	;# 
   381  0D92                     	;# 
   382  0D92                     	;# 
   383  0D93                     	;# 
   384  0D94                     	;# 
   385  0D95                     	;# 
   386  0D95                     	;# 
   387  0D96                     	;# 
   388  0D97                     	;# 
   389  0D98                     	;# 
   390  0D99                     	;# 
   391  0D9A                     	;# 
   392  0D9B                     	;# 
   393  0D9C                     	;# 
   394  0D9D                     	;# 
   395  0D9E                     	;# 
   396  0D9E                     	;# 
   397  0D9F                     	;# 
   398  0DA0                     	;# 
   399  0DA1                     	;# 
   400  0DA1                     	;# 
   401  0DA2                     	;# 
   402  0DA3                     	;# 
   403  0DA4                     	;# 
   404  0DA4                     	;# 
   405  0DA5                     	;# 
   406  0DA6                     	;# 
   407  0DA7                     	;# 
   408  0DA7                     	;# 
   409  0DA8                     	;# 
   410  0DA9                     	;# 
   411  0DAA                     	;# 
   412  0DAB                     	;# 
   413  0DAC                     	;# 
   414  0DAD                     	;# 
   415  0DAE                     	;# 
   416  0DAF                     	;# 
   417  0E0F                     	;# 
   418  0E10                     	;# 
   419  0E11                     	;# 
   420  0E12                     	;# 
   421  0E13                     	;# 
   422  0E14                     	;# 
   423  0E15                     	;# 
   424  0E16                     	;# 
   425  0E17                     	;# 
   426  0E18                     	;# 
   427  0E19                     	;# 
   428  0E1A                     	;# 
   429  0E1B                     	;# 
   430  0E1C                     	;# 
   431  0E1D                     	;# 
   432  0E1E                     	;# 
   433  0E1F                     	;# 
   434  0E20                     	;# 
   435  0E21                     	;# 
   436  0E22                     	;# 
   437  0E23                     	;# 
   438  0E24                     	;# 
   439  0E25                     	;# 
   440  0E26                     	;# 
   441  0E27                     	;# 
   442  0E28                     	;# 
   443  0E29                     	;# 
   444  0E2A                     	;# 
   445  0E2B                     	;# 
   446  0E2C                     	;# 
   447  0E2D                     	;# 
   448  0E2E                     	;# 
   449  0E90                     	;# 
   450  0E91                     	;# 
   451  0E92                     	;# 
   452  0E94                     	;# 
   453  0E95                     	;# 
   454  0E9C                     	;# 
   455  0E9D                     	;# 
   456  0E9E                     	;# 
   457  0E9F                     	;# 
   458  0EA0                     	;# 
   459  0EA1                     	;# 
   460  0EA2                     	;# 
   461  0EA3                     	;# 
   462  0EA4                     	;# 
   463  0EA5                     	;# 
   464  0EA6                     	;# 
   465  0EA7                     	;# 
   466  0F0F                     	;# 
   467  0F10                     	;# 
   468  0F11                     	;# 
   469  0F12                     	;# 
   470  0F13                     	;# 
   471  0F14                     	;# 
   472  0F15                     	;# 
   473  0F16                     	;# 
   474  0F17                     	;# 
   475  0F18                     	;# 
   476  0F19                     	;# 
   477  0F1A                     	;# 
   478  0F1B                     	;# 
   479  0F1C                     	;# 
   480  0F1D                     	;# 
   481  0F1E                     	;# 
   482  0F1F                     	;# 
   483  0F20                     	;# 
   484  0F21                     	;# 
   485  0F22                     	;# 
   486  0F23                     	;# 
   487  0F24                     	;# 
   488  0F25                     	;# 
   489  0F26                     	;# 
   490  0F27                     	;# 
   491  0F28                     	;# 
   492  0F29                     	;# 
   493  0F2A                     	;# 
   494  0F2B                     	;# 
   495  0F2C                     	;# 
   496  0F2D                     	;# 
   497  0F2E                     	;# 
   498  0F2F                     	;# 
   499  0F30                     	;# 
   500  0F31                     	;# 
   501  0F32                     	;# 
   502  0F33                     	;# 
   503  0F34                     	;# 
   504  0F35                     	;# 
   505  0F36                     	;# 
   506  0F37                     	;# 
   507  0FE4                     	;# 
   508  0FE5                     	;# 
   509  0FE6                     	;# 
   510  0FE7                     	;# 
   511  0FE8                     	;# 
   512  0FE9                     	;# 
   513  0FEA                     	;# 
   514  0FEB                     	;# 
   515  0FED                     	;# 
   516  0FEE                     	;# 
   517  0FEF                     	;# 
   518  0000                     	;# 
   519  0001                     	;# 
   520  0002                     	;# 
   521  0003                     	;# 
   522  0004                     	;# 
   523  0005                     	;# 
   524  0006                     	;# 
   525  0007                     	;# 
   526  0008                     	;# 
   527  0009                     	;# 
   528  000A                     	;# 
   529  000B                     	;# 
   530  000C                     	;# 
   531  000D                     	;# 
   532  000E                     	;# 
   533  0010                     	;# 
   534  0011                     	;# 
   535  0012                     	;# 
   536  0013                     	;# 
   537  0014                     	;# 
   538  0015                     	;# 
   539  0016                     	;# 
   540  0016                     	;# 
   541  0017                     	;# 
   542  0018                     	;# 
   543  0019                     	;# 
   544  001A                     	;# 
   545  001A                     	;# 
   546  001B                     	;# 
   547  001B                     	;# 
   548  001C                     	;# 
   549  001D                     	;# 
   550  001E                     	;# 
   551  001F                     	;# 
   552  008C                     	;# 
   553  008D                     	;# 
   554  008E                     	;# 
   555  0090                     	;# 
   556  0091                     	;# 
   557  0092                     	;# 
   558  0093                     	;# 
   559  0094                     	;# 
   560  0095                     	;# 
   561  0096                     	;# 
   562  0098                     	;# 
   563  0099                     	;# 
   564  009A                     	;# 
   565  009B                     	;# 
   566  009B                     	;# 
   567  009C                     	;# 
   568  009D                     	;# 
   569  009E                     	;# 
   570  009F                     	;# 
   571  010C                     	;# 
   572  010D                     	;# 
   573  010E                     	;# 
   574  0111                     	;# 
   575  0112                     	;# 
   576  0113                     	;# 
   577  0114                     	;# 
   578  0115                     	;# 
   579  0116                     	;# 
   580  0117                     	;# 
   581  0118                     	;# 
   582  0119                     	;# 
   583  011C                     	;# 
   584  018C                     	;# 
   585  018D                     	;# 
   586  018E                     	;# 
   587  0191                     	;# 
   588  0191                     	;# 
   589  0192                     	;# 
   590  0193                     	;# 
   591  0193                     	;# 
   592  0194                     	;# 
   593  0195                     	;# 
   594  0196                     	;# 
   595  0197                     	;# 
   596  0199                     	;# 
   597  0199                     	;# 
   598  0199                     	;# 
   599  019A                     	;# 
   600  019A                     	;# 
   601  019A                     	;# 
   602  019B                     	;# 
   603  019B                     	;# 
   604  019B                     	;# 
   605  019B                     	;# 
   606  019B                     	;# 
   607  019C                     	;# 
   608  019C                     	;# 
   609  019C                     	;# 
   610  019D                     	;# 
   611  019D                     	;# 
   612  019D                     	;# 
   613  019E                     	;# 
   614  019E                     	;# 
   615  019E                     	;# 
   616  019F                     	;# 
   617  019F                     	;# 
   618  019F                     	;# 
   619  019F                     	;# 
   620  019F                     	;# 
   621  020C                     	;# 
   622  020D                     	;# 
   623  020E                     	;# 
   624  0211                     	;# 
   625  0211                     	;# 
   626  0212                     	;# 
   627  0212                     	;# 
   628  0213                     	;# 
   629  0213                     	;# 
   630  0214                     	;# 
   631  0214                     	;# 
   632  0215                     	;# 
   633  0215                     	;# 
   634  0215                     	;# 
   635  0215                     	;# 
   636  0216                     	;# 
   637  0216                     	;# 
   638  0217                     	;# 
   639  0217                     	;# 
   640  028C                     	;# 
   641  028D                     	;# 
   642  028E                     	;# 
   643  0291                     	;# 
   644  0291                     	;# 
   645  0292                     	;# 
   646  0293                     	;# 
   647  0294                     	;# 
   648  0298                     	;# 
   649  0298                     	;# 
   650  0299                     	;# 
   651  029A                     	;# 
   652  029B                     	;# 
   653  029E                     	;# 
   654  030C                     	;# 
   655  030D                     	;# 
   656  030E                     	;# 
   657  038C                     	;# 
   658  038D                     	;# 
   659  038E                     	;# 
   660  0391                     	;# 
   661  0392                     	;# 
   662  0393                     	;# 
   663  0394                     	;# 
   664  0395                     	;# 
   665  0396                     	;# 
   666  0397                     	;# 
   667  0398                     	;# 
   668  0399                     	;# 
   669  040E                     	;# 
   670  0413                     	;# 
   671  0413                     	;# 
   672  0414                     	;# 
   673  0414                     	;# 
   674  0415                     	;# 
   675  0416                     	;# 
   676  0417                     	;# 
   677  0418                     	;# 
   678  041A                     	;# 
   679  041A                     	;# 
   680  041B                     	;# 
   681  041B                     	;# 
   682  041C                     	;# 
   683  041D                     	;# 
   684  041E                     	;# 
   685  041F                     	;# 
   686  0493                     	;# 
   687  0494                     	;# 
   688  0495                     	;# 
   689  0496                     	;# 
   690  049A                     	;# 
   691  049B                     	;# 
   692  049C                     	;# 
   693  049D                     	;# 
   694  058C                     	;# 
   695  058C                     	;# 
   696  058D                     	;# 
   697  058E                     	;# 
   698  058E                     	;# 
   699  058F                     	;# 
   700  0590                     	;# 
   701  0590                     	;# 
   702  0591                     	;# 
   703  0592                     	;# 
   704  0592                     	;# 
   705  0593                     	;# 
   706  0594                     	;# 
   707  0594                     	;# 
   708  0595                     	;# 
   709  0596                     	;# 
   710  0596                     	;# 
   711  0597                     	;# 
   712  0598                     	;# 
   713  0599                     	;# 
   714  059A                     	;# 
   715  059B                     	;# 
   716  059B                     	;# 
   717  059C                     	;# 
   718  059D                     	;# 
   719  060C                     	;# 
   720  060C                     	;# 
   721  060D                     	;# 
   722  060E                     	;# 
   723  060F                     	;# 
   724  060F                     	;# 
   725  0610                     	;# 
   726  0611                     	;# 
   727  0612                     	;# 
   728  0613                     	;# 
   729  0614                     	;# 
   730  0617                     	;# 
   731  0617                     	;# 
   732  0618                     	;# 
   733  0619                     	;# 
   734  061A                     	;# 
   735  061A                     	;# 
   736  061B                     	;# 
   737  061C                     	;# 
   738  0691                     	;# 
   739  0692                     	;# 
   740  0693                     	;# 
   741  0694                     	;# 
   742  0695                     	;# 
   743  0696                     	;# 
   744  0697                     	;# 
   745  0699                     	;# 
   746  069A                     	;# 
   747  0711                     	;# 
   748  0712                     	;# 
   749  0713                     	;# 
   750  0714                     	;# 
   751  0715                     	;# 
   752  0718                     	;# 
   753  0718                     	;# 
   754  0719                     	;# 
   755  071A                     	;# 
   756  071A                     	;# 
   757  071B                     	;# 
   758  071C                     	;# 
   759  071D                     	;# 
   760  0791                     	;# 
   761  0791                     	;# 
   762  0792                     	;# 
   763  0793                     	;# 
   764  0793                     	;# 
   765  0794                     	;# 
   766  0795                     	;# 
   767  0795                     	;# 
   768  0796                     	;# 
   769  0797                     	;# 
   770  0797                     	;# 
   771  0798                     	;# 
   772  0799                     	;# 
   773  079A                     	;# 
   774  080C                     	;# 
   775  080C                     	;# 
   776  080D                     	;# 
   777  080E                     	;# 
   778  080E                     	;# 
   779  080F                     	;# 
   780  0810                     	;# 
   781  0810                     	;# 
   782  0811                     	;# 
   783  0812                     	;# 
   784  0812                     	;# 
   785  0813                     	;# 
   786  0814                     	;# 
   787  0815                     	;# 
   788  0816                     	;# 
   789  0817                     	;# 
   790  0818                     	;# 
   791  0819                     	;# 
   792  081A                     	;# 
   793  081A                     	;# 
   794  081B                     	;# 
   795  081C                     	;# 
   796  081C                     	;# 
   797  081D                     	;# 
   798  088C                     	;# 
   799  088D                     	;# 
   800  088E                     	;# 
   801  088F                     	;# 
   802  088F                     	;# 
   803  0890                     	;# 
   804  0891                     	;# 
   805  0892                     	;# 
   806  0893                     	;# 
   807  0893                     	;# 
   808  0894                     	;# 
   809  0895                     	;# 
   810  0896                     	;# 
   811  0897                     	;# 
   812  0897                     	;# 
   813  0898                     	;# 
   814  0899                     	;# 
   815  0D8C                     	;# 
   816  0D8C                     	;# 
   817  0D8D                     	;# 
   818  0D8E                     	;# 
   819  0D8F                     	;# 
   820  0D8F                     	;# 
   821  0D90                     	;# 
   822  0D91                     	;# 
   823  0D92                     	;# 
   824  0D92                     	;# 
   825  0D93                     	;# 
   826  0D94                     	;# 
   827  0D95                     	;# 
   828  0D95                     	;# 
   829  0D96                     	;# 
   830  0D97                     	;# 
   831  0D98                     	;# 
   832  0D99                     	;# 
   833  0D9A                     	;# 
   834  0D9B                     	;# 
   835  0D9C                     	;# 
   836  0D9D                     	;# 
   837  0D9E                     	;# 
   838  0D9E                     	;# 
   839  0D9F                     	;# 
   840  0DA0                     	;# 
   841  0DA1                     	;# 
   842  0DA1                     	;# 
   843  0DA2                     	;# 
   844  0DA3                     	;# 
   845  0DA4                     	;# 
   846  0DA4                     	;# 
   847  0DA5                     	;# 
   848  0DA6                     	;# 
   849  0DA7                     	;# 
   850  0DA7                     	;# 
   851  0DA8                     	;# 
   852  0DA9                     	;# 
   853  0DAA                     	;# 
   854  0DAB                     	;# 
   855  0DAC                     	;# 
   856  0DAD                     	;# 
   857  0DAE                     	;# 
   858  0DAF                     	;# 
   859  0E0F                     	;# 
   860  0E10                     	;# 
   861  0E11                     	;# 
   862  0E12                     	;# 
   863  0E13                     	;# 
   864  0E14                     	;# 
   865  0E15                     	;# 
   866  0E16                     	;# 
   867  0E17                     	;# 
   868  0E18                     	;# 
   869  0E19                     	;# 
   870  0E1A                     	;# 
   871  0E1B                     	;# 
   872  0E1C                     	;# 
   873  0E1D                     	;# 
   874  0E1E                     	;# 
   875  0E1F                     	;# 
   876  0E20                     	;# 
   877  0E21                     	;# 
   878  0E22                     	;# 
   879  0E23                     	;# 
   880  0E24                     	;# 
   881  0E25                     	;# 
   882  0E26                     	;# 
   883  0E27                     	;# 
   884  0E28                     	;# 
   885  0E29                     	;# 
   886  0E2A                     	;# 
   887  0E2B                     	;# 
   888  0E2C                     	;# 
   889  0E2D                     	;# 
   890  0E2E                     	;# 
   891  0E90                     	;# 
   892  0E91                     	;# 
   893  0E92                     	;# 
   894  0E94                     	;# 
   895  0E95                     	;# 
   896  0E9C                     	;# 
   897  0E9D                     	;# 
   898  0E9E                     	;# 
   899  0E9F                     	;# 
   900  0EA0                     	;# 
   901  0EA1                     	;# 
   902  0EA2                     	;# 
   903  0EA3                     	;# 
   904  0EA4                     	;# 
   905  0EA5                     	;# 
   906  0EA6                     	;# 
   907  0EA7                     	;# 
   908  0F0F                     	;# 
   909  0F10                     	;# 
   910  0F11                     	;# 
   911  0F12                     	;# 
   912  0F13                     	;# 
   913  0F14                     	;# 
   914  0F15                     	;# 
   915  0F16                     	;# 
   916  0F17                     	;# 
   917  0F18                     	;# 
   918  0F19                     	;# 
   919  0F1A                     	;# 
   920  0F1B                     	;# 
   921  0F1C                     	;# 
   922  0F1D                     	;# 
   923  0F1E                     	;# 
   924  0F1F                     	;# 
   925  0F20                     	;# 
   926  0F21                     	;# 
   927  0F22                     	;# 
   928  0F23                     	;# 
   929  0F24                     	;# 
   930  0F25                     	;# 
   931  0F26                     	;# 
   932  0F27                     	;# 
   933  0F28                     	;# 
   934  0F29                     	;# 
   935  0F2A                     	;# 
   936  0F2B                     	;# 
   937  0F2C                     	;# 
   938  0F2D                     	;# 
   939  0F2E                     	;# 
   940  0F2F                     	;# 
   941  0F30                     	;# 
   942  0F31                     	;# 
   943  0F32                     	;# 
   944  0F33                     	;# 
   945  0F34                     	;# 
   946  0F35                     	;# 
   947  0F36                     	;# 
   948  0F37                     	;# 
   949  0FE4                     	;# 
   950  0FE5                     	;# 
   951  0FE6                     	;# 
   952  0FE7                     	;# 
   953  0FE8                     	;# 
   954  0FE9                     	;# 
   955  0FEA                     	;# 
   956  0FEB                     	;# 
   957  0FED                     	;# 
   958  0FEE                     	;# 
   959  0FEF                     	;# 
   960  0000                     	;# 
   961  0001                     	;# 
   962  0002                     	;# 
   963  0003                     	;# 
   964  0004                     	;# 
   965  0005                     	;# 
   966  0006                     	;# 
   967  0007                     	;# 
   968  0008                     	;# 
   969  0009                     	;# 
   970  000A                     	;# 
   971  000B                     	;# 
   972  000C                     	;# 
   973  000D                     	;# 
   974  000E                     	;# 
   975  0010                     	;# 
   976  0011                     	;# 
   977  0012                     	;# 
   978  0013                     	;# 
   979  0014                     	;# 
   980  0015                     	;# 
   981  0016                     	;# 
   982  0016                     	;# 
   983  0017                     	;# 
   984  0018                     	;# 
   985  0019                     	;# 
   986  001A                     	;# 
   987  001A                     	;# 
   988  001B                     	;# 
   989  001B                     	;# 
   990  001C                     	;# 
   991  001D                     	;# 
   992  001E                     	;# 
   993  001F                     	;# 
   994  008C                     	;# 
   995  008D                     	;# 
   996  008E                     	;# 
   997  0090                     	;# 
   998  0091                     	;# 
   999  0092                     	;# 
  1000  0093                     	;# 
  1001  0094                     	;# 
  1002  0095                     	;# 
  1003  0096                     	;# 
  1004  0098                     	;# 
  1005  0099                     	;# 
  1006  009A                     	;# 
  1007  009B                     	;# 
  1008  009B                     	;# 
  1009  009C                     	;# 
  1010  009D                     	;# 
  1011  009E                     	;# 
  1012  009F                     	;# 
  1013  010C                     	;# 
  1014  010D                     	;# 
  1015  010E                     	;# 
  1016  0111                     	;# 
  1017  0112                     	;# 
  1018  0113                     	;# 
  1019  0114                     	;# 
  1020  0115                     	;# 
  1021  0116                     	;# 
  1022  0117                     	;# 
  1023  0118                     	;# 
  1024  0119                     	;# 
  1025  011C                     	;# 
  1026  018C                     	;# 
  1027  018D                     	;# 
  1028  018E                     	;# 
  1029  0191                     	;# 
  1030  0191                     	;# 
  1031  0192                     	;# 
  1032  0193                     	;# 
  1033  0193                     	;# 
  1034  0194                     	;# 
  1035  0195                     	;# 
  1036  0196                     	;# 
  1037  0197                     	;# 
  1038  0199                     	;# 
  1039  0199                     	;# 
  1040  0199                     	;# 
  1041  019A                     	;# 
  1042  019A                     	;# 
  1043  019A                     	;# 
  1044  019B                     	;# 
  1045  019B                     	;# 
  1046  019B                     	;# 
  1047  019B                     	;# 
  1048  019B                     	;# 
  1049  019C                     	;# 
  1050  019C                     	;# 
  1051  019C                     	;# 
  1052  019D                     	;# 
  1053  019D                     	;# 
  1054  019D                     	;# 
  1055  019E                     	;# 
  1056  019E                     	;# 
  1057  019E                     	;# 
  1058  019F                     	;# 
  1059  019F                     	;# 
  1060  019F                     	;# 
  1061  019F                     	;# 
  1062  019F                     	;# 
  1063  020C                     	;# 
  1064  020D                     	;# 
  1065  020E                     	;# 
  1066  0211                     	;# 
  1067  0211                     	;# 
  1068  0212                     	;# 
  1069  0212                     	;# 
  1070  0213                     	;# 
  1071  0213                     	;# 
  1072  0214                     	;# 
  1073  0214                     	;# 
  1074  0215                     	;# 
  1075  0215                     	;# 
  1076  0215                     	;# 
  1077  0215                     	;# 
  1078  0216                     	;# 
  1079  0216                     	;# 
  1080  0217                     	;# 
  1081  0217                     	;# 
  1082  028C                     	;# 
  1083  028D                     	;# 
  1084  028E                     	;# 
  1085  0291                     	;# 
  1086  0291                     	;# 
  1087  0292                     	;# 
  1088  0293                     	;# 
  1089  0294                     	;# 
  1090  0298                     	;# 
  1091  0298                     	;# 
  1092  0299                     	;# 
  1093  029A                     	;# 
  1094  029B                     	;# 
  1095  029E                     	;# 
  1096  030C                     	;# 
  1097  030D                     	;# 
  1098  030E                     	;# 
  1099  038C                     	;# 
  1100  038D                     	;# 
  1101  038E                     	;# 
  1102  0391                     	;# 
  1103  0392                     	;# 
  1104  0393                     	;# 
  1105  0394                     	;# 
  1106  0395                     	;# 
  1107  0396                     	;# 
  1108  0397                     	;# 
  1109  0398                     	;# 
  1110  0399                     	;# 
  1111  040E                     	;# 
  1112  0413                     	;# 
  1113  0413                     	;# 
  1114  0414                     	;# 
  1115  0414                     	;# 
  1116  0415                     	;# 
  1117  0416                     	;# 
  1118  0417                     	;# 
  1119  0418                     	;# 
  1120  041A                     	;# 
  1121  041A                     	;# 
  1122  041B                     	;# 
  1123  041B                     	;# 
  1124  041C                     	;# 
  1125  041D                     	;# 
  1126  041E                     	;# 
  1127  041F                     	;# 
  1128  0493                     	;# 
  1129  0494                     	;# 
  1130  0495                     	;# 
  1131  0496                     	;# 
  1132  049A                     	;# 
  1133  049B                     	;# 
  1134  049C                     	;# 
  1135  049D                     	;# 
  1136  058C                     	;# 
  1137  058C                     	;# 
  1138  058D                     	;# 
  1139  058E                     	;# 
  1140  058E                     	;# 
  1141  058F                     	;# 
  1142  0590                     	;# 
  1143  0590                     	;# 
  1144  0591                     	;# 
  1145  0592                     	;# 
  1146  0592                     	;# 
  1147  0593                     	;# 
  1148  0594                     	;# 
  1149  0594                     	;# 
  1150  0595                     	;# 
  1151  0596                     	;# 
  1152  0596                     	;# 
  1153  0597                     	;# 
  1154  0598                     	;# 
  1155  0599                     	;# 
  1156  059A                     	;# 
  1157  059B                     	;# 
  1158  059B                     	;# 
  1159  059C                     	;# 
  1160  059D                     	;# 
  1161  060C                     	;# 
  1162  060C                     	;# 
  1163  060D                     	;# 
  1164  060E                     	;# 
  1165  060F                     	;# 
  1166  060F                     	;# 
  1167  0610                     	;# 
  1168  0611                     	;# 
  1169  0612                     	;# 
  1170  0613                     	;# 
  1171  0614                     	;# 
  1172  0617                     	;# 
  1173  0617                     	;# 
  1174  0618                     	;# 
  1175  0619                     	;# 
  1176  061A                     	;# 
  1177  061A                     	;# 
  1178  061B                     	;# 
  1179  061C                     	;# 
  1180  0691                     	;# 
  1181  0692                     	;# 
  1182  0693                     	;# 
  1183  0694                     	;# 
  1184  0695                     	;# 
  1185  0696                     	;# 
  1186  0697                     	;# 
  1187  0699                     	;# 
  1188  069A                     	;# 
  1189  0711                     	;# 
  1190  0712                     	;# 
  1191  0713                     	;# 
  1192  0714                     	;# 
  1193  0715                     	;# 
  1194  0718                     	;# 
  1195  0718                     	;# 
  1196  0719                     	;# 
  1197  071A                     	;# 
  1198  071A                     	;# 
  1199  071B                     	;# 
  1200  071C                     	;# 
  1201  071D                     	;# 
  1202  0791                     	;# 
  1203  0791                     	;# 
  1204  0792                     	;# 
  1205  0793                     	;# 
  1206  0793                     	;# 
  1207  0794                     	;# 
  1208  0795                     	;# 
  1209  0795                     	;# 
  1210  0796                     	;# 
  1211  0797                     	;# 
  1212  0797                     	;# 
  1213  0798                     	;# 
  1214  0799                     	;# 
  1215  079A                     	;# 
  1216  080C                     	;# 
  1217  080C                     	;# 
  1218  080D                     	;# 
  1219  080E                     	;# 
  1220  080E                     	;# 
  1221  080F                     	;# 
  1222  0810                     	;# 
  1223  0810                     	;# 
  1224  0811                     	;# 
  1225  0812                     	;# 
  1226  0812                     	;# 
  1227  0813                     	;# 
  1228  0814                     	;# 
  1229  0815                     	;# 
  1230  0816                     	;# 
  1231  0817                     	;# 
  1232  0818                     	;# 
  1233  0819                     	;# 
  1234  081A                     	;# 
  1235  081A                     	;# 
  1236  081B                     	;# 
  1237  081C                     	;# 
  1238  081C                     	;# 
  1239  081D                     	;# 
  1240  088C                     	;# 
  1241  088D                     	;# 
  1242  088E                     	;# 
  1243  088F                     	;# 
  1244  088F                     	;# 
  1245  0890                     	;# 
  1246  0891                     	;# 
  1247  0892                     	;# 
  1248  0893                     	;# 
  1249  0893                     	;# 
  1250  0894                     	;# 
  1251  0895                     	;# 
  1252  0896                     	;# 
  1253  0897                     	;# 
  1254  0897                     	;# 
  1255  0898                     	;# 
  1256  0899                     	;# 
  1257  0D8C                     	;# 
  1258  0D8C                     	;# 
  1259  0D8D                     	;# 
  1260  0D8E                     	;# 
  1261  0D8F                     	;# 
  1262  0D8F                     	;# 
  1263  0D90                     	;# 
  1264  0D91                     	;# 
  1265  0D92                     	;# 
  1266  0D92                     	;# 
  1267  0D93                     	;# 
  1268  0D94                     	;# 
  1269  0D95                     	;# 
  1270  0D95                     	;# 
  1271  0D96                     	;# 
  1272  0D97                     	;# 
  1273  0D98                     	;# 
  1274  0D99                     	;# 
  1275  0D9A                     	;# 
  1276  0D9B                     	;# 
  1277  0D9C                     	;# 
  1278  0D9D                     	;# 
  1279  0D9E                     	;# 
  1280  0D9E                     	;# 
  1281  0D9F                     	;# 
  1282  0DA0                     	;# 
  1283  0DA1                     	;# 
  1284  0DA1                     	;# 
  1285  0DA2                     	;# 
  1286  0DA3                     	;# 
  1287  0DA4                     	;# 
  1288  0DA4                     	;# 
  1289  0DA5                     	;# 
  1290  0DA6                     	;# 
  1291  0DA7                     	;# 
  1292  0DA7                     	;# 
  1293  0DA8                     	;# 
  1294  0DA9                     	;# 
  1295  0DAA                     	;# 
  1296  0DAB                     	;# 
  1297  0DAC                     	;# 
  1298  0DAD                     	;# 
  1299  0DAE                     	;# 
  1300  0DAF                     	;# 
  1301  0E0F                     	;# 
  1302  0E10                     	;# 
  1303  0E11                     	;# 
  1304  0E12                     	;# 
  1305  0E13                     	;# 
  1306  0E14                     	;# 
  1307  0E15                     	;# 
  1308  0E16                     	;# 
  1309  0E17                     	;# 
  1310  0E18                     	;# 
  1311  0E19                     	;# 
  1312  0E1A                     	;# 
  1313  0E1B                     	;# 
  1314  0E1C                     	;# 
  1315  0E1D                     	;# 
  1316  0E1E                     	;# 
  1317  0E1F                     	;# 
  1318  0E20                     	;# 
  1319  0E21                     	;# 
  1320  0E22                     	;# 
  1321  0E23                     	;# 
  1322  0E24                     	;# 
  1323  0E25                     	;# 
  1324  0E26                     	;# 
  1325  0E27                     	;# 
  1326  0E28                     	;# 
  1327  0E29                     	;# 
  1328  0E2A                     	;# 
  1329  0E2B                     	;# 
  1330  0E2C                     	;# 
  1331  0E2D                     	;# 
  1332  0E2E                     	;# 
  1333  0E90                     	;# 
  1334  0E91                     	;# 
  1335  0E92                     	;# 
  1336  0E94                     	;# 
  1337  0E95                     	;# 
  1338  0E9C                     	;# 
  1339  0E9D                     	;# 
  1340  0E9E                     	;# 
  1341  0E9F                     	;# 
  1342  0EA0                     	;# 
  1343  0EA1                     	;# 
  1344  0EA2                     	;# 
  1345  0EA3                     	;# 
  1346  0EA4                     	;# 
  1347  0EA5                     	;# 
  1348  0EA6                     	;# 
  1349  0EA7                     	;# 
  1350  0F0F                     	;# 
  1351  0F10                     	;# 
  1352  0F11                     	;# 
  1353  0F12                     	;# 
  1354  0F13                     	;# 
  1355  0F14                     	;# 
  1356  0F15                     	;# 
  1357  0F16                     	;# 
  1358  0F17                     	;# 
  1359  0F18                     	;# 
  1360  0F19                     	;# 
  1361  0F1A                     	;# 
  1362  0F1B                     	;# 
  1363  0F1C                     	;# 
  1364  0F1D                     	;# 
  1365  0F1E                     	;# 
  1366  0F1F                     	;# 
  1367  0F20                     	;# 
  1368  0F21                     	;# 
  1369  0F22                     	;# 
  1370  0F23                     	;# 
  1371  0F24                     	;# 
  1372  0F25                     	;# 
  1373  0F26                     	;# 
  1374  0F27                     	;# 
  1375  0F28                     	;# 
  1376  0F29                     	;# 
  1377  0F2A                     	;# 
  1378  0F2B                     	;# 
  1379  0F2C                     	;# 
  1380  0F2D                     	;# 
  1381  0F2E                     	;# 
  1382  0F2F                     	;# 
  1383  0F30                     	;# 
  1384  0F31                     	;# 
  1385  0F32                     	;# 
  1386  0F33                     	;# 
  1387  0F34                     	;# 
  1388  0F35                     	;# 
  1389  0F36                     	;# 
  1390  0F37                     	;# 
  1391  0FE4                     	;# 
  1392  0FE5                     	;# 
  1393  0FE6                     	;# 
  1394  0FE7                     	;# 
  1395  0FE8                     	;# 
  1396  0FE9                     	;# 
  1397  0FEA                     	;# 
  1398  0FEB                     	;# 
  1399  0FED                     	;# 
  1400  0FEE                     	;# 
  1401  0FEF                     	;# 
  1402  0000                     	;# 
  1403  0001                     	;# 
  1404  0002                     	;# 
  1405  0003                     	;# 
  1406  0004                     	;# 
  1407  0005                     	;# 
  1408  0006                     	;# 
  1409  0007                     	;# 
  1410  0008                     	;# 
  1411  0009                     	;# 
  1412  000A                     	;# 
  1413  000B                     	;# 
  1414  000C                     	;# 
  1415  000D                     	;# 
  1416  000E                     	;# 
  1417  0010                     	;# 
  1418  0011                     	;# 
  1419  0012                     	;# 
  1420  0013                     	;# 
  1421  0014                     	;# 
  1422  0015                     	;# 
  1423  0016                     	;# 
  1424  0016                     	;# 
  1425  0017                     	;# 
  1426  0018                     	;# 
  1427  0019                     	;# 
  1428  001A                     	;# 
  1429  001A                     	;# 
  1430  001B                     	;# 
  1431  001B                     	;# 
  1432  001C                     	;# 
  1433  001D                     	;# 
  1434  001E                     	;# 
  1435  001F                     	;# 
  1436  008C                     	;# 
  1437  008D                     	;# 
  1438  008E                     	;# 
  1439  0090                     	;# 
  1440  0091                     	;# 
  1441  0092                     	;# 
  1442  0093                     	;# 
  1443  0094                     	;# 
  1444  0095                     	;# 
  1445  0096                     	;# 
  1446  0098                     	;# 
  1447  0099                     	;# 
  1448  009A                     	;# 
  1449  009B                     	;# 
  1450  009B                     	;# 
  1451  009C                     	;# 
  1452  009D                     	;# 
  1453  009E                     	;# 
  1454  009F                     	;# 
  1455  010C                     	;# 
  1456  010D                     	;# 
  1457  010E                     	;# 
  1458  0111                     	;# 
  1459  0112                     	;# 
  1460  0113                     	;# 
  1461  0114                     	;# 
  1462  0115                     	;# 
  1463  0116                     	;# 
  1464  0117                     	;# 
  1465  0118                     	;# 
  1466  0119                     	;# 
  1467  011C                     	;# 
  1468  018C                     	;# 
  1469  018D                     	;# 
  1470  018E                     	;# 
  1471  0191                     	;# 
  1472  0191                     	;# 
  1473  0192                     	;# 
  1474  0193                     	;# 
  1475  0193                     	;# 
  1476  0194                     	;# 
  1477  0195                     	;# 
  1478  0196                     	;# 
  1479  0197                     	;# 
  1480  0199                     	;# 
  1481  0199                     	;# 
  1482  0199                     	;# 
  1483  019A                     	;# 
  1484  019A                     	;# 
  1485  019A                     	;# 
  1486  019B                     	;# 
  1487  019B                     	;# 
  1488  019B                     	;# 
  1489  019B                     	;# 
  1490  019B                     	;# 
  1491  019C                     	;# 
  1492  019C                     	;# 
  1493  019C                     	;# 
  1494  019D                     	;# 
  1495  019D                     	;# 
  1496  019D                     	;# 
  1497  019E                     	;# 
  1498  019E                     	;# 
  1499  019E                     	;# 
  1500  019F                     	;# 
  1501  019F                     	;# 
  1502  019F                     	;# 
  1503  019F                     	;# 
  1504  019F                     	;# 
  1505  020C                     	;# 
  1506  020D                     	;# 
  1507  020E                     	;# 
  1508  0211                     	;# 
  1509  0211                     	;# 
  1510  0212                     	;# 
  1511  0212                     	;# 
  1512  0213                     	;# 
  1513  0213                     	;# 
  1514  0214                     	;# 
  1515  0214                     	;# 
  1516  0215                     	;# 
  1517  0215                     	;# 
  1518  0215                     	;# 
  1519  0215                     	;# 
  1520  0216                     	;# 
  1521  0216                     	;# 
  1522  0217                     	;# 
  1523  0217                     	;# 
  1524  028C                     	;# 
  1525  028D                     	;# 
  1526  028E                     	;# 
  1527  0291                     	;# 
  1528  0291                     	;# 
  1529  0292                     	;# 
  1530  0293                     	;# 
  1531  0294                     	;# 
  1532  0298                     	;# 
  1533  0298                     	;# 
  1534  0299                     	;# 
  1535  029A                     	;# 
  1536  029B                     	;# 
  1537  029E                     	;# 
  1538  030C                     	;# 
  1539  030D                     	;# 
  1540  030E                     	;# 
  1541  038C                     	;# 
  1542  038D                     	;# 
  1543  038E                     	;# 
  1544  0391                     	;# 
  1545  0392                     	;# 
  1546  0393                     	;# 
  1547  0394                     	;# 
  1548  0395                     	;# 
  1549  0396                     	;# 
  1550  0397                     	;# 
  1551  0398                     	;# 
  1552  0399                     	;# 
  1553  040E                     	;# 
  1554  0413                     	;# 
  1555  0413                     	;# 
  1556  0414                     	;# 
  1557  0414                     	;# 
  1558  0415                     	;# 
  1559  0416                     	;# 
  1560  0417                     	;# 
  1561  0418                     	;# 
  1562  041A                     	;# 
  1563  041A                     	;# 
  1564  041B                     	;# 
  1565  041B                     	;# 
  1566  041C                     	;# 
  1567  041D                     	;# 
  1568  041E                     	;# 
  1569  041F                     	;# 
  1570  0493                     	;# 
  1571  0494                     	;# 
  1572  0495                     	;# 
  1573  0496                     	;# 
  1574  049A                     	;# 
  1575  049B                     	;# 
  1576  049C                     	;# 
  1577  049D                     	;# 
  1578  058C                     	;# 
  1579  058C                     	;# 
  1580  058D                     	;# 
  1581  058E                     	;# 
  1582  058E                     	;# 
  1583  058F                     	;# 
  1584  0590                     	;# 
  1585  0590                     	;# 
  1586  0591                     	;# 
  1587  0592                     	;# 
  1588  0592                     	;# 
  1589  0593                     	;# 
  1590  0594                     	;# 
  1591  0594                     	;# 
  1592  0595                     	;# 
  1593  0596                     	;# 
  1594  0596                     	;# 
  1595  0597                     	;# 
  1596  0598                     	;# 
  1597  0599                     	;# 
  1598  059A                     	;# 
  1599  059B                     	;# 
  1600  059B                     	;# 
  1601  059C                     	;# 
  1602  059D                     	;# 
  1603  060C                     	;# 
  1604  060C                     	;# 
  1605  060D                     	;# 
  1606  060E                     	;# 
  1607  060F                     	;# 
  1608  060F                     	;# 
  1609  0610                     	;# 
  1610  0611                     	;# 
  1611  0612                     	;# 
  1612  0613                     	;# 
  1613  0614                     	;# 
  1614  0617                     	;# 
  1615  0617                     	;# 
  1616  0618                     	;# 
  1617  0619                     	;# 
  1618  061A                     	;# 
  1619  061A                     	;# 
  1620  061B                     	;# 
  1621  061C                     	;# 
  1622  0691                     	;# 
  1623  0692                     	;# 
  1624  0693                     	;# 
  1625  0694                     	;# 
  1626  0695                     	;# 
  1627  0696                     	;# 
  1628  0697                     	;# 
  1629  0699                     	;# 
  1630  069A                     	;# 
  1631  0711                     	;# 
  1632  0712                     	;# 
  1633  0713                     	;# 
  1634  0714                     	;# 
  1635  0715                     	;# 
  1636  0718                     	;# 
  1637  0718                     	;# 
  1638  0719                     	;# 
  1639  071A                     	;# 
  1640  071A                     	;# 
  1641  071B                     	;# 
  1642  071C                     	;# 
  1643  071D                     	;# 
  1644  0791                     	;# 
  1645  0791                     	;# 
  1646  0792                     	;# 
  1647  0793                     	;# 
  1648  0793                     	;# 
  1649  0794                     	;# 
  1650  0795                     	;# 
  1651  0795                     	;# 
  1652  0796                     	;# 
  1653  0797                     	;# 
  1654  0797                     	;# 
  1655  0798                     	;# 
  1656  0799                     	;# 
  1657  079A                     	;# 
  1658  080C                     	;# 
  1659  080C                     	;# 
  1660  080D                     	;# 
  1661  080E                     	;# 
  1662  080E                     	;# 
  1663  080F                     	;# 
  1664  0810                     	;# 
  1665  0810                     	;# 
  1666  0811                     	;# 
  1667  0812                     	;# 
  1668  0812                     	;# 
  1669  0813                     	;# 
  1670  0814                     	;# 
  1671  0815                     	;# 
  1672  0816                     	;# 
  1673  0817                     	;# 
  1674  0818                     	;# 
  1675  0819                     	;# 
  1676  081A                     	;# 
  1677  081A                     	;# 
  1678  081B                     	;# 
  1679  081C                     	;# 
  1680  081C                     	;# 
  1681  081D                     	;# 
  1682  088C                     	;# 
  1683  088D                     	;# 
  1684  088E                     	;# 
  1685  088F                     	;# 
  1686  088F                     	;# 
  1687  0890                     	;# 
  1688  0891                     	;# 
  1689  0892                     	;# 
  1690  0893                     	;# 
  1691  0893                     	;# 
  1692  0894                     	;# 
  1693  0895                     	;# 
  1694  0896                     	;# 
  1695  0897                     	;# 
  1696  0897                     	;# 
  1697  0898                     	;# 
  1698  0899                     	;# 
  1699  0D8C                     	;# 
  1700  0D8C                     	;# 
  1701  0D8D                     	;# 
  1702  0D8E                     	;# 
  1703  0D8F                     	;# 
  1704  0D8F                     	;# 
  1705  0D90                     	;# 
  1706  0D91                     	;# 
  1707  0D92                     	;# 
  1708  0D92                     	;# 
  1709  0D93                     	;# 
  1710  0D94                     	;# 
  1711  0D95                     	;# 
  1712  0D95                     	;# 
  1713  0D96                     	;# 
  1714  0D97                     	;# 
  1715  0D98                     	;# 
  1716  0D99                     	;# 
  1717  0D9A                     	;# 
  1718  0D9B                     	;# 
  1719  0D9C                     	;# 
  1720  0D9D                     	;# 
  1721  0D9E                     	;# 
  1722  0D9E                     	;# 
  1723  0D9F                     	;# 
  1724  0DA0                     	;# 
  1725  0DA1                     	;# 
  1726  0DA1                     	;# 
  1727  0DA2                     	;# 
  1728  0DA3                     	;# 
  1729  0DA4                     	;# 
  1730  0DA4                     	;# 
  1731  0DA5                     	;# 
  1732  0DA6                     	;# 
  1733  0DA7                     	;# 
  1734  0DA7                     	;# 
  1735  0DA8                     	;# 
  1736  0DA9                     	;# 
  1737  0DAA                     	;# 
  1738  0DAB                     	;# 
  1739  0DAC                     	;# 
  1740  0DAD                     	;# 
  1741  0DAE                     	;# 
  1742  0DAF                     	;# 
  1743  0E0F                     	;# 
  1744  0E10                     	;# 
  1745  0E11                     	;# 
  1746  0E12                     	;# 
  1747  0E13                     	;# 
  1748  0E14                     	;# 
  1749  0E15                     	;# 
  1750  0E16                     	;# 
  1751  0E17                     	;# 
  1752  0E18                     	;# 
  1753  0E19                     	;# 
  1754  0E1A                     	;# 
  1755  0E1B                     	;# 
  1756  0E1C                     	;# 
  1757  0E1D                     	;# 
  1758  0E1E                     	;# 
  1759  0E1F                     	;# 
  1760  0E20                     	;# 
  1761  0E21                     	;# 
  1762  0E22                     	;# 
  1763  0E23                     	;# 
  1764  0E24                     	;# 
  1765  0E25                     	;# 
  1766  0E26                     	;# 
  1767  0E27                     	;# 
  1768  0E28                     	;# 
  1769  0E29                     	;# 
  1770  0E2A                     	;# 
  1771  0E2B                     	;# 
  1772  0E2C                     	;# 
  1773  0E2D                     	;# 
  1774  0E2E                     	;# 
  1775  0E90                     	;# 
  1776  0E91                     	;# 
  1777  0E92                     	;# 
  1778  0E94                     	;# 
  1779  0E95                     	;# 
  1780  0E9C                     	;# 
  1781  0E9D                     	;# 
  1782  0E9E                     	;# 
  1783  0E9F                     	;# 
  1784  0EA0                     	;# 
  1785  0EA1                     	;# 
  1786  0EA2                     	;# 
  1787  0EA3                     	;# 
  1788  0EA4                     	;# 
  1789  0EA5                     	;# 
  1790  0EA6                     	;# 
  1791  0EA7                     	;# 
  1792  0F0F                     	;# 
  1793  0F10                     	;# 
  1794  0F11                     	;# 
  1795  0F12                     	;# 
  1796  0F13                     	;# 
  1797  0F14                     	;# 
  1798  0F15                     	;# 
  1799  0F16                     	;# 
  1800  0F17                     	;# 
  1801  0F18                     	;# 
  1802  0F19                     	;# 
  1803  0F1A                     	;# 
  1804  0F1B                     	;# 
  1805  0F1C                     	;# 
  1806  0F1D                     	;# 
  1807  0F1E                     	;# 
  1808  0F1F                     	;# 
  1809  0F20                     	;# 
  1810  0F21                     	;# 
  1811  0F22                     	;# 
  1812  0F23                     	;# 
  1813  0F24                     	;# 
  1814  0F25                     	;# 
  1815  0F26                     	;# 
  1816  0F27                     	;# 
  1817  0F28                     	;# 
  1818  0F29                     	;# 
  1819  0F2A                     	;# 
  1820  0F2B                     	;# 
  1821  0F2C                     	;# 
  1822  0F2D                     	;# 
  1823  0F2E                     	;# 
  1824  0F2F                     	;# 
  1825  0F30                     	;# 
  1826  0F31                     	;# 
  1827  0F32                     	;# 
  1828  0F33                     	;# 
  1829  0F34                     	;# 
  1830  0F35                     	;# 
  1831  0F36                     	;# 
  1832  0F37                     	;# 
  1833  0FE4                     	;# 
  1834  0FE5                     	;# 
  1835  0FE6                     	;# 
  1836  0FE7                     	;# 
  1837  0FE8                     	;# 
  1838  0FE9                     	;# 
  1839  0FEA                     	;# 
  1840  0FEB                     	;# 
  1841  0FED                     	;# 
  1842  0FEE                     	;# 
  1843  0FEF                     	;# 
  1844  0000                     	;# 
  1845  0001                     	;# 
  1846  0002                     	;# 
  1847  0003                     	;# 
  1848  0004                     	;# 
  1849  0005                     	;# 
  1850  0006                     	;# 
  1851  0007                     	;# 
  1852  0008                     	;# 
  1853  0009                     	;# 
  1854  000A                     	;# 
  1855  000B                     	;# 
  1856  000C                     	;# 
  1857  000D                     	;# 
  1858  000E                     	;# 
  1859  0010                     	;# 
  1860  0011                     	;# 
  1861  0012                     	;# 
  1862  0013                     	;# 
  1863  0014                     	;# 
  1864  0015                     	;# 
  1865  0016                     	;# 
  1866  0016                     	;# 
  1867  0017                     	;# 
  1868  0018                     	;# 
  1869  0019                     	;# 
  1870  001A                     	;# 
  1871  001A                     	;# 
  1872  001B                     	;# 
  1873  001B                     	;# 
  1874  001C                     	;# 
  1875  001D                     	;# 
  1876  001E                     	;# 
  1877  001F                     	;# 
  1878  008C                     	;# 
  1879  008D                     	;# 
  1880  008E                     	;# 
  1881  0090                     	;# 
  1882  0091                     	;# 
  1883  0092                     	;# 
  1884  0093                     	;# 
  1885  0094                     	;# 
  1886  0095                     	;# 
  1887  0096                     	;# 
  1888  0098                     	;# 
  1889  0099                     	;# 
  1890  009A                     	;# 
  1891  009B                     	;# 
  1892  009B                     	;# 
  1893  009C                     	;# 
  1894  009D                     	;# 
  1895  009E                     	;# 
  1896  009F                     	;# 
  1897  010C                     	;# 
  1898  010D                     	;# 
  1899  010E                     	;# 
  1900  0111                     	;# 
  1901  0112                     	;# 
  1902  0113                     	;# 
  1903  0114                     	;# 
  1904  0115                     	;# 
  1905  0116                     	;# 
  1906  0117                     	;# 
  1907  0118                     	;# 
  1908  0119                     	;# 
  1909  011C                     	;# 
  1910  018C                     	;# 
  1911  018D                     	;# 
  1912  018E                     	;# 
  1913  0191                     	;# 
  1914  0191                     	;# 
  1915  0192                     	;# 
  1916  0193                     	;# 
  1917  0193                     	;# 
  1918  0194                     	;# 
  1919  0195                     	;# 
  1920  0196                     	;# 
  1921  0197                     	;# 
  1922  0199                     	;# 
  1923  0199                     	;# 
  1924  0199                     	;# 
  1925  019A                     	;# 
  1926  019A                     	;# 
  1927  019A                     	;# 
  1928  019B                     	;# 
  1929  019B                     	;# 
  1930  019B                     	;# 
  1931  019B                     	;# 
  1932  019B                     	;# 
  1933  019C                     	;# 
  1934  019C                     	;# 
  1935  019C                     	;# 
  1936  019D                     	;# 
  1937  019D                     	;# 
  1938  019D                     	;# 
  1939  019E                     	;# 
  1940  019E                     	;# 
  1941  019E                     	;# 
  1942  019F                     	;# 
  1943  019F                     	;# 
  1944  019F                     	;# 
  1945  019F                     	;# 
  1946  019F                     	;# 
  1947  020C                     	;# 
  1948  020D                     	;# 
  1949  020E                     	;# 
  1950  0211                     	;# 
  1951  0211                     	;# 
  1952  0212                     	;# 
  1953  0212                     	;# 
  1954  0213                     	;# 
  1955  0213                     	;# 
  1956  0214                     	;# 
  1957  0214                     	;# 
  1958  0215                     	;# 
  1959  0215                     	;# 
  1960  0215                     	;# 
  1961  0215                     	;# 
  1962  0216                     	;# 
  1963  0216                     	;# 
  1964  0217                     	;# 
  1965  0217                     	;# 
  1966  028C                     	;# 
  1967  028D                     	;# 
  1968  028E                     	;# 
  1969  0291                     	;# 
  1970  0291                     	;# 
  1971  0292                     	;# 
  1972  0293                     	;# 
  1973  0294                     	;# 
  1974  0298                     	;# 
  1975  0298                     	;# 
  1976  0299                     	;# 
  1977  029A                     	;# 
  1978  029B                     	;# 
  1979  029E                     	;# 
  1980  030C                     	;# 
  1981  030D                     	;# 
  1982  030E                     	;# 
  1983  038C                     	;# 
  1984  038D                     	;# 
  1985  038E                     	;# 
  1986  0391                     	;# 
  1987  0392                     	;# 
  1988  0393                     	;# 
  1989  0394                     	;# 
  1990  0395                     	;# 
  1991  0396                     	;# 
  1992  0397                     	;# 
  1993  0398                     	;# 
  1994  0399                     	;# 
  1995  040E                     	;# 
  1996  0413                     	;# 
  1997  0413                     	;# 
  1998  0414                     	;# 
  1999  0414                     	;# 
  2000  0415                     	;# 
  2001  0416                     	;# 
  2002  0417                     	;# 
  2003  0418                     	;# 
  2004  041A                     	;# 
  2005  041A                     	;# 
  2006  041B                     	;# 
  2007  041B                     	;# 
  2008  041C                     	;# 
  2009  041D                     	;# 
  2010  041E                     	;# 
  2011  041F                     	;# 
  2012  0493                     	;# 
  2013  0494                     	;# 
  2014  0495                     	;# 
  2015  0496                     	;# 
  2016  049A                     	;# 
  2017  049B                     	;# 
  2018  049C                     	;# 
  2019  049D                     	;# 
  2020  058C                     	;# 
  2021  058C                     	;# 
  2022  058D                     	;# 
  2023  058E                     	;# 
  2024  058E                     	;# 
  2025  058F                     	;# 
  2026  0590                     	;# 
  2027  0590                     	;# 
  2028  0591                     	;# 
  2029  0592                     	;# 
  2030  0592                     	;# 
  2031  0593                     	;# 
  2032  0594                     	;# 
  2033  0594                     	;# 
  2034  0595                     	;# 
  2035  0596                     	;# 
  2036  0596                     	;# 
  2037  0597                     	;# 
  2038  0598                     	;# 
  2039  0599                     	;# 
  2040  059A                     	;# 
  2041  059B                     	;# 
  2042  059B                     	;# 
  2043  059C                     	;# 
  2044  059D                     	;# 
  2045  060C                     	;# 
  2046  060C                     	;# 
  2047  060D                     	;# 
  2048  060E                     	;# 
  2049  060F                     	;# 
  2050  060F                     	;# 
  2051  0610                     	;# 
  2052  0611                     	;# 
  2053  0612                     	;# 
  2054  0613                     	;# 
  2055  0614                     	;# 
  2056  0617                     	;# 
  2057  0617                     	;# 
  2058  0618                     	;# 
  2059  0619                     	;# 
  2060  061A                     	;# 
  2061  061A                     	;# 
  2062  061B                     	;# 
  2063  061C                     	;# 
  2064  0691                     	;# 
  2065  0692                     	;# 
  2066  0693                     	;# 
  2067  0694                     	;# 
  2068  0695                     	;# 
  2069  0696                     	;# 
  2070  0697                     	;# 
  2071  0699                     	;# 
  2072  069A                     	;# 
  2073  0711                     	;# 
  2074  0712                     	;# 
  2075  0713                     	;# 
  2076  0714                     	;# 
  2077  0715                     	;# 
  2078  0718                     	;# 
  2079  0718                     	;# 
  2080  0719                     	;# 
  2081  071A                     	;# 
  2082  071A                     	;# 
  2083  071B                     	;# 
  2084  071C                     	;# 
  2085  071D                     	;# 
  2086  0791                     	;# 
  2087  0791                     	;# 
  2088  0792                     	;# 
  2089  0793                     	;# 
  2090  0793                     	;# 
  2091  0794                     	;# 
  2092  0795                     	;# 
  2093  0795                     	;# 
  2094  0796                     	;# 
  2095  0797                     	;# 
  2096  0797                     	;# 
  2097  0798                     	;# 
  2098  0799                     	;# 
  2099  079A                     	;# 
  2100  080C                     	;# 
  2101  080C                     	;# 
  2102  080D                     	;# 
  2103  080E                     	;# 
  2104  080E                     	;# 
  2105  080F                     	;# 
  2106  0810                     	;# 
  2107  0810                     	;# 
  2108  0811                     	;# 
  2109  0812                     	;# 
  2110  0812                     	;# 
  2111  0813                     	;# 
  2112  0814                     	;# 
  2113  0815                     	;# 
  2114  0816                     	;# 
  2115  0817                     	;# 
  2116  0818                     	;# 
  2117  0819                     	;# 
  2118  081A                     	;# 
  2119  081A                     	;# 
  2120  081B                     	;# 
  2121  081C                     	;# 
  2122  081C                     	;# 
  2123  081D                     	;# 
  2124  088C                     	;# 
  2125  088D                     	;# 
  2126  088E                     	;# 
  2127  088F                     	;# 
  2128  088F                     	;# 
  2129  0890                     	;# 
  2130  0891                     	;# 
  2131  0892                     	;# 
  2132  0893                     	;# 
  2133  0893                     	;# 
  2134  0894                     	;# 
  2135  0895                     	;# 
  2136  0896                     	;# 
  2137  0897                     	;# 
  2138  0897                     	;# 
  2139  0898                     	;# 
  2140  0899                     	;# 
  2141  0D8C                     	;# 
  2142  0D8C                     	;# 
  2143  0D8D                     	;# 
  2144  0D8E                     	;# 
  2145  0D8F                     	;# 
  2146  0D8F                     	;# 
  2147  0D90                     	;# 
  2148  0D91                     	;# 
  2149  0D92                     	;# 
  2150  0D92                     	;# 
  2151  0D93                     	;# 
  2152  0D94                     	;# 
  2153  0D95                     	;# 
  2154  0D95                     	;# 
  2155  0D96                     	;# 
  2156  0D97                     	;# 
  2157  0D98                     	;# 
  2158  0D99                     	;# 
  2159  0D9A                     	;# 
  2160  0D9B                     	;# 
  2161  0D9C                     	;# 
  2162  0D9D                     	;# 
  2163  0D9E                     	;# 
  2164  0D9E                     	;# 
  2165  0D9F                     	;# 
  2166  0DA0                     	;# 
  2167  0DA1                     	;# 
  2168  0DA1                     	;# 
  2169  0DA2                     	;# 
  2170  0DA3                     	;# 
  2171  0DA4                     	;# 
  2172  0DA4                     	;# 
  2173  0DA5                     	;# 
  2174  0DA6                     	;# 
  2175  0DA7                     	;# 
  2176  0DA7                     	;# 
  2177  0DA8                     	;# 
  2178  0DA9                     	;# 
  2179  0DAA                     	;# 
  2180  0DAB                     	;# 
  2181  0DAC                     	;# 
  2182  0DAD                     	;# 
  2183  0DAE                     	;# 
  2184  0DAF                     	;# 
  2185  0E0F                     	;# 
  2186  0E10                     	;# 
  2187  0E11                     	;# 
  2188  0E12                     	;# 
  2189  0E13                     	;# 
  2190  0E14                     	;# 
  2191  0E15                     	;# 
  2192  0E16                     	;# 
  2193  0E17                     	;# 
  2194  0E18                     	;# 
  2195  0E19                     	;# 
  2196  0E1A                     	;# 
  2197  0E1B                     	;# 
  2198  0E1C                     	;# 
  2199  0E1D                     	;# 
  2200  0E1E                     	;# 
  2201  0E1F                     	;# 
  2202  0E20                     	;# 
  2203  0E21                     	;# 
  2204  0E22                     	;# 
  2205  0E23                     	;# 
  2206  0E24                     	;# 
  2207  0E25                     	;# 
  2208  0E26                     	;# 
  2209  0E27                     	;# 
  2210  0E28                     	;# 
  2211  0E29                     	;# 
  2212  0E2A                     	;# 
  2213  0E2B                     	;# 
  2214  0E2C                     	;# 
  2215  0E2D                     	;# 
  2216  0E2E                     	;# 
  2217  0E90                     	;# 
  2218  0E91                     	;# 
  2219  0E92                     	;# 
  2220  0E94                     	;# 
  2221  0E95                     	;# 
  2222  0E9C                     	;# 
  2223  0E9D                     	;# 
  2224  0E9E                     	;# 
  2225  0E9F                     	;# 
  2226  0EA0                     	;# 
  2227  0EA1                     	;# 
  2228  0EA2                     	;# 
  2229  0EA3                     	;# 
  2230  0EA4                     	;# 
  2231  0EA5                     	;# 
  2232  0EA6                     	;# 
  2233  0EA7                     	;# 
  2234  0F0F                     	;# 
  2235  0F10                     	;# 
  2236  0F11                     	;# 
  2237  0F12                     	;# 
  2238  0F13                     	;# 
  2239  0F14                     	;# 
  2240  0F15                     	;# 
  2241  0F16                     	;# 
  2242  0F17                     	;# 
  2243  0F18                     	;# 
  2244  0F19                     	;# 
  2245  0F1A                     	;# 
  2246  0F1B                     	;# 
  2247  0F1C                     	;# 
  2248  0F1D                     	;# 
  2249  0F1E                     	;# 
  2250  0F1F                     	;# 
  2251  0F20                     	;# 
  2252  0F21                     	;# 
  2253  0F22                     	;# 
  2254  0F23                     	;# 
  2255  0F24                     	;# 
  2256  0F25                     	;# 
  2257  0F26                     	;# 
  2258  0F27                     	;# 
  2259  0F28                     	;# 
  2260  0F29                     	;# 
  2261  0F2A                     	;# 
  2262  0F2B                     	;# 
  2263  0F2C                     	;# 
  2264  0F2D                     	;# 
  2265  0F2E                     	;# 
  2266  0F2F                     	;# 
  2267  0F30                     	;# 
  2268  0F31                     	;# 
  2269  0F32                     	;# 
  2270  0F33                     	;# 
  2271  0F34                     	;# 
  2272  0F35                     	;# 
  2273  0F36                     	;# 
  2274  0F37                     	;# 
  2275  0FE4                     	;# 
  2276  0FE5                     	;# 
  2277  0FE6                     	;# 
  2278  0FE7                     	;# 
  2279  0FE8                     	;# 
  2280  0FE9                     	;# 
  2281  0FEA                     	;# 
  2282  0FEB                     	;# 
  2283  0FED                     	;# 
  2284  0FEE                     	;# 
  2285  0FEF                     	;# 
  2286                           
  2287                           	psect	nvBANK0
  2288  003A                     __pnvBANK0:	
  2289  003A                     _EUSART_ErrorHandler:	
  2290  003A                     	ds	2
  2291  003C                     _EUSART_OverrunErrorHandler:	
  2292  003C                     	ds	2
  2293  003E                     _EUSART_FramingErrorHandler:	
  2294  003E                     	ds	2
  2295  0040                     _EUSART_RxDefaultInterruptHandler:	
  2296  0040                     	ds	2
  2297  0042                     _EUSART_TxDefaultInterruptHandler:	
  2298  0042                     	ds	2
  2299  0044                     _eusartTxBufferRemaining:	
  2300  0044                     	ds	1
  2301  0010                     _PIR1bits	set	16
  2302  000B                     _INTCONbits	set	11
  2303  0090                     _PIE1bits	set	144
  2304  0095                     _OPTION_REGbits	set	149
  2305  008E                     _TRISC	set	142
  2306  008D                     _TRISB	set	141
  2307  008C                     _TRISA	set	140
  2308  0098                     _OSCTUNE	set	152
  2309  0099                     _OSCCON	set	153
  2310  010E                     _LATC	set	270
  2311  010D                     _LATB	set	269
  2312  010C                     _LATA	set	268
  2313  0116                     _BORCON	set	278
  2314  010E                     _LATCbits	set	270
  2315  010C                     _LATAbits	set	268
  2316  0199                     _RC1REG	set	409
  2317  019D                     _RC1STAbits	set	413
  2318  019A                     _TX1REG	set	410
  2319  019E                     _TX1STAbits	set	414
  2320  019C                     _SPBRGH	set	412
  2321  019B                     _SPBRGL	set	411
  2322  019E                     _TX1STA	set	414
  2323  019D                     _RC1STA	set	413
  2324  019F                     _BAUD1CON	set	415
  2325  018C                     _ANSELA	set	396
  2326  018D                     _ANSELB	set	397
  2327  018E                     _ANSELC	set	398
  2328  020E                     _WPUC	set	526
  2329  020C                     _WPUA	set	524
  2330  020D                     _WPUB	set	525
  2331  028E                     _ODCONC	set	654
  2332  028D                     _ODCONB	set	653
  2333  028C                     _ODCONA	set	652
  2334  030E                     _SLRCONC	set	782
  2335  030D                     _SLRCONB	set	781
  2336  030C                     _SLRCONA	set	780
  2337  038E                     _INLVLC	set	910
  2338  038D                     _INLVLB	set	909
  2339  038C                     _INLVLA	set	908
  2340  0E24                     _RXPPS	set	3620
  2341  0E9F                     _RB7PPS	set	3743
  2342                           
  2343                           	psect	stringtext1
  2344  0252                     __pstringtext1:	
  2345  0252                     STR_1:	
  2346  0252  3441               	retlw	65	;'A'
  2347  0253  3465               	retlw	101	;'e'
  2348  0254  3454               	retlw	84	;'T'
  2349  0255  342B               	retlw	43	;'+'
  2350  0256  3443               	retlw	67	;'C'
  2351  0257  3457               	retlw	87	;'W'
  2352  0258  344D               	retlw	77	;'M'
  2353  0259  344F               	retlw	79	;'O'
  2354  025A  3444               	retlw	68	;'D'
  2355  025B  3445               	retlw	69	;'E'
  2356  025C  343D               	retlw	61	;'='
  2357  025D  3400               	retlw	0
  2358                           
  2359                           	psect	stringtext2
  2360  0000                     __pstringtext2:	
  2361                           
  2362                           ; #config settings
  2363  0000                     
  2364                           	psect	cinit
  2365  002E                     start_initialization:	
  2366  002E                     __initialization:	
  2367                           
  2368                           ; Clear objects allocated to COMMON
  2369  002E  01F9               	clrf	__pbssCOMMON& (0+127)
  2370  002F  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  2371  0030  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  2372  0031  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  2373                           
  2374                           ; Clear objects allocated to BANK0
  2375  0032  3020               	movlw	low __pbssBANK0
  2376  0033  0084               	movwf	4
  2377  0034  3000               	movlw	high __pbssBANK0
  2378  0035  0085               	movwf	5
  2379  0036  301A               	movlw	26
  2380  0037  3182  2281  3180   	fcall	clear_ram0
  2381  003A                     end_of_initialization:	
  2382                           ;End of C runtime variable initialization code
  2383                           
  2384  003A                     __end_of__initialization:	
  2385  003A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2386  003B  0020               	movlb	0
  2387  003C  3181  29AC         	ljmp	_main	;jump to C main() function
  2388                           
  2389                           	psect	bssCOMMON
  2390  0079                     __pbssCOMMON:	
  2391  0079                     _eusartRxTail:	
  2392  0079                     	ds	1
  2393  007A                     _eusartRxHead:	
  2394  007A                     	ds	1
  2395  007B                     _eusartTxTail:	
  2396  007B                     	ds	1
  2397  007C                     _eusartTxHead:	
  2398  007C                     	ds	1
  2399                           
  2400                           	psect	bssBANK0
  2401  0020                     __pbssBANK0:	
  2402  0020                     _eusartRxStatusBuffer:	
  2403  0020                     	ds	8
  2404  0028                     _eusartRxBuffer:	
  2405  0028                     	ds	8
  2406  0030                     _eusartTxBuffer:	
  2407  0030                     	ds	8
  2408  0038                     _eusartRxLastError:	
  2409  0038                     	ds	1
  2410  0039                     _eusartRxCount:	
  2411  0039                     	ds	1
  2412                           
  2413                           	psect	clrtext
  2414  0281                     clear_ram0:	
  2415                           ;	Called with FSR0 containing the base address, and
  2416                           ;	WREG with the size to clear
  2417                           
  2418  0281  0064               	clrwdt	;clear the watchdog before getting into this loop
  2419  0282                     clrloop0:	
  2420  0282  0180               	clrf	0	;clear RAM location pointed to by FSR
  2421  0283  3101               	addfsr 0,1
  2422  0284  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2423  0285  2A82               	goto	clrloop0	;have we reached the end yet?
  2424  0286  3400               	retlw	0	;all done for this memory range, return
  2425                           
  2426                           	psect	cstackCOMMON
  2427  0070                     __pcstackCOMMON:	
  2428  0070                     ?_SYSTEM_Initialize:	
  2429  0070                     ?_receive:	
  2430                           ; 1 bytes @ 0x0
  2431                           
  2432  0070                     ?_EUSART_is_tx_ready:	
  2433                           ; 1 bytes @ 0x0
  2434                           
  2435  0070                     ?_EUSART_Write:	
  2436                           ; 1 bytes @ 0x0
  2437                           
  2438  0070                     ?_led1Blink:	
  2439                           ; 1 bytes @ 0x0
  2440                           
  2441  0070                     ?_EUSART_Read:	
  2442                           ; 1 bytes @ 0x0
  2443                           
  2444  0070                     ?_led3Blink:	
  2445                           ; 1 bytes @ 0x0
  2446                           
  2447  0070                     ?_led4Blink:	
  2448                           ; 1 bytes @ 0x0
  2449                           
  2450  0070                     ?_EUSART_is_rx_ready:	
  2451                           ; 1 bytes @ 0x0
  2452                           
  2453  0070                     ?_led2Blink:	
  2454                           ; 1 bytes @ 0x0
  2455                           
  2456  0070                     ?_PIN_MANAGER_Initialize:	
  2457                           ; 1 bytes @ 0x0
  2458                           
  2459  0070                     ?_OSCILLATOR_Initialize:	
  2460                           ; 1 bytes @ 0x0
  2461                           
  2462  0070                     ?_EUSART_Initialize:	
  2463                           ; 1 bytes @ 0x0
  2464                           
  2465  0070                     ?_EUSART_Receive_ISR:	
  2466                           ; 1 bytes @ 0x0
  2467                           
  2468  0070                     ?_EUSART_Transmit_ISR:	
  2469                           ; 1 bytes @ 0x0
  2470                           
  2471  0070                     ??_EUSART_Transmit_ISR:	
  2472                           ; 1 bytes @ 0x0
  2473                           
  2474  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  2475                           ; 1 bytes @ 0x0
  2476                           
  2477  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  2478                           ; 1 bytes @ 0x0
  2479                           
  2480  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  2481                           ; 1 bytes @ 0x0
  2482                           
  2483  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  2484                           ; 1 bytes @ 0x0
  2485                           
  2486  0070                     ?_EUSART_DefaultErrorHandler:	
  2487                           ; 1 bytes @ 0x0
  2488                           
  2489  0070                     ?_EUSART_RxDataHandler:	
  2490                           ; 1 bytes @ 0x0
  2491                           
  2492  0070                     ??_EUSART_RxDataHandler:	
  2493                           ; 1 bytes @ 0x0
  2494                           
  2495  0070                     ?_main:	
  2496                           ; 1 bytes @ 0x0
  2497                           
  2498  0070                     ?_INTERRUPT_InterruptManager:	
  2499                           ; 1 bytes @ 0x0
  2500                           
  2501                           
  2502                           ; 1 bytes @ 0x0
  2503  0070                     	ds	1
  2504  0071                     ??_EUSART_is_tx_ready:	
  2505  0071                     ??_EUSART_Write:	
  2506                           ; 1 bytes @ 0x1
  2507                           
  2508  0071                     ??_led1Blink:	
  2509                           ; 1 bytes @ 0x1
  2510                           
  2511  0071                     ??_EUSART_Read:	
  2512                           ; 1 bytes @ 0x1
  2513                           
  2514  0071                     ??_led3Blink:	
  2515                           ; 1 bytes @ 0x1
  2516                           
  2517  0071                     ??_led4Blink:	
  2518                           ; 1 bytes @ 0x1
  2519                           
  2520  0071                     ??_EUSART_is_rx_ready:	
  2521                           ; 1 bytes @ 0x1
  2522                           
  2523  0071                     ??_led2Blink:	
  2524                           ; 1 bytes @ 0x1
  2525                           
  2526  0071                     ??_PIN_MANAGER_Initialize:	
  2527                           ; 1 bytes @ 0x1
  2528                           
  2529  0071                     ??_OSCILLATOR_Initialize:	
  2530                           ; 1 bytes @ 0x1
  2531                           
  2532  0071                     ?_EUSART_SetRxInterruptHandler:	
  2533                           ; 1 bytes @ 0x1
  2534                           
  2535  0071                     ??_EUSART_Receive_ISR:	
  2536                           ; 1 bytes @ 0x1
  2537                           
  2538  0071                     ?_EUSART_SetTxInterruptHandler:	
  2539                           ; 1 bytes @ 0x1
  2540                           
  2541  0071                     ?_EUSART_SetFramingErrorHandler:	
  2542                           ; 1 bytes @ 0x1
  2543                           
  2544  0071                     ?_EUSART_SetOverrunErrorHandler:	
  2545                           ; 1 bytes @ 0x1
  2546                           
  2547  0071                     ?_EUSART_SetErrorHandler:	
  2548                           ; 1 bytes @ 0x1
  2549                           
  2550  0071                     ??_EUSART_DefaultErrorHandler:	
  2551                           ; 1 bytes @ 0x1
  2552                           
  2553  0071                     ??_INTERRUPT_InterruptManager:	
  2554                           ; 1 bytes @ 0x1
  2555                           
  2556  0071                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2557                           ; 1 bytes @ 0x1
  2558                           
  2559  0071                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2560                           ; 2 bytes @ 0x1
  2561                           
  2562  0071                     EUSART_SetErrorHandler@interruptHandler:	
  2563                           ; 2 bytes @ 0x1
  2564                           
  2565  0071                     EUSART_SetTxInterruptHandler@interruptHandler:	
  2566                           ; 2 bytes @ 0x1
  2567                           
  2568  0071                     EUSART_SetRxInterruptHandler@interruptHandler:	
  2569                           ; 2 bytes @ 0x1
  2570                           
  2571                           
  2572                           ; 2 bytes @ 0x1
  2573  0071                     	ds	1
  2574  0072                     EUSART_Read@readValue:	
  2575  0072                     EUSART_Write@txData:	
  2576                           ; 1 bytes @ 0x2
  2577                           
  2578                           
  2579                           ; 1 bytes @ 0x2
  2580  0072                     	ds	1
  2581  0073                     ?_send:	
  2582  0073                     ??_receive:	
  2583                           ; 1 bytes @ 0x3
  2584                           
  2585  0073                     ??_EUSART_Initialize:	
  2586                           ; 1 bytes @ 0x3
  2587                           
  2588  0073                     ??_EUSART_SetRxInterruptHandler:	
  2589                           ; 1 bytes @ 0x3
  2590                           
  2591  0073                     ??_EUSART_SetTxInterruptHandler:	
  2592                           ; 1 bytes @ 0x3
  2593                           
  2594  0073                     ??_EUSART_SetFramingErrorHandler:	
  2595                           ; 1 bytes @ 0x3
  2596                           
  2597  0073                     ??_EUSART_SetOverrunErrorHandler:	
  2598                           ; 1 bytes @ 0x3
  2599                           
  2600  0073                     ??_EUSART_SetErrorHandler:	
  2601                           ; 1 bytes @ 0x3
  2602                           
  2603  0073                     send@data:	
  2604                           ; 1 bytes @ 0x3
  2605                           
  2606                           
  2607                           ; 2 bytes @ 0x3
  2608  0073                     	ds	1
  2609  0074                     ??_SYSTEM_Initialize:	
  2610  0074                     receive@rxData:	
  2611                           ; 1 bytes @ 0x4
  2612                           
  2613                           
  2614                           ; 1 bytes @ 0x4
  2615  0074                     	ds	1
  2616  0075                     send@size:	
  2617  0075                     receive@blink:	
  2618                           ; 1 bytes @ 0x5
  2619                           
  2620                           
  2621                           ; 1 bytes @ 0x5
  2622  0075                     	ds	1
  2623  0076                     ??_send:	
  2624                           
  2625                           ; 1 bytes @ 0x6
  2626  0076                     	ds	2
  2627  0078                     send@index:	
  2628                           
  2629                           ; 1 bytes @ 0x8
  2630  0078                     	ds	1
  2631                           
  2632                           	psect	cstackBANK0
  2633  0045                     __pcstackBANK0:	
  2634  0045                     ??_main:	
  2635                           
  2636                           ; 1 bytes @ 0x0
  2637  0045                     	ds	1
  2638                           
  2639                           	psect	maintext
  2640  01AC                     __pmaintext:	
  2641 ;;
  2642 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2643 ;;
  2644 ;; *************** function _main *****************
  2645 ;; Defined at:
  2646 ;;		line 11 in file "main.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;		None
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;		None
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      void 
  2653 ;; Registers used:
  2654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2655 ;; Tracked objects:
  2656 ;;		On entry : B1F/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2662 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2663 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2664 ;;Total ram usage:        1 bytes
  2665 ;; Hardware stack levels required when called:    7
  2666 ;; This function calls:
  2667 ;;		_SYSTEM_Initialize
  2668 ;;		_receive
  2669 ;;		_send
  2670 ;; This function is called by:
  2671 ;;		Startup code after reset
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           
  2676                           ;psect for function _main
  2677  01AC                     _main:	
  2678  01AC                     l1311:	
  2679                           ;incstack = 0
  2680                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2681                           
  2682                           
  2683                           ;main.c: 14:     SYSTEM_Initialize();
  2684  01AC  3182  225E  3181   	fcall	_SYSTEM_Initialize
  2685  01AF                     l1313:	
  2686                           
  2687                           ;main.c: 16:     (INTCONbits.GIE = 1);
  2688  01AF  178B               	bsf	11,7	;volatile
  2689  01B0                     l1315:	
  2690                           
  2691                           ;main.c: 17:     (INTCONbits.PEIE = 1);
  2692  01B0  170B               	bsf	11,6	;volatile
  2693  01B1                     l1317:	
  2694                           
  2695                           ;main.c: 20:     {;main.c: 21:         send("AeT+CWMODE=", 11);
  2696  01B1  3052               	movlw	low (STR_1| (0+32768))
  2697  01B2  00F3               	movwf	send@data
  2698  01B3  3082               	movlw	high (STR_1| (0+32768))
  2699  01B4  00F4               	movwf	send@data+1
  2700  01B5  300B               	movlw	11
  2701  01B6  0020               	movlb	0	; select bank0
  2702  01B7  00C5               	movwf	??_main
  2703  01B8  0845               	movf	??_main,w
  2704  01B9  00F5               	movwf	send@size
  2705  01BA  3181  2163  3181   	fcall	_send
  2706  01BD                     l1319:	
  2707                           
  2708                           ;main.c: 22:         receive();
  2709  01BD  3181  213B  3181   	fcall	_receive
  2710  01C0                     l1321:	
  2711                           
  2712                           ;main.c: 23:         receive();
  2713  01C0  3181  213B  3181   	fcall	_receive
  2714  01C3                     l1323:	
  2715                           
  2716                           ;main.c: 24:         receive();
  2717  01C3  3181  213B  3181   	fcall	_receive
  2718  01C6                     l1325:	
  2719                           
  2720                           ;main.c: 25:         receive();
  2721  01C6  3181  213B  3181   	fcall	_receive
  2722  01C9  29B1               	goto	l1317
  2723  01CA  3180  282C         	ljmp	start
  2724  01CC                     __end_of_main:	
  2725                           
  2726                           	psect	text1
  2727  0163                     __ptext1:	
  2728 ;; *************** function _send *****************
  2729 ;; Defined at:
  2730 ;;		line 29 in file "main.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;  data            2    3[COMMON] PTR unsigned char 
  2733 ;;		 -> STR_1(12), 
  2734 ;;  size            1    5[COMMON] unsigned char 
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;  index           1    8[COMMON] unsigned char 
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  1    wreg      void 
  2739 ;; Registers used:
  2740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2746 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2747 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2748 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2749 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2750 ;;Total ram usage:        6 bytes
  2751 ;; Hardware stack levels used:    1
  2752 ;; Hardware stack levels required when called:    5
  2753 ;; This function calls:
  2754 ;;		_EUSART_Write
  2755 ;;		_EUSART_is_tx_ready
  2756 ;;		_led1Blink
  2757 ;; This function is called by:
  2758 ;;		_main
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           
  2763                           ;psect for function _send
  2764  0163                     _send:	
  2765  0163                     l1217:	
  2766                           ;incstack = 0
  2767                           ; Regs used in _send: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2768                           
  2769                           
  2770                           ;main.c: 30:     for(char index = 0; index < size; index++){
  2771  0163  01F8               	clrf	send@index
  2772  0164  2983               	goto	l1227
  2773  0165                     l1219:	
  2774                           
  2775                           ;main.c: 31:         if(EUSART_is_tx_ready()){
  2776  0165  3182  2268  3181   	fcall	_EUSART_is_tx_ready
  2777  0168  3A00               	xorlw	0
  2778  0169  1903               	skipnz
  2779  016A  296C               	goto	u361
  2780  016B  296D               	goto	u360
  2781  016C                     u361:	
  2782  016C  297F               	goto	l1225
  2783  016D                     u360:	
  2784  016D                     l1221:	
  2785                           
  2786                           ;main.c: 32:             EUSART_Write(data[index]);
  2787  016D  0874               	movf	send@data+1,w
  2788  016E  00F7               	movwf	??_send+1
  2789  016F  0873               	movf	send@data,w
  2790  0170  00F6               	movwf	??_send
  2791  0171  0878               	movf	send@index,w
  2792  0172  0776               	addwf	??_send,w
  2793  0173  0084               	movwf	4
  2794  0174  0877               	movf	??_send+1,w
  2795  0175  1803               	skipnc
  2796  0176  0A77               	incf	??_send+1,w
  2797  0177  0085               	movwf	5
  2798  0178  0800               	movf	0,w	;code access
  2799  0179  3180  20E7  3181   	fcall	_EUSART_Write
  2800  017C                     l1223:	
  2801                           
  2802                           ;main.c: 33:             led1Blink();
  2803  017C  3182  223D  3181   	fcall	_led1Blink
  2804  017F                     l1225:	
  2805                           
  2806                           ;main.c: 35:     }
  2807  017F  3001               	movlw	1
  2808  0180  00F6               	movwf	??_send
  2809  0181  0876               	movf	??_send,w
  2810  0182  07F8               	addwf	send@index,f
  2811  0183                     l1227:	
  2812  0183  0875               	movf	send@size,w
  2813  0184  0278               	subwf	send@index,w
  2814  0185  1C03               	skipc
  2815  0186  2988               	goto	u371
  2816  0187  2989               	goto	u370
  2817  0188                     u371:	
  2818  0188  2965               	goto	l1219
  2819  0189                     u370:	
  2820  0189                     l45:	
  2821  0189  0008               	return
  2822  018A                     __end_of_send:	
  2823                           
  2824                           	psect	text2
  2825  023D                     __ptext2:	
  2826 ;; *************** function _led1Blink *****************
  2827 ;; Defined at:
  2828 ;;		line 57 in file "main.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;		None
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;		None
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  1    wreg      void 
  2835 ;; Registers used:
  2836 ;;		wreg
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2844 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2845 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2846 ;;Total ram usage:        1 bytes
  2847 ;; Hardware stack levels used:    1
  2848 ;; Hardware stack levels required when called:    4
  2849 ;; This function calls:
  2850 ;;		Nothing
  2851 ;; This function is called by:
  2852 ;;		_send
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           
  2857                           ;psect for function _led1Blink
  2858  023D                     _led1Blink:	
  2859  023D                     l57:	
  2860                           ;incstack = 0
  2861                           ; Regs used in _led1Blink: [wreg]
  2862                           ;main.c: 58:     do { LATAbits.LATA5 = 1; } while(0);
  2863                           
  2864  023D  0022               	movlb	2	; select bank2
  2865  023E  168C               	bsf	12,5	;volatile
  2866  023F                     l893:	
  2867                           
  2868                           ;main.c: 59:     _delay((unsigned long)((30)*(4000000/4000.0)));
  2869  023F  3027               	movlw	39
  2870  0240  00F1               	movwf	??_led1Blink
  2871  0241  30F5               	movlw	245
  2872  0242                     u517:	
  2873  0242  0B89               	decfsz	9,f
  2874  0243  2A42               	goto	u517
  2875  0244  0BF1               	decfsz	??_led1Blink,f
  2876  0245  2A42               	goto	u517
  2877  0246  0000               	nop
  2878  0247                     l895:	
  2879  0247  0022               	movlb	2	; select bank2
  2880  0248  128C               	bcf	12,5	;volatile
  2881  0249                     l60:	
  2882                           
  2883                           ;main.c: 61:     _delay((unsigned long)((30)*(4000000/4000.0)));
  2884  0249  3027               	movlw	39
  2885  024A  00F1               	movwf	??_led1Blink
  2886  024B  30F5               	movlw	245
  2887  024C                     u527:	
  2888  024C  0B89               	decfsz	9,f
  2889  024D  2A4C               	goto	u527
  2890  024E  0BF1               	decfsz	??_led1Blink,f
  2891  024F  2A4C               	goto	u527
  2892  0250  0000               	nop
  2893  0251                     l61:	
  2894  0251  0008               	return
  2895  0252                     __end_of_led1Blink:	
  2896                           
  2897                           	psect	text3
  2898  0268                     __ptext3:	
  2899 ;; *************** function _EUSART_is_tx_ready *****************
  2900 ;; Defined at:
  2901 ;;		line 132 in file "mcc_generated_files/eusart.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;		None
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;		None
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  1    wreg      _Bool 
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, status,0
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2919 ;;Total ram usage:        0 bytes
  2920 ;; Hardware stack levels used:    1
  2921 ;; Hardware stack levels required when called:    4
  2922 ;; This function calls:
  2923 ;;		Nothing
  2924 ;; This function is called by:
  2925 ;;		_send
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           
  2930                           ;psect for function _EUSART_is_tx_ready
  2931  0268                     _EUSART_is_tx_ready:	
  2932  0268                     l1131:	
  2933                           ;incstack = 0
  2934                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2+status,0]
  2935                           
  2936                           
  2937                           ;mcc_generated_files/eusart.c: 134:     return (eusartTxBufferRemaining ? 1 : 0);
  2938  0268  0020               	movlb	0	; select bank0
  2939  0269  0844               	movf	_eusartTxBufferRemaining,w	;volatile
  2940  026A  1D03               	btfss	3,2
  2941  026B  2A6D               	goto	u271
  2942  026C  2A6F               	goto	u270
  2943  026D                     u271:	
  2944  026D  3001               	movlw	1
  2945  026E  2A70               	goto	u280
  2946  026F                     u270:	
  2947  026F  3000               	movlw	0
  2948  0270                     u280:	
  2949  0270                     l253:	
  2950  0270  0008               	return
  2951  0271                     __end_of_EUSART_is_tx_ready:	
  2952                           
  2953                           	psect	text4
  2954  00E7                     __ptext4:	
  2955 ;; *************** function _EUSART_Write *****************
  2956 ;; Defined at:
  2957 ;;		line 173 in file "mcc_generated_files/eusart.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;  txData          1    wreg     unsigned char 
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;  txData          1    2[COMMON] unsigned char 
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  1    wreg      void 
  2964 ;; Registers used:
  2965 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2972 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2973 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2974 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2975 ;;Total ram usage:        2 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; Hardware stack levels required when called:    4
  2978 ;; This function calls:
  2979 ;;		Nothing
  2980 ;; This function is called by:
  2981 ;;		_send
  2982 ;;		_putch
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           
  2987                           ;psect for function _EUSART_Write
  2988  00E7                     _EUSART_Write:	
  2989                           
  2990                           ;incstack = 0
  2991                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  2992                           ;EUSART_Write@txData stored from wreg
  2993  00E7  00F2               	movwf	EUSART_Write@txData
  2994  00E8                     l1135:	
  2995  00E8                     l1137:	
  2996                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
  2997                           
  2998                           
  2999                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  3000  00E8  0020               	movlb	0	; select bank0
  3001  00E9  0844               	movf	_eusartTxBufferRemaining,w	;volatile
  3002  00EA  1903               	btfsc	3,2
  3003  00EB  28ED               	goto	u291
  3004  00EC  28EE               	goto	u290
  3005  00ED                     u291:	
  3006  00ED  28E8               	goto	l1137
  3007  00EE                     u290:	
  3008  00EE                     l274:	
  3009                           
  3010                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TXIE)
  3011  00EE  0021               	movlb	1	; select bank1
  3012  00EF  1A10               	btfsc	16,4	;volatile
  3013  00F0  28F2               	goto	u301
  3014  00F1  28F3               	goto	u300
  3015  00F2                     u301:	
  3016  00F2  28F7               	goto	l275
  3017  00F3                     u300:	
  3018  00F3                     l1139:	
  3019                           
  3020                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TX1
      +                          REG = txData;
  3021  00F3  0872               	movf	EUSART_Write@txData,w
  3022  00F4  0023               	movlb	3	; select bank3
  3023  00F5  009A               	movwf	26	;volatile
  3024                           
  3025                           ;mcc_generated_files/eusart.c: 182:     }
  3026  00F6  290E               	goto	l1151
  3027  00F7                     l275:	
  3028                           ;mcc_generated_files/eusart.c: 183:     else
  3029                           
  3030                           
  3031                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TXIE = 0;
  3032  00F7  1210               	bcf	16,4	;volatile
  3033  00F8                     l1141:	
  3034                           
  3035                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  3036  00F8  0872               	movf	EUSART_Write@txData,w
  3037  00F9  00F1               	movwf	??_EUSART_Write
  3038  00FA  087C               	movf	_eusartTxHead,w
  3039  00FB  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  3040  00FC  0086               	movwf	6
  3041  00FD  0187               	clrf	7
  3042  00FE  0871               	movf	??_EUSART_Write,w
  3043  00FF  0081               	movwf	1
  3044  0100                     l1143:	
  3045  0100  3001               	movlw	1
  3046  0101  00F1               	movwf	??_EUSART_Write
  3047  0102  0871               	movf	??_EUSART_Write,w
  3048  0103  07FC               	addwf	_eusartTxHead,f	;volatile
  3049  0104                     l1145:	
  3050                           
  3051                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  3052  0104  3008               	movlw	8
  3053  0105  027C               	subwf	_eusartTxHead,w	;volatile
  3054  0106  1C03               	skipc
  3055  0107  2909               	goto	u311
  3056  0108  290A               	goto	u310
  3057  0109                     u311:	
  3058  0109  290B               	goto	l1149
  3059  010A                     u310:	
  3060  010A                     l1147:	
  3061                           
  3062                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  3063  010A  01FC               	clrf	_eusartTxHead	;volatile
  3064  010B                     l1149:	
  3065                           
  3066                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  3067  010B  3001               	movlw	1
  3068  010C  0020               	movlb	0	; select bank0
  3069  010D  02C4               	subwf	_eusartTxBufferRemaining,f	;volatile
  3070  010E                     l1151:	
  3071                           
  3072                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TXIE = 1;
  3073  010E  0021               	movlb	1	; select bank1
  3074  010F  1610               	bsf	16,4	;volatile
  3075  0110                     l278:	
  3076  0110  0008               	return
  3077  0111                     __end_of_EUSART_Write:	
  3078                           
  3079                           	psect	text5
  3080  013B                     __ptext5:	
  3081 ;; *************** function _receive *****************
  3082 ;; Defined at:
  3083 ;;		line 38 in file "main.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;		None
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;  rxData          1    4[COMMON] unsigned char 
  3088 ;;  blink           1    5[COMMON] _Bool 
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  1    wreg      void 
  3091 ;; Registers used:
  3092 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3099 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3100 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3101 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3102 ;;Total ram usage:        3 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; Hardware stack levels required when called:    5
  3105 ;; This function calls:
  3106 ;;		_EUSART_Read
  3107 ;;		_EUSART_is_rx_ready
  3108 ;;		_led2Blink
  3109 ;;		_led3Blink
  3110 ;;		_led4Blink
  3111 ;; This function is called by:
  3112 ;;		_main
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116                           
  3117                           ;psect for function _receive
  3118  013B                     _receive:	
  3119  013B                     l1229:	
  3120                           ;incstack = 0
  3121                           ; Regs used in _receive: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3122                           
  3123                           
  3124                           ;main.c: 39:     _Bool blink = 0;
  3125  013B  01F5               	clrf	receive@blink
  3126                           
  3127                           ;main.c: 42:     while(EUSART_is_rx_ready()){
  3128  013C  2952               	goto	l48
  3129  013D                     l1231:	
  3130                           
  3131                           ;main.c: 43:         char rxData = EUSART_Read();
  3132  013D  3181  2111  3181   	fcall	_EUSART_Read
  3133  0140  00F3               	movwf	??_receive
  3134  0141  0873               	movf	??_receive,w
  3135  0142  00F4               	movwf	receive@rxData
  3136  0143                     l1233:	
  3137                           
  3138                           ;main.c: 45:         if(rxData == 'O'){
  3139  0143  304F               	movlw	79
  3140  0144  0674               	xorwf	receive@rxData,w
  3141  0145  1D03               	btfss	3,2
  3142  0146  2948               	goto	u381
  3143  0147  2949               	goto	u380
  3144  0148                     u381:	
  3145  0148  294D               	goto	l1237
  3146  0149                     u380:	
  3147  0149                     l1235:	
  3148                           
  3149                           ;main.c: 46:             led3Blink();
  3150  0149  3181  21E9  3181   	fcall	_led3Blink
  3151                           
  3152                           ;main.c: 47:         }else{
  3153  014C  2950               	goto	l1239
  3154  014D                     l1237:	
  3155                           
  3156                           ;main.c: 48:             led4Blink();
  3157  014D  3181  21CC  3181   	fcall	_led4Blink
  3158  0150                     l1239:	
  3159                           
  3160                           ;main.c: 51:         blink = 1;
  3161  0150  01F5               	clrf	receive@blink
  3162  0151  0AF5               	incf	receive@blink,f
  3163  0152                     l48:	
  3164                           ;main.c: 52:     }
  3165                           
  3166                           
  3167                           ;main.c: 42:     while(EUSART_is_rx_ready()){
  3168  0152  3182  2271  3181   	fcall	_EUSART_is_rx_ready
  3169  0155  3A00               	xorlw	0
  3170  0156  1D03               	skipz
  3171  0157  2959               	goto	u391
  3172  0158  295A               	goto	u390
  3173  0159                     u391:	
  3174  0159  293D               	goto	l1231
  3175  015A                     u390:	
  3176  015A                     l1241:	
  3177                           
  3178                           ;main.c: 54:     if(blink) led2Blink();
  3179  015A  0875               	movf	receive@blink,w
  3180  015B  1903               	btfsc	3,2
  3181  015C  295E               	goto	u401
  3182  015D  295F               	goto	u400
  3183  015E                     u401:	
  3184  015E  2962               	goto	l54
  3185  015F                     u400:	
  3186  015F                     l1243:	
  3187  015F  3182  2206  3181   	fcall	_led2Blink
  3188  0162                     l54:	
  3189  0162  0008               	return
  3190  0163                     __end_of_receive:	
  3191                           
  3192                           	psect	text6
  3193  01CC                     __ptext6:	
  3194 ;; *************** function _led4Blink *****************
  3195 ;; Defined at:
  3196 ;;		line 78 in file "main.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;		None
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;		None
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  1    wreg      void 
  3203 ;; Registers used:
  3204 ;;		wreg
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3212 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3213 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3214 ;;Total ram usage:        2 bytes
  3215 ;; Hardware stack levels used:    1
  3216 ;; Hardware stack levels required when called:    4
  3217 ;; This function calls:
  3218 ;;		Nothing
  3219 ;; This function is called by:
  3220 ;;		_receive
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           
  3225                           ;psect for function _led4Blink
  3226  01CC                     _led4Blink:	
  3227  01CC                     l78:	
  3228                           ;incstack = 0
  3229                           ; Regs used in _led4Blink: [wreg]
  3230                           ;main.c: 79:     do { LATCbits.LATC5 = 1; } while(0);
  3231                           
  3232  01CC  0022               	movlb	2	; select bank2
  3233  01CD  168E               	bsf	14,5	;volatile
  3234  01CE                     l923:	
  3235                           
  3236                           ;main.c: 80:     _delay((unsigned long)((200)*(4000000/4000.0)));
  3237  01CE  3002               	movlw	2
  3238  01CF  00F2               	movwf	??_led4Blink+1
  3239  01D0  3004               	movlw	4
  3240  01D1  00F1               	movwf	??_led4Blink
  3241  01D2  30BA               	movlw	186
  3242  01D3                     u537:	
  3243  01D3  0B89               	decfsz	9,f
  3244  01D4  29D3               	goto	u537
  3245  01D5  0BF1               	decfsz	??_led4Blink,f
  3246  01D6  29D3               	goto	u537
  3247  01D7  0BF2               	decfsz	??_led4Blink+1,f
  3248  01D8  29D3               	goto	u537
  3249  01D9  3200               	nop2
  3250  01DA                     l925:	
  3251  01DA  0022               	movlb	2	; select bank2
  3252  01DB  128E               	bcf	14,5	;volatile
  3253  01DC                     l81:	
  3254                           
  3255                           ;main.c: 82:     _delay((unsigned long)((200)*(4000000/4000.0)));
  3256  01DC  3002               	movlw	2
  3257  01DD  00F2               	movwf	??_led4Blink+1
  3258  01DE  3004               	movlw	4
  3259  01DF  00F1               	movwf	??_led4Blink
  3260  01E0  30BA               	movlw	186
  3261  01E1                     u547:	
  3262  01E1  0B89               	decfsz	9,f
  3263  01E2  29E1               	goto	u547
  3264  01E3  0BF1               	decfsz	??_led4Blink,f
  3265  01E4  29E1               	goto	u547
  3266  01E5  0BF2               	decfsz	??_led4Blink+1,f
  3267  01E6  29E1               	goto	u547
  3268  01E7  3200               	nop2
  3269  01E8                     l82:	
  3270  01E8  0008               	return
  3271  01E9                     __end_of_led4Blink:	
  3272                           
  3273                           	psect	text7
  3274  01E9                     __ptext7:	
  3275 ;; *************** function _led3Blink *****************
  3276 ;; Defined at:
  3277 ;;		line 71 in file "main.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;		None
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;		None
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  1    wreg      void 
  3284 ;; Registers used:
  3285 ;;		wreg
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3293 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3294 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3295 ;;Total ram usage:        2 bytes
  3296 ;; Hardware stack levels used:    1
  3297 ;; Hardware stack levels required when called:    4
  3298 ;; This function calls:
  3299 ;;		Nothing
  3300 ;; This function is called by:
  3301 ;;		_receive
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           
  3306                           ;psect for function _led3Blink
  3307  01E9                     _led3Blink:	
  3308  01E9                     l71:	
  3309                           ;incstack = 0
  3310                           ; Regs used in _led3Blink: [wreg]
  3311                           ;main.c: 72:     do { LATAbits.LATA2 = 1; } while(0);
  3312                           
  3313  01E9  0022               	movlb	2	; select bank2
  3314  01EA  150C               	bsf	12,2	;volatile
  3315  01EB                     l919:	
  3316                           
  3317                           ;main.c: 73:     _delay((unsigned long)((200)*(4000000/4000.0)));
  3318  01EB  3002               	movlw	2
  3319  01EC  00F2               	movwf	??_led3Blink+1
  3320  01ED  3004               	movlw	4
  3321  01EE  00F1               	movwf	??_led3Blink
  3322  01EF  30BA               	movlw	186
  3323  01F0                     u557:	
  3324  01F0  0B89               	decfsz	9,f
  3325  01F1  29F0               	goto	u557
  3326  01F2  0BF1               	decfsz	??_led3Blink,f
  3327  01F3  29F0               	goto	u557
  3328  01F4  0BF2               	decfsz	??_led3Blink+1,f
  3329  01F5  29F0               	goto	u557
  3330  01F6  3200               	nop2
  3331  01F7                     l921:	
  3332  01F7  0022               	movlb	2	; select bank2
  3333  01F8  110C               	bcf	12,2	;volatile
  3334  01F9                     l74:	
  3335                           
  3336                           ;main.c: 75:     _delay((unsigned long)((200)*(4000000/4000.0)));
  3337  01F9  3002               	movlw	2
  3338  01FA  00F2               	movwf	??_led3Blink+1
  3339  01FB  3004               	movlw	4
  3340  01FC  00F1               	movwf	??_led3Blink
  3341  01FD  30BA               	movlw	186
  3342  01FE                     u567:	
  3343  01FE  0B89               	decfsz	9,f
  3344  01FF  29FE               	goto	u567
  3345  0200  0BF1               	decfsz	??_led3Blink,f
  3346  0201  29FE               	goto	u567
  3347  0202  0BF2               	decfsz	??_led3Blink+1,f
  3348  0203  29FE               	goto	u567
  3349  0204  3200               	nop2
  3350  0205                     l75:	
  3351  0205  0008               	return
  3352  0206                     __end_of_led3Blink:	
  3353                           
  3354                           	psect	text8
  3355  0206                     __ptext8:	
  3356 ;; *************** function _led2Blink *****************
  3357 ;; Defined at:
  3358 ;;		line 64 in file "main.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;		None
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;		None
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  1    wreg      void 
  3365 ;; Registers used:
  3366 ;;		wreg
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3374 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3375 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3376 ;;Total ram usage:        2 bytes
  3377 ;; Hardware stack levels used:    1
  3378 ;; Hardware stack levels required when called:    4
  3379 ;; This function calls:
  3380 ;;		Nothing
  3381 ;; This function is called by:
  3382 ;;		_receive
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           
  3387                           ;psect for function _led2Blink
  3388  0206                     _led2Blink:	
  3389  0206                     l64:	
  3390                           ;incstack = 0
  3391                           ; Regs used in _led2Blink: [wreg]
  3392                           ;main.c: 65:     do { LATAbits.LATA1 = 1; } while(0);
  3393                           
  3394  0206  0022               	movlb	2	; select bank2
  3395  0207  148C               	bsf	12,1	;volatile
  3396  0208                     l931:	
  3397                           
  3398                           ;main.c: 66:     _delay((unsigned long)((200)*(4000000/4000.0)));
  3399  0208  3002               	movlw	2
  3400  0209  00F2               	movwf	??_led2Blink+1
  3401  020A  3004               	movlw	4
  3402  020B  00F1               	movwf	??_led2Blink
  3403  020C  30BA               	movlw	186
  3404  020D                     u577:	
  3405  020D  0B89               	decfsz	9,f
  3406  020E  2A0D               	goto	u577
  3407  020F  0BF1               	decfsz	??_led2Blink,f
  3408  0210  2A0D               	goto	u577
  3409  0211  0BF2               	decfsz	??_led2Blink+1,f
  3410  0212  2A0D               	goto	u577
  3411  0213  3200               	nop2
  3412  0214                     l933:	
  3413  0214  0022               	movlb	2	; select bank2
  3414  0215  108C               	bcf	12,1	;volatile
  3415  0216                     l67:	
  3416                           
  3417                           ;main.c: 68:     _delay((unsigned long)((200)*(4000000/4000.0)));
  3418  0216  3002               	movlw	2
  3419  0217  00F2               	movwf	??_led2Blink+1
  3420  0218  3004               	movlw	4
  3421  0219  00F1               	movwf	??_led2Blink
  3422  021A  30BA               	movlw	186
  3423  021B                     u587:	
  3424  021B  0B89               	decfsz	9,f
  3425  021C  2A1B               	goto	u587
  3426  021D  0BF1               	decfsz	??_led2Blink,f
  3427  021E  2A1B               	goto	u587
  3428  021F  0BF2               	decfsz	??_led2Blink+1,f
  3429  0220  2A1B               	goto	u587
  3430  0221  3200               	nop2
  3431  0222                     l68:	
  3432  0222  0008               	return
  3433  0223                     __end_of_led2Blink:	
  3434                           
  3435                           	psect	text9
  3436  0271                     __ptext9:	
  3437 ;; *************** function _EUSART_is_rx_ready *****************
  3438 ;; Defined at:
  3439 ;;		line 137 in file "mcc_generated_files/eusart.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;		None
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;		None
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  1    wreg      _Bool 
  3446 ;; Registers used:
  3447 ;;		wreg, status,2, status,0
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3457 ;;Total ram usage:        0 bytes
  3458 ;; Hardware stack levels used:    1
  3459 ;; Hardware stack levels required when called:    4
  3460 ;; This function calls:
  3461 ;;		Nothing
  3462 ;; This function is called by:
  3463 ;;		_receive
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           
  3468                           ;psect for function _EUSART_is_rx_ready
  3469  0271                     _EUSART_is_rx_ready:	
  3470  0271                     l1175:	
  3471                           ;incstack = 0
  3472                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  3473                           
  3474                           
  3475                           ;mcc_generated_files/eusart.c: 139:     return (eusartRxCount ? 1 : 0);
  3476  0271  0020               	movlb	0	; select bank0
  3477  0272  0839               	movf	_eusartRxCount,w	;volatile
  3478  0273  1D03               	btfss	3,2
  3479  0274  2A76               	goto	u341
  3480  0275  2A78               	goto	u340
  3481  0276                     u341:	
  3482  0276  3001               	movlw	1
  3483  0277  2A79               	goto	u350
  3484  0278                     u340:	
  3485  0278  3000               	movlw	0
  3486  0279                     u350:	
  3487  0279                     l256:	
  3488  0279  0008               	return
  3489  027A                     __end_of_EUSART_is_rx_ready:	
  3490                           
  3491                           	psect	text10
  3492  0111                     __ptext10:	
  3493 ;; *************** function _EUSART_Read *****************
  3494 ;; Defined at:
  3495 ;;		line 151 in file "mcc_generated_files/eusart.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;		None
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;  readValue       1    2[COMMON] unsigned char 
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  1    wreg      unsigned char 
  3502 ;; Registers used:
  3503 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3510 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3511 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3512 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3513 ;;Total ram usage:        2 bytes
  3514 ;; Hardware stack levels used:    1
  3515 ;; Hardware stack levels required when called:    4
  3516 ;; This function calls:
  3517 ;;		Nothing
  3518 ;; This function is called by:
  3519 ;;		_receive
  3520 ;;		_getch
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           
  3524                           
  3525                           ;psect for function _EUSART_Read
  3526  0111                     _EUSART_Read:	
  3527  0111                     l1153:	
  3528                           ;incstack = 0
  3529                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  3530                           
  3531  0111                     l1155:	
  3532                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  3533                           
  3534                           
  3535                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  3536  0111  0020               	movlb	0	; select bank0
  3537  0112  0839               	movf	_eusartRxCount,w	;volatile
  3538  0113  1903               	btfsc	3,2
  3539  0114  2916               	goto	u321
  3540  0115  2917               	goto	u320
  3541  0116                     u321:	
  3542  0116  2911               	goto	l1155
  3543  0117                     u320:	
  3544  0117                     l1157:	
  3545                           
  3546                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
  3547  0117  0879               	movf	_eusartRxTail,w	;volatile
  3548  0118  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  3549  0119  0086               	movwf	6
  3550  011A  0187               	clrf	7
  3551  011B  0801               	movf	1,w
  3552  011C  00F1               	movwf	??_EUSART_Read
  3553  011D  0871               	movf	??_EUSART_Read,w
  3554  011E  00B8               	movwf	_eusartRxLastError	;volatile
  3555                           
  3556                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
  3557  011F  0879               	movf	_eusartRxTail,w
  3558  0120  3E28               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  3559  0121  0086               	movwf	6
  3560  0122  0187               	clrf	7
  3561  0123  0801               	movf	1,w
  3562  0124  00F1               	movwf	??_EUSART_Read
  3563  0125  0871               	movf	??_EUSART_Read,w
  3564  0126  00F2               	movwf	EUSART_Read@readValue
  3565  0127                     l1159:	
  3566  0127  3001               	movlw	1
  3567  0128  00F1               	movwf	??_EUSART_Read
  3568  0129  0871               	movf	??_EUSART_Read,w
  3569  012A  07F9               	addwf	_eusartRxTail,f	;volatile
  3570  012B                     l1161:	
  3571                           
  3572                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  3573  012B  3008               	movlw	8
  3574  012C  0279               	subwf	_eusartRxTail,w	;volatile
  3575  012D  1C03               	skipc
  3576  012E  2930               	goto	u331
  3577  012F  2931               	goto	u330
  3578  0130                     u331:	
  3579  0130  2932               	goto	l1165
  3580  0131                     u330:	
  3581  0131                     l1163:	
  3582                           
  3583                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
  3584  0131  01F9               	clrf	_eusartRxTail	;volatile
  3585  0132                     l1165:	
  3586                           
  3587                           ;mcc_generated_files/eusart.c: 166:     PIE1bits.RCIE = 0;
  3588  0132  0021               	movlb	1	; select bank1
  3589  0133  1290               	bcf	16,5	;volatile
  3590  0134                     l1167:	
  3591                           
  3592                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
  3593  0134  3001               	movlw	1
  3594  0135  0020               	movlb	0	; select bank0
  3595  0136  02B9               	subwf	_eusartRxCount,f	;volatile
  3596  0137                     l1169:	
  3597                           
  3598                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.RCIE = 1;
  3599  0137  0021               	movlb	1	; select bank1
  3600  0138  1690               	bsf	16,5	;volatile
  3601  0139                     l1171:	
  3602                           
  3603                           ;mcc_generated_files/eusart.c: 170:     return readValue;
  3604  0139  0872               	movf	EUSART_Read@readValue,w
  3605  013A                     l269:	
  3606  013A  0008               	return
  3607  013B                     __end_of_EUSART_Read:	
  3608                           
  3609                           	psect	text11
  3610  025E                     __ptext11:	
  3611 ;; *************** function _SYSTEM_Initialize *****************
  3612 ;; Defined at:
  3613 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;		None
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;		None
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  1    wreg      void 
  3620 ;; Registers used:
  3621 ;;		wreg, status,2, status,0, pclath, cstack
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3631 ;;Total ram usage:        0 bytes
  3632 ;; Hardware stack levels used:    1
  3633 ;; Hardware stack levels required when called:    6
  3634 ;; This function calls:
  3635 ;;		_EUSART_Initialize
  3636 ;;		_OSCILLATOR_Initialize
  3637 ;;		_PIN_MANAGER_Initialize
  3638 ;; This function is called by:
  3639 ;;		_main
  3640 ;; This function uses a non-reentrant model
  3641 ;;
  3642                           
  3643                           
  3644                           ;psect for function _SYSTEM_Initialize
  3645  025E                     _SYSTEM_Initialize:	
  3646  025E                     l1215:	
  3647                           ;incstack = 0
  3648                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3649                           
  3650                           
  3651                           ;mcc_generated_files/mcc.c: 52:     PIN_MANAGER_Initialize();
  3652  025E  3180  20B6  3182   	fcall	_PIN_MANAGER_Initialize
  3653                           
  3654                           ;mcc_generated_files/mcc.c: 53:     OSCILLATOR_Initialize();
  3655  0261  3182  227A  3182   	fcall	_OSCILLATOR_Initialize
  3656                           
  3657                           ;mcc_generated_files/mcc.c: 54:     EUSART_Initialize();
  3658  0264  3180  203E  3182   	fcall	_EUSART_Initialize
  3659  0267                     l97:	
  3660  0267  0008               	return
  3661  0268                     __end_of_SYSTEM_Initialize:	
  3662                           
  3663                           	psect	text12
  3664  00B6                     __ptext12:	
  3665 ;; *************** function _PIN_MANAGER_Initialize *****************
  3666 ;; Defined at:
  3667 ;;		line 7 in file "mcc_generated_files/pin_manager.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;		None
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;		None
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  1    wreg      void 
  3674 ;; Registers used:
  3675 ;;		wreg, status,2
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3685 ;;Total ram usage:        0 bytes
  3686 ;; Hardware stack levels used:    1
  3687 ;; Hardware stack levels required when called:    4
  3688 ;; This function calls:
  3689 ;;		Nothing
  3690 ;; This function is called by:
  3691 ;;		_SYSTEM_Initialize
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           
  3696                           ;psect for function _PIN_MANAGER_Initialize
  3697  00B6                     _PIN_MANAGER_Initialize:	
  3698  00B6                     l935:	
  3699                           ;incstack = 0
  3700                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3701                           
  3702                           
  3703                           ;mcc_generated_files/pin_manager.c: 12:     LATA = 0x00;
  3704  00B6  0022               	movlb	2	; select bank2
  3705  00B7  018C               	clrf	12	;volatile
  3706                           
  3707                           ;mcc_generated_files/pin_manager.c: 13:     LATB = 0x00;
  3708  00B8  018D               	clrf	13	;volatile
  3709                           
  3710                           ;mcc_generated_files/pin_manager.c: 14:     LATC = 0x00;
  3711  00B9  018E               	clrf	14	;volatile
  3712  00BA                     l937:	
  3713                           
  3714                           ;mcc_generated_files/pin_manager.c: 19:     TRISA = 0x11;
  3715  00BA  3011               	movlw	17
  3716  00BB  0021               	movlb	1	; select bank1
  3717  00BC  008C               	movwf	12	;volatile
  3718  00BD                     l939:	
  3719                           
  3720                           ;mcc_generated_files/pin_manager.c: 20:     TRISB = 0x70;
  3721  00BD  3070               	movlw	112
  3722  00BE  008D               	movwf	13	;volatile
  3723  00BF                     l941:	
  3724                           
  3725                           ;mcc_generated_files/pin_manager.c: 21:     TRISC = 0xDF;
  3726  00BF  30DF               	movlw	223
  3727  00C0  008E               	movwf	14	;volatile
  3728  00C1                     l943:	
  3729                           
  3730                           ;mcc_generated_files/pin_manager.c: 26:     ANSELC = 0xCF;
  3731  00C1  30CF               	movlw	207
  3732  00C2  0023               	movlb	3	; select bank3
  3733  00C3  008E               	movwf	14	;volatile
  3734  00C4                     l945:	
  3735                           
  3736                           ;mcc_generated_files/pin_manager.c: 27:     ANSELB = 0xD0;
  3737  00C4  30D0               	movlw	208
  3738  00C5  008D               	movwf	13	;volatile
  3739  00C6                     l947:	
  3740                           
  3741                           ;mcc_generated_files/pin_manager.c: 28:     ANSELA = 0x11;
  3742  00C6  3011               	movlw	17
  3743  00C7  008C               	movwf	12	;volatile
  3744                           
  3745                           ;mcc_generated_files/pin_manager.c: 33:     WPUB = 0x00;
  3746  00C8  0024               	movlb	4	; select bank4
  3747  00C9  018D               	clrf	13	;volatile
  3748                           
  3749                           ;mcc_generated_files/pin_manager.c: 34:     WPUA = 0x00;
  3750  00CA  018C               	clrf	12	;volatile
  3751                           
  3752                           ;mcc_generated_files/pin_manager.c: 35:     WPUC = 0x00;
  3753  00CB  018E               	clrf	14	;volatile
  3754  00CC                     l949:	
  3755                           
  3756                           ;mcc_generated_files/pin_manager.c: 36:     OPTION_REGbits.nWPUEN = 1;
  3757  00CC  0021               	movlb	1	; select bank1
  3758  00CD  1795               	bsf	21,7	;volatile
  3759                           
  3760                           ;mcc_generated_files/pin_manager.c: 41:     ODCONA = 0x00;
  3761  00CE  0025               	movlb	5	; select bank5
  3762  00CF  018C               	clrf	12	;volatile
  3763                           
  3764                           ;mcc_generated_files/pin_manager.c: 42:     ODCONB = 0x00;
  3765  00D0  018D               	clrf	13	;volatile
  3766                           
  3767                           ;mcc_generated_files/pin_manager.c: 43:     ODCONC = 0x00;
  3768  00D1  018E               	clrf	14	;volatile
  3769  00D2                     l951:	
  3770                           
  3771                           ;mcc_generated_files/pin_manager.c: 48:     SLRCONA = 0x37;
  3772  00D2  3037               	movlw	55
  3773  00D3  0026               	movlb	6	; select bank6
  3774  00D4  008C               	movwf	12	;volatile
  3775  00D5                     l953:	
  3776                           
  3777                           ;mcc_generated_files/pin_manager.c: 49:     SLRCONB = 0xF0;
  3778  00D5  30F0               	movlw	240
  3779  00D6  008D               	movwf	13	;volatile
  3780  00D7                     l955:	
  3781                           
  3782                           ;mcc_generated_files/pin_manager.c: 50:     SLRCONC = 0xFF;
  3783  00D7  30FF               	movlw	255
  3784  00D8  008E               	movwf	14	;volatile
  3785  00D9                     l957:	
  3786                           
  3787                           ;mcc_generated_files/pin_manager.c: 55:     INLVLA = 0x3F;
  3788  00D9  303F               	movlw	63
  3789  00DA  0027               	movlb	7	; select bank7
  3790  00DB  008C               	movwf	12	;volatile
  3791  00DC                     l959:	
  3792                           
  3793                           ;mcc_generated_files/pin_manager.c: 56:     INLVLB = 0xF0;
  3794  00DC  30F0               	movlw	240
  3795  00DD  008D               	movwf	13	;volatile
  3796  00DE                     l961:	
  3797                           
  3798                           ;mcc_generated_files/pin_manager.c: 57:     INLVLC = 0xFF;
  3799  00DE  30FF               	movlw	255
  3800  00DF  008E               	movwf	14	;volatile
  3801  00E0                     l963:	
  3802                           
  3803                           ;mcc_generated_files/pin_manager.c: 66:     RXPPS = 0x0D;
  3804  00E0  300D               	movlw	13
  3805  00E1  003C               	movlb	28	; select bank28
  3806  00E2  00A4               	movwf	36	;volatile
  3807  00E3                     l965:	
  3808                           
  3809                           ;mcc_generated_files/pin_manager.c: 67:     RB7PPS = 0x12;
  3810  00E3  3012               	movlw	18
  3811  00E4  003D               	movlb	29	; select bank29
  3812  00E5  009F               	movwf	31	;volatile
  3813  00E6                     l151:	
  3814  00E6  0008               	return
  3815  00E7                     __end_of_PIN_MANAGER_Initialize:	
  3816                           
  3817                           	psect	text13
  3818  027A                     __ptext13:	
  3819 ;; *************** function _OSCILLATOR_Initialize *****************
  3820 ;; Defined at:
  3821 ;;		line 57 in file "mcc_generated_files/mcc.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;		None
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;		None
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  1    wreg      void 
  3828 ;; Registers used:
  3829 ;;		wreg, status,2
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3839 ;;Total ram usage:        0 bytes
  3840 ;; Hardware stack levels used:    1
  3841 ;; Hardware stack levels required when called:    4
  3842 ;; This function calls:
  3843 ;;		Nothing
  3844 ;; This function is called by:
  3845 ;;		_SYSTEM_Initialize
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           
  3850                           ;psect for function _OSCILLATOR_Initialize
  3851  027A                     _OSCILLATOR_Initialize:	
  3852  027A                     l967:	
  3853                           ;incstack = 0
  3854                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3855                           
  3856                           
  3857                           ;mcc_generated_files/mcc.c: 60:     OSCCON = 0x6A;
  3858  027A  306A               	movlw	106
  3859  027B  0021               	movlb	1	; select bank1
  3860  027C  0099               	movwf	25	;volatile
  3861  027D                     l969:	
  3862                           
  3863                           ;mcc_generated_files/mcc.c: 62:     OSCTUNE = 0x00;
  3864  027D  0198               	clrf	24	;volatile
  3865  027E                     l971:	
  3866                           
  3867                           ;mcc_generated_files/mcc.c: 64:     BORCON = 0x00;
  3868  027E  0022               	movlb	2	; select bank2
  3869  027F  0196               	clrf	22	;volatile
  3870  0280                     l100:	
  3871  0280  0008               	return
  3872  0281                     __end_of_OSCILLATOR_Initialize:	
  3873                           
  3874                           	psect	text14
  3875  003E                     __ptext14:	
  3876 ;; *************** function _EUSART_Initialize *****************
  3877 ;; Defined at:
  3878 ;;		line 88 in file "mcc_generated_files/eusart.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;		None
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;		None
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  1    wreg      void 
  3885 ;; Registers used:
  3886 ;;		wreg, status,2, status,0, pclath, cstack
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3894 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3895 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3896 ;;Total ram usage:        1 bytes
  3897 ;; Hardware stack levels used:    1
  3898 ;; Hardware stack levels required when called:    5
  3899 ;; This function calls:
  3900 ;;		_EUSART_SetErrorHandler
  3901 ;;		_EUSART_SetFramingErrorHandler
  3902 ;;		_EUSART_SetOverrunErrorHandler
  3903 ;;		_EUSART_SetRxInterruptHandler
  3904 ;;		_EUSART_SetTxInterruptHandler
  3905 ;; This function is called by:
  3906 ;;		_SYSTEM_Initialize
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           
  3911                           ;psect for function _EUSART_Initialize
  3912  003E                     _EUSART_Initialize:	
  3913  003E                     l1179:	
  3914                           ;incstack = 0
  3915                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3916                           
  3917                           
  3918                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  3919  003E  0021               	movlb	1	; select bank1
  3920  003F  1290               	bcf	16,5	;volatile
  3921  0040                     l1181:	
  3922                           
  3923                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  3924  0040  307D               	movlw	low _EUSART_Receive_ISR
  3925  0041  00F1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  3926  0042  3000               	movlw	high _EUSART_Receive_ISR
  3927  0043  00F2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  3928  0044  3182  228D  3180   	fcall	_EUSART_SetRxInterruptHandler
  3929  0047                     l1183:	
  3930                           
  3931                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  3932  0047  0021               	movlb	1	; select bank1
  3933  0048  1210               	bcf	16,4	;volatile
  3934                           
  3935                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  3936  0049  308A               	movlw	low _EUSART_Transmit_ISR
  3937  004A  00F1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  3938  004B  3001               	movlw	high _EUSART_Transmit_ISR
  3939  004C  00F2               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  3940  004D  3182  2287  3180   	fcall	_EUSART_SetTxInterruptHandler
  3941  0050                     l1185:	
  3942                           
  3943                           ;mcc_generated_files/eusart.c: 98:     BAUD1CON = 0x08;
  3944  0050  3008               	movlw	8
  3945  0051  0023               	movlb	3	; select bank3
  3946  0052  009F               	movwf	31	;volatile
  3947  0053                     l1187:	
  3948                           
  3949                           ;mcc_generated_files/eusart.c: 101:     RC1STA = 0xB8;
  3950  0053  30B8               	movlw	184
  3951  0054  009D               	movwf	29	;volatile
  3952  0055                     l1189:	
  3953                           
  3954                           ;mcc_generated_files/eusart.c: 104:     TX1STA = 0x2C;
  3955  0055  302C               	movlw	44
  3956  0056  009E               	movwf	30	;volatile
  3957  0057                     l1191:	
  3958                           
  3959                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0x08;
  3960  0057  3008               	movlw	8
  3961  0058  009B               	movwf	27	;volatile
  3962  0059                     l1193:	
  3963                           
  3964                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  3965  0059  019C               	clrf	28	;volatile
  3966  005A                     l1195:	
  3967                           
  3968                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  3969  005A  30AD               	movlw	low _EUSART_DefaultFramingErrorHandler
  3970  005B  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3971  005C  3002               	movlw	high _EUSART_DefaultFramingErrorHandler
  3972  005D  00F2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3973  005E  3182  2299  3180   	fcall	_EUSART_SetFramingErrorHandler
  3974  0061                     l1197:	
  3975                           
  3976                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  3977  0061  30A5               	movlw	low _EUSART_DefaultOverrunErrorHandler
  3978  0062  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3979  0063  3002               	movlw	high _EUSART_DefaultOverrunErrorHandler
  3980  0064  00F2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3981  0065  3182  2293  3180   	fcall	_EUSART_SetOverrunErrorHandler
  3982  0068                     l1199:	
  3983                           
  3984                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  3985  0068  30A9               	movlw	low _EUSART_DefaultErrorHandler
  3986  0069  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler
  3987  006A  3002               	movlw	high _EUSART_DefaultErrorHandler
  3988  006B  00F2               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3989  006C  3182  229F  3180   	fcall	_EUSART_SetErrorHandler
  3990                           
  3991                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  3992  006F  0020               	movlb	0	; select bank0
  3993  0070  01B8               	clrf	_eusartRxLastError	;volatile
  3994                           
  3995                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  3996  0071  01FC               	clrf	_eusartTxHead	;volatile
  3997                           
  3998                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  3999  0072  01FB               	clrf	_eusartTxTail	;volatile
  4000  0073                     l1201:	
  4001                           
  4002                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  4003  0073  3008               	movlw	8
  4004  0074  00F3               	movwf	??_EUSART_Initialize
  4005  0075  0873               	movf	??_EUSART_Initialize,w
  4006  0076  00C4               	movwf	_eusartTxBufferRemaining	;volatile
  4007  0077                     l1203:	
  4008                           
  4009                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  4010  0077  01FA               	clrf	_eusartRxHead	;volatile
  4011  0078                     l1205:	
  4012                           
  4013                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  4014  0078  01F9               	clrf	_eusartRxTail	;volatile
  4015  0079                     l1207:	
  4016                           
  4017                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  4018  0079  01B9               	clrf	_eusartRxCount	;volatile
  4019  007A                     l1209:	
  4020                           
  4021                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  4022  007A  0021               	movlb	1	; select bank1
  4023  007B  1690               	bsf	16,5	;volatile
  4024  007C                     l250:	
  4025  007C  0008               	return
  4026  007D                     __end_of_EUSART_Initialize:	
  4027                           
  4028                           	psect	text15
  4029  0287                     __ptext15:	
  4030 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  4031 ;; Defined at:
  4032 ;;		line 285 in file "mcc_generated_files/eusart.c"
  4033 ;; Parameters:    Size  Location     Type
  4034 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4035 ;;		 -> EUSART_Transmit_ISR(1), 
  4036 ;; Auto vars:     Size  Location     Type
  4037 ;;		None
  4038 ;; Return value:  Size  Location     Type
  4039 ;;                  1    wreg      void 
  4040 ;; Registers used:
  4041 ;;		wreg
  4042 ;; Tracked objects:
  4043 ;;		On entry : 0/0
  4044 ;;		On exit  : 0/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4047 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4050 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4051 ;;Total ram usage:        2 bytes
  4052 ;; Hardware stack levels used:    1
  4053 ;; Hardware stack levels required when called:    4
  4054 ;; This function calls:
  4055 ;;		Nothing
  4056 ;; This function is called by:
  4057 ;;		_EUSART_Initialize
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           
  4062                           ;psect for function _EUSART_SetTxInterruptHandler
  4063  0287                     _EUSART_SetTxInterruptHandler:	
  4064  0287                     l1113:	
  4065                           ;incstack = 0
  4066                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  4067                           
  4068                           
  4069                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  4070  0287  0872               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  4071  0288  0020               	movlb	0	; select bank0
  4072  0289  00C3               	movwf	_EUSART_TxDefaultInterruptHandler+1
  4073  028A  0871               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  4074  028B  00C2               	movwf	_EUSART_TxDefaultInterruptHandler
  4075  028C                     l322:	
  4076  028C  0008               	return
  4077  028D                     __end_of_EUSART_SetTxInterruptHandler:	
  4078                           
  4079                           	psect	text16
  4080  028D                     __ptext16:	
  4081 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  4082 ;; Defined at:
  4083 ;;		line 289 in file "mcc_generated_files/eusart.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4086 ;;		 -> EUSART_Receive_ISR(1), 
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;		None
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  1    wreg      void 
  4091 ;; Registers used:
  4092 ;;		wreg
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4098 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4101 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4102 ;;Total ram usage:        2 bytes
  4103 ;; Hardware stack levels used:    1
  4104 ;; Hardware stack levels required when called:    4
  4105 ;; This function calls:
  4106 ;;		Nothing
  4107 ;; This function is called by:
  4108 ;;		_EUSART_Initialize
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           
  4113                           ;psect for function _EUSART_SetRxInterruptHandler
  4114  028D                     _EUSART_SetRxInterruptHandler:	
  4115  028D                     l1111:	
  4116                           ;incstack = 0
  4117                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  4118                           
  4119                           
  4120                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  4121  028D  0872               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  4122  028E  0020               	movlb	0	; select bank0
  4123  028F  00C1               	movwf	_EUSART_RxDefaultInterruptHandler+1
  4124  0290  0871               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  4125  0291  00C0               	movwf	_EUSART_RxDefaultInterruptHandler
  4126  0292                     l325:	
  4127  0292  0008               	return
  4128  0293                     __end_of_EUSART_SetRxInterruptHandler:	
  4129                           
  4130                           	psect	text17
  4131  0293                     __ptext17:	
  4132 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  4133 ;; Defined at:
  4134 ;;		line 277 in file "mcc_generated_files/eusart.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4137 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;		None
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  1    wreg      void 
  4142 ;; Registers used:
  4143 ;;		wreg
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4149 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4152 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4153 ;;Total ram usage:        2 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; Hardware stack levels required when called:    4
  4156 ;; This function calls:
  4157 ;;		Nothing
  4158 ;; This function is called by:
  4159 ;;		_EUSART_Initialize
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           
  4164                           ;psect for function _EUSART_SetOverrunErrorHandler
  4165  0293                     _EUSART_SetOverrunErrorHandler:	
  4166  0293                     l1117:	
  4167                           ;incstack = 0
  4168                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  4169                           
  4170                           
  4171                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
  4172  0293  0872               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  4173  0294  0020               	movlb	0	; select bank0
  4174  0295  00BD               	movwf	_EUSART_OverrunErrorHandler+1
  4175  0296  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  4176  0297  00BC               	movwf	_EUSART_OverrunErrorHandler
  4177  0298                     l316:	
  4178  0298  0008               	return
  4179  0299                     __end_of_EUSART_SetOverrunErrorHandler:	
  4180                           
  4181                           	psect	text18
  4182  0299                     __ptext18:	
  4183 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  4184 ;; Defined at:
  4185 ;;		line 273 in file "mcc_generated_files/eusart.c"
  4186 ;; Parameters:    Size  Location     Type
  4187 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4188 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;		None
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      void 
  4193 ;; Registers used:
  4194 ;;		wreg
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4200 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4203 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4204 ;;Total ram usage:        2 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; Hardware stack levels required when called:    4
  4207 ;; This function calls:
  4208 ;;		Nothing
  4209 ;; This function is called by:
  4210 ;;		_EUSART_Initialize
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           
  4215                           ;psect for function _EUSART_SetFramingErrorHandler
  4216  0299                     _EUSART_SetFramingErrorHandler:	
  4217  0299                     l1115:	
  4218                           ;incstack = 0
  4219                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  4220                           
  4221                           
  4222                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
  4223  0299  0872               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  4224  029A  0020               	movlb	0	; select bank0
  4225  029B  00BF               	movwf	_EUSART_FramingErrorHandler+1
  4226  029C  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  4227  029D  00BE               	movwf	_EUSART_FramingErrorHandler
  4228  029E                     l313:	
  4229  029E  0008               	return
  4230  029F                     __end_of_EUSART_SetFramingErrorHandler:	
  4231                           
  4232                           	psect	text19
  4233  029F                     __ptext19:	
  4234 ;; *************** function _EUSART_SetErrorHandler *****************
  4235 ;; Defined at:
  4236 ;;		line 281 in file "mcc_generated_files/eusart.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4239 ;;		 -> EUSART_DefaultErrorHandler(1), 
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;		None
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  1    wreg      void 
  4244 ;; Registers used:
  4245 ;;		wreg
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4251 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4254 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4255 ;;Total ram usage:        2 bytes
  4256 ;; Hardware stack levels used:    1
  4257 ;; Hardware stack levels required when called:    4
  4258 ;; This function calls:
  4259 ;;		Nothing
  4260 ;; This function is called by:
  4261 ;;		_EUSART_Initialize
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           
  4266                           ;psect for function _EUSART_SetErrorHandler
  4267  029F                     _EUSART_SetErrorHandler:	
  4268  029F                     l1119:	
  4269                           ;incstack = 0
  4270                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  4271                           
  4272                           
  4273                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
  4274  029F  0872               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  4275  02A0  0020               	movlb	0	; select bank0
  4276  02A1  00BB               	movwf	_EUSART_ErrorHandler+1
  4277  02A2  0871               	movf	EUSART_SetErrorHandler@interruptHandler,w
  4278  02A3  00BA               	movwf	_EUSART_ErrorHandler
  4279  02A4                     l319:	
  4280  02A4  0008               	return
  4281  02A5                     __end_of_EUSART_SetErrorHandler:	
  4282                           
  4283                           	psect	intentry
  4284  0004                     __pintentry:	
  4285 ;; *************** function _INTERRUPT_InterruptManager *****************
  4286 ;; Defined at:
  4287 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;		None
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;		None
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  1    wreg      void 
  4294 ;; Registers used:
  4295 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4305 ;;Total ram usage:        0 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; Hardware stack levels required when called:    3
  4308 ;; This function calls:
  4309 ;;		Absolute function
  4310 ;;		_EUSART_Receive_ISR
  4311 ;;		_EUSART_Transmit_ISR
  4312 ;; This function is called by:
  4313 ;;		Interrupt level 1
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317  0004                     _INTERRUPT_InterruptManager:	
  4318                           
  4319                           ;incstack = 0
  4320  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4321                           
  4322                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4323  0005  3180               	pagesel	$
  4324  0006                     i1l1293:	
  4325                           
  4326                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  4327  0006  1F0B               	btfss	11,6	;volatile
  4328  0007  2809               	goto	u46_21
  4329  0008  280A               	goto	u46_20
  4330  0009                     u46_21:	
  4331  0009  282A               	goto	i1l175
  4332  000A                     u46_20:	
  4333  000A                     i1l1295:	
  4334                           
  4335                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  4336  000A  0021               	movlb	1	; select bank1
  4337  000B  1E10               	btfss	16,4	;volatile
  4338  000C  280E               	goto	u47_21
  4339  000D  280F               	goto	u47_20
  4340  000E                     u47_21:	
  4341  000E  281A               	goto	i1l170
  4342  000F                     u47_20:	
  4343  000F                     i1l1297:	
  4344  000F  0020               	movlb	0	; select bank0
  4345  0010  1E10               	btfss	16,4	;volatile
  4346  0011  2813               	goto	u48_21
  4347  0012  2814               	goto	u48_20
  4348  0013                     u48_21:	
  4349  0013  281A               	goto	i1l170
  4350  0014                     u48_20:	
  4351  0014                     i1l1299:	
  4352                           
  4353                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
  4354  0014  0843               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  4355  0015  008A               	movwf	10
  4356  0016  0842               	movf	_EUSART_TxDefaultInterruptHandler,w
  4357  0017  000A               	callw
  4358  0018  3180               	pagesel	$
  4359                           
  4360                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  4361  0019  282A               	goto	i1l175
  4362  001A                     i1l170:	
  4363                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  4364                           
  4365  001A  0021               	movlb	1	; select bank1
  4366  001B  1E90               	btfss	16,5	;volatile
  4367  001C  281E               	goto	u49_21
  4368  001D  281F               	goto	u49_20
  4369  001E                     u49_21:	
  4370  001E  282A               	goto	i1l171
  4371  001F                     u49_20:	
  4372  001F                     i1l1301:	
  4373  001F  0020               	movlb	0	; select bank0
  4374  0020  1E90               	btfss	16,5	;volatile
  4375  0021  2823               	goto	u50_21
  4376  0022  2824               	goto	u50_20
  4377  0023                     u50_21:	
  4378  0023  282A               	goto	i1l171
  4379  0024                     u50_20:	
  4380  0024                     i1l1303:	
  4381                           
  4382                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
  4383  0024  0841               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  4384  0025  008A               	movwf	10
  4385  0026  0840               	movf	_EUSART_RxDefaultInterruptHandler,w
  4386  0027  000A               	callw
  4387  0028  3180               	pagesel	$
  4388                           
  4389                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  4390  0029  282A               	goto	i1l175
  4391  002A                     i1l171:	
  4392  002A                     i1l175:	
  4393                           ;mcc_generated_files/interrupt_manager.c: 69:     }
  4394                           
  4395  002A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4396  002B  0009               	retfie
  4397  002C                     __end_of_INTERRUPT_InterruptManager:	
  4398                           
  4399                           	psect	text21
  4400  018A                     __ptext21:	
  4401 ;; *************** function _EUSART_Transmit_ISR *****************
  4402 ;; Defined at:
  4403 ;;		line 206 in file "mcc_generated_files/eusart.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;		None
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;		None
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  1    wreg      void 
  4410 ;; Registers used:
  4411 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4419 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4420 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4421 ;;Total ram usage:        1 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; This function calls:
  4424 ;;		Nothing
  4425 ;; This function is called by:
  4426 ;;		_EUSART_Initialize
  4427 ;;		_INTERRUPT_InterruptManager
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           
  4432                           ;psect for function _EUSART_Transmit_ISR
  4433  018A                     _EUSART_Transmit_ISR:	
  4434  018A                     i1l1245:	
  4435                           ;incstack = 0
  4436                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4437                           
  4438                           
  4439                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  4440  018A  3008               	movlw	8
  4441  018B  0020               	movlb	0	; select bank0
  4442  018C  0244               	subwf	_eusartTxBufferRemaining,w	;volatile
  4443  018D  1803               	skipnc
  4444  018E  2990               	goto	u41_21
  4445  018F  2991               	goto	u41_20
  4446  0190                     u41_21:	
  4447  0190  29A9               	goto	i1l287
  4448  0191                     u41_20:	
  4449  0191                     i1l1247:	
  4450                           
  4451                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
  4452  0191  087B               	movf	_eusartTxTail,w
  4453  0192  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4454  0193  0086               	movwf	6
  4455  0194  0187               	clrf	7
  4456  0195  0801               	movf	1,w
  4457  0196  0023               	movlb	3	; select bank3
  4458  0197  009A               	movwf	26	;volatile
  4459  0198                     i1l1249:	
  4460  0198  3001               	movlw	1
  4461  0199  00F0               	movwf	??_EUSART_Transmit_ISR
  4462  019A  0870               	movf	??_EUSART_Transmit_ISR,w
  4463  019B  07FB               	addwf	_eusartTxTail,f	;volatile
  4464  019C                     i1l1251:	
  4465                           
  4466                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  4467  019C  3008               	movlw	8
  4468  019D  027B               	subwf	_eusartTxTail,w	;volatile
  4469  019E  1C03               	skipc
  4470  019F  29A1               	goto	u42_21
  4471  01A0  29A2               	goto	u42_20
  4472  01A1                     u42_21:	
  4473  01A1  29A3               	goto	i1l1255
  4474  01A2                     u42_20:	
  4475  01A2                     i1l1253:	
  4476                           
  4477                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
  4478  01A2  01FB               	clrf	_eusartTxTail	;volatile
  4479  01A3                     i1l1255:	
  4480                           
  4481                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
  4482  01A3  3001               	movlw	1
  4483  01A4  00F0               	movwf	??_EUSART_Transmit_ISR
  4484  01A5  0870               	movf	??_EUSART_Transmit_ISR,w
  4485  01A6  0020               	movlb	0	; select bank0
  4486  01A7  07C4               	addwf	_eusartTxBufferRemaining,f	;volatile
  4487                           
  4488                           ;mcc_generated_files/eusart.c: 218:     }
  4489  01A8  29AB               	goto	i1l290
  4490  01A9                     i1l287:	
  4491                           ;mcc_generated_files/eusart.c: 219:     else
  4492                           
  4493                           
  4494                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TXIE = 0;
  4495  01A9  0021               	movlb	1	; select bank1
  4496  01AA  1210               	bcf	16,4	;volatile
  4497  01AB                     i1l290:	
  4498  01AB  0008               	return
  4499  01AC                     __end_of_EUSART_Transmit_ISR:	
  4500                           
  4501                           	psect	text22
  4502  007D                     __ptext22:	
  4503 ;; *************** function _EUSART_Receive_ISR *****************
  4504 ;; Defined at:
  4505 ;;		line 225 in file "mcc_generated_files/eusart.c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;		None
  4508 ;; Auto vars:     Size  Location     Type
  4509 ;;		None
  4510 ;; Return value:  Size  Location     Type
  4511 ;;                  1    wreg      void 
  4512 ;; Registers used:
  4513 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4514 ;; Tracked objects:
  4515 ;;		On entry : 0/0
  4516 ;;		On exit  : 0/0
  4517 ;;		Unchanged: 0/0
  4518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4523 ;;Total ram usage:        0 bytes
  4524 ;; Hardware stack levels used:    1
  4525 ;; Hardware stack levels required when called:    2
  4526 ;; This function calls:
  4527 ;;		Absolute function
  4528 ;;		_EUSART_DefaultErrorHandler
  4529 ;;		_EUSART_DefaultFramingErrorHandler
  4530 ;;		_EUSART_DefaultOverrunErrorHandler
  4531 ;;		_EUSART_RxDataHandler
  4532 ;; This function is called by:
  4533 ;;		_EUSART_Initialize
  4534 ;;		_INTERRUPT_InterruptManager
  4535 ;; This function uses a non-reentrant model
  4536 ;;
  4537                           
  4538                           
  4539                           ;psect for function _EUSART_Receive_ISR
  4540  007D                     _EUSART_Receive_ISR:	
  4541  007D                     i1l1257:	
  4542                           ;incstack = 0
  4543                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4544                           
  4545                           
  4546                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  4547  007D  087A               	movf	_eusartRxHead,w	;volatile
  4548  007E  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4549  007F  0086               	movwf	6
  4550  0080  0187               	clrf	7
  4551  0081  0181               	clrf	1
  4552  0082                     i1l1259:	
  4553                           
  4554                           ;mcc_generated_files/eusart.c: 230:     if(RC1STAbits.FERR){
  4555  0082  0023               	movlb	3	; select bank3
  4556  0083  1D1D               	btfss	29,2	;volatile
  4557  0084  2886               	goto	u43_21
  4558  0085  2887               	goto	u43_20
  4559  0086                     u43_21:	
  4560  0086  2892               	goto	i1l1265
  4561  0087                     u43_20:	
  4562  0087                     i1l1261:	
  4563                           
  4564                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  4565  0087  087A               	movf	_eusartRxHead,w	;volatile
  4566  0088  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4567  0089  0086               	movwf	6
  4568  008A  0187               	clrf	7
  4569  008B  1481               	bsf	1,1
  4570  008C                     i1l1263:	
  4571                           
  4572                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
  4573  008C  0020               	movlb	0	; select bank0
  4574  008D  083F               	movf	_EUSART_FramingErrorHandler+1,w
  4575  008E  008A               	movwf	10
  4576  008F  083E               	movf	_EUSART_FramingErrorHandler,w
  4577  0090  000A               	callw
  4578  0091  3180               	pagesel	$
  4579  0092                     i1l1265:	
  4580                           
  4581                           ;mcc_generated_files/eusart.c: 235:     if(RC1STAbits.OERR){
  4582  0092  0023               	movlb	3	; select bank3
  4583  0093  1C9D               	btfss	29,1	;volatile
  4584  0094  2896               	goto	u44_21
  4585  0095  2897               	goto	u44_20
  4586  0096                     u44_21:	
  4587  0096  28A2               	goto	i1l1271
  4588  0097                     u44_20:	
  4589  0097                     i1l1267:	
  4590                           
  4591                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  4592  0097  087A               	movf	_eusartRxHead,w	;volatile
  4593  0098  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4594  0099  0086               	movwf	6
  4595  009A  0187               	clrf	7
  4596  009B  1501               	bsf	1,2
  4597  009C                     i1l1269:	
  4598                           
  4599                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
  4600  009C  0020               	movlb	0	; select bank0
  4601  009D  083D               	movf	_EUSART_OverrunErrorHandler+1,w
  4602  009E  008A               	movwf	10
  4603  009F  083C               	movf	_EUSART_OverrunErrorHandler,w
  4604  00A0  000A               	callw
  4605  00A1  3180               	pagesel	$
  4606  00A2                     i1l1271:	
  4607                           
  4608                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
  4609  00A2  087A               	movf	_eusartRxHead,w	;volatile
  4610  00A3  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4611  00A4  0086               	movwf	6
  4612  00A5  0187               	clrf	7
  4613  00A6  0801               	movf	1,w
  4614  00A7  1903               	btfsc	3,2
  4615  00A8  28AA               	goto	u45_21
  4616  00A9  28AB               	goto	u45_20
  4617  00AA                     u45_21:	
  4618  00AA  28B2               	goto	i1l1275
  4619  00AB                     u45_20:	
  4620  00AB                     i1l1273:	
  4621                           
  4622                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
  4623  00AB  0020               	movlb	0	; select bank0
  4624  00AC  083B               	movf	_EUSART_ErrorHandler+1,w
  4625  00AD  008A               	movwf	10
  4626  00AE  083A               	movf	_EUSART_ErrorHandler,w
  4627  00AF  000A               	callw
  4628  00B0  3180               	pagesel	$
  4629                           
  4630                           ;mcc_generated_files/eusart.c: 242:     } else {
  4631  00B1  28B5               	goto	i1l297
  4632  00B2                     i1l1275:	
  4633                           
  4634                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
  4635  00B2  3182  2223  3180   	fcall	_EUSART_RxDataHandler
  4636  00B5                     i1l297:	
  4637  00B5  0008               	return
  4638  00B6                     __end_of_EUSART_Receive_ISR:	
  4639                           
  4640                           	psect	text23
  4641  02A5                     __ptext23:	
  4642 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  4643 ;; Defined at:
  4644 ;;		line 261 in file "mcc_generated_files/eusart.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;		None
  4647 ;; Auto vars:     Size  Location     Type
  4648 ;;		None
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  1    wreg      void 
  4651 ;; Registers used:
  4652 ;;		None
  4653 ;; Tracked objects:
  4654 ;;		On entry : 0/0
  4655 ;;		On exit  : 0/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4662 ;;Total ram usage:        0 bytes
  4663 ;; Hardware stack levels used:    1
  4664 ;; This function calls:
  4665 ;;		Nothing
  4666 ;; This function is called by:
  4667 ;;		_EUSART_Initialize
  4668 ;;		_EUSART_Receive_ISR
  4669 ;; This function uses a non-reentrant model
  4670 ;;
  4671                           
  4672                           
  4673                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  4674  02A5                     _EUSART_DefaultOverrunErrorHandler:	
  4675  02A5                     i1l1211:	
  4676                           ;incstack = 0
  4677                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  4678                           
  4679                           
  4680                           ;mcc_generated_files/eusart.c: 264:     RC1STAbits.CREN = 0;
  4681  02A5  0023               	movlb	3	; select bank3
  4682  02A6  121D               	bcf	29,4	;volatile
  4683                           
  4684                           ;mcc_generated_files/eusart.c: 265:     RC1STAbits.CREN = 1;
  4685  02A7  161D               	bsf	29,4	;volatile
  4686  02A8                     i1l307:	
  4687  02A8  0008               	return
  4688  02A9                     __end_of_EUSART_DefaultOverrunErrorHandler:	
  4689                           
  4690                           	psect	text24
  4691  02AD                     __ptext24:	
  4692 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  4693 ;; Defined at:
  4694 ;;		line 259 in file "mcc_generated_files/eusart.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;		None
  4697 ;; Auto vars:     Size  Location     Type
  4698 ;;		None
  4699 ;; Return value:  Size  Location     Type
  4700 ;;                  1    wreg      void 
  4701 ;; Registers used:
  4702 ;;		None
  4703 ;; Tracked objects:
  4704 ;;		On entry : 0/0
  4705 ;;		On exit  : 0/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4712 ;;Total ram usage:        0 bytes
  4713 ;; Hardware stack levels used:    1
  4714 ;; This function calls:
  4715 ;;		Nothing
  4716 ;; This function is called by:
  4717 ;;		_EUSART_Initialize
  4718 ;;		_EUSART_Receive_ISR
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721                           
  4722                           
  4723                           ;psect for function _EUSART_DefaultFramingErrorHandler
  4724  02AD                     _EUSART_DefaultFramingErrorHandler:	
  4725  02AD                     i1l304:	
  4726                           ;incstack = 0
  4727                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  4728                           
  4729  02AD  0008               	return
  4730  02AE                     __end_of_EUSART_DefaultFramingErrorHandler:	
  4731                           
  4732                           	psect	text25
  4733  02A9                     __ptext25:	
  4734 ;; *************** function _EUSART_DefaultErrorHandler *****************
  4735 ;; Defined at:
  4736 ;;		line 269 in file "mcc_generated_files/eusart.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;		None
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;		None
  4741 ;; Return value:  Size  Location     Type
  4742 ;;                  1    wreg      void 
  4743 ;; Registers used:
  4744 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4745 ;; Tracked objects:
  4746 ;;		On entry : 0/0
  4747 ;;		On exit  : 0/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4754 ;;Total ram usage:        0 bytes
  4755 ;; Hardware stack levels used:    1
  4756 ;; Hardware stack levels required when called:    1
  4757 ;; This function calls:
  4758 ;;		_EUSART_RxDataHandler
  4759 ;; This function is called by:
  4760 ;;		_EUSART_Initialize
  4761 ;;		_EUSART_Receive_ISR
  4762 ;; This function uses a non-reentrant model
  4763 ;;
  4764                           
  4765                           
  4766                           ;psect for function _EUSART_DefaultErrorHandler
  4767  02A9                     _EUSART_DefaultErrorHandler:	
  4768  02A9                     i1l1213:	
  4769                           ;incstack = 0
  4770                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4771                           
  4772                           
  4773                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
  4774  02A9  3182  2223  3182   	fcall	_EUSART_RxDataHandler
  4775  02AC                     i1l310:	
  4776  02AC  0008               	return
  4777  02AD                     __end_of_EUSART_DefaultErrorHandler:	
  4778                           
  4779                           	psect	text26
  4780  0223                     __ptext26:	
  4781 ;; *************** function _EUSART_RxDataHandler *****************
  4782 ;; Defined at:
  4783 ;;		line 249 in file "mcc_generated_files/eusart.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;		None
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;		None
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  1    wreg      void 
  4790 ;; Registers used:
  4791 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4799 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4800 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4801 ;;Total ram usage:        1 bytes
  4802 ;; Hardware stack levels used:    1
  4803 ;; This function calls:
  4804 ;;		Nothing
  4805 ;; This function is called by:
  4806 ;;		_EUSART_Receive_ISR
  4807 ;;		_EUSART_DefaultErrorHandler
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811                           
  4812                           ;psect for function _EUSART_RxDataHandler
  4813  0223                     _EUSART_RxDataHandler:	
  4814  0223                     i1l1121:	
  4815                           ;incstack = 0
  4816                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  4817                           
  4818                           
  4819                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RC1REG;
  4820  0223  0023               	movlb	3	; select bank3
  4821  0224  0819               	movf	25,w	;volatile
  4822  0225  00F0               	movwf	??_EUSART_RxDataHandler
  4823  0226  087A               	movf	_eusartRxHead,w
  4824  0227  3E28               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  4825  0228  0086               	movwf	6
  4826  0229  0187               	clrf	7
  4827  022A  0870               	movf	??_EUSART_RxDataHandler,w
  4828  022B  0081               	movwf	1
  4829  022C                     i1l1123:	
  4830  022C  3001               	movlw	1
  4831  022D  00F0               	movwf	??_EUSART_RxDataHandler
  4832  022E  0870               	movf	??_EUSART_RxDataHandler,w
  4833  022F  07FA               	addwf	_eusartRxHead,f	;volatile
  4834  0230                     i1l1125:	
  4835                           
  4836                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  4837  0230  3008               	movlw	8
  4838  0231  027A               	subwf	_eusartRxHead,w	;volatile
  4839  0232  1C03               	skipc
  4840  0233  2A35               	goto	u26_21
  4841  0234  2A36               	goto	u26_20
  4842  0235                     u26_21:	
  4843  0235  2A37               	goto	i1l1129
  4844  0236                     u26_20:	
  4845  0236                     i1l1127:	
  4846                           
  4847                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
  4848  0236  01FA               	clrf	_eusartRxHead	;volatile
  4849  0237                     i1l1129:	
  4850                           
  4851                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
  4852  0237  3001               	movlw	1
  4853  0238  00F0               	movwf	??_EUSART_RxDataHandler
  4854  0239  0870               	movf	??_EUSART_RxDataHandler,w
  4855  023A  0020               	movlb	0	; select bank0
  4856  023B  07B9               	addwf	_eusartRxCount,f	;volatile
  4857  023C                     i1l301:	
  4858  023C  0008               	return
  4859  023D                     __end_of_EUSART_RxDataHandler:	
  4860  007E                     btemp	set	126	;btemp
  4861  007E                     int$flags	set	126
  4862  007E                     wtemp0	set	126


Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         30
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80      1      38
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    send@data	PTR unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _main->_send
    _send->_EUSART_Write
    _receive->_EUSART_Read
    _receive->_led2Blink
    _receive->_led3Blink
    _receive->_led4Blink
    _SYSTEM_Initialize->_EUSART_Initialize
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     847
                                              0 BANK0      1     1      0
                  _SYSTEM_Initialize
                            _receive
                               _send
 ---------------------------------------------------------------------------------
 (1) _send                                                 6     3      3     286
                                              3 COMMON     6     3      3
                       _EUSART_Write
                 _EUSART_is_tx_ready
                          _led1Blink
 ---------------------------------------------------------------------------------
 (2) _led1Blink                                            1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_tx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         2     2      0      44
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _receive                                              3     3      0      71
                                              3 COMMON     3     3      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
                          _led2Blink
                          _led3Blink
                          _led4Blink
 ---------------------------------------------------------------------------------
 (2) _led4Blink                                            2     2      0       0
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _led3Blink                                            2     2      0       0
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _led2Blink                                            2     2      0       0
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          2     2      0      24
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     490
                                              3 COMMON     1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _receive
     _EUSART_Read
     _EUSART_is_rx_ready
     _led2Blink
     _led3Blink
     _led4Blink
   _send
     _EUSART_Write
     _EUSART_is_tx_ready
     _led1Blink

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      1      26       5       47.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      33      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      33      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Mar 29 00:13:33 2020

                ?_EUSART_SetRxInterruptHandler 0071                                    __CFG_CP$OFF 0000  
                                           l60 0249                                             l61 0251  
                                           l45 0189                                             l54 0162  
                                           l71 01E9                                             l64 0206  
                                           l48 0152                                             l81 01DC  
                                           l57 023D                                             l74 01F9  
                                           l82 01E8                                             l67 0216  
                                           l75 0205                                             l68 0222  
                                           l78 01CC                                             l97 0267  
                                  __CFG_LVP$ON 0000                                            l100 0280  
                                          l151 00E6                                            l313 029E  
                                          l322 028C                                            l250 007C  
                                          l316 0298                                            l325 0292  
                                          l253 0270                                            l319 02A4  
                                          l256 0279                                            l274 00EE  
                                          l275 00F7                                            l269 013A  
                                          l278 0110                                            l921 01F7  
                                          l931 0208                                            l923 01CE  
                                          l941 00BF                                            l933 0214  
                                          l925 01DA                                            l951 00D2  
                                          l943 00C1                                            l935 00B6  
                                          l919 01EB                                            l961 00DE  
                                          l953 00D5                                            l945 00C4  
                                          l937 00BA                                            l971 027E  
                                          l963 00E0                                            l955 00D7  
                                          l947 00C6                                            l939 00BD  
                                          l965 00E3                                            l957 00D9  
                                          l949 00CC                                            l893 023F  
                                          l967 027A                                            l959 00DC  
                                          l895 0247                                            l969 027D  
                                          u300 00F3                                            u301 00F2  
                                          u310 010A                                            u311 0109  
                                          u320 0117                                            u400 015F  
                                          u321 0116                                            u401 015E  
                                          u330 0131                                            u331 0130  
                                          u340 0278                                            u341 0276  
                                          u350 0279                                            u270 026F  
                                          u271 026D                                            u280 0270  
                                          u360 016D                                            u361 016C  
                                          u290 00EE                                            u370 0189  
                                          u291 00ED                                            u371 0188  
                                          u380 0149                                            u381 0148  
                                          u517 0242                                            u390 015A  
                                          u391 0159                                            u527 024C  
                                          u537 01D3                                            u547 01E1  
                                          u557 01F0                                            u567 01FE  
                                          u577 020D                                            u587 021B  
                       ??_EUSART_RxDataHandler 0070                 ?_EUSART_SetFramingErrorHandler 0071  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 __CFG_IESO$ON 0000                                   ?_EUSART_Read 0070  
                                 __CFG_ZCD$OFF 0000                                           l1111 028D  
                                         l1113 0287                                           l1201 0073  
                                         l1115 0299                                           l1203 0077  
                                         l1131 0268                                           l1117 0293  
                                         l1205 0078                                           l1141 00F8  
                                         l1221 016D                                           l1119 029F  
                                         l1207 0079                                           l1215 025E  
                                         l1231 013D                                           l1143 0100  
                                         l1151 010E                                           l1135 00E8  
                                         l1223 017C                                           l1311 01AC  
                                         l1209 007A                                           l1161 012B  
                                         l1153 0111                                           l1241 015A  
                                         l1233 0143                                           l1145 0104  
                                         l1137 00E8                                           l1225 017F  
                                         l1217 0163                                           l1321 01C0  
                                         l1313 01AF                                           l1171 0139  
                                         l1163 0131                                           l1155 0111  
                                         l1243 015F                                           l1235 0149  
                                         l1147 010A                                           l1139 00F3  
                                         l1219 0165                                           l1227 0183  
                                         l1323 01C3                                           l1315 01B0  
                                         l1181 0040                                           l1165 0132  
                                         l1157 0117                                           l1237 014D  
                                         l1229 013B                                           l1149 010B  
                                         l1325 01C6                                           l1317 01B1  
                                         l1191 0057                                           l1183 0047  
                                         l1167 0134                                           l1159 0127  
                                         l1175 0271                                           l1239 0150  
                                         l1319 01BD                                           l1193 0059  
                                         l1185 0050                                           l1169 0137  
                                         l1195 005A                                           l1187 0053  
                                         l1179 003E                                           l1197 0061  
                                         l1189 0055                                           l1199 0068  
                                         STR_1 0252                                           _LATA 010C  
                                         _LATB 010D                                           _LATC 010E  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                                           _main 01AC  
                                         _send 0163                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                __CFG_BOREN$ON 0000                                           start 002C  
                                __CFG_MCLRE$ON 0000                                  __CFG_PLLEN$ON 0000  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0007  
                __end_of_OSCILLATOR_Initialize 0281                                          ?_main 0070  
                                        ?_send 0073                                  __CFG_WDTE$OFF 0000  
                                        i1l301 023C                                          i1l310 02AC  
                                        i1l304 02AD                                          i1l170 001A  
                                        i1l307 02A8                                          i1l171 002A  
                                        i1l175 002A                                          i1l290 01AB  
                                        i1l287 01A9                                          i1l297 00B5  
                                        u41_20 0191                                          u41_21 0190  
                                        u26_20 0236                                          u42_20 01A2  
                                        u50_20 0024                                          u26_21 0235  
                                        u42_21 01A1                                          u50_21 0023  
                                        u43_20 0087                                          u43_21 0086  
                                        u44_20 0097                                          u44_21 0096  
                                        u45_20 00AB                                          u45_21 00AA  
                                        u46_20 000A                                          u46_21 0009  
                                        u47_20 000F                                          u47_21 000E  
                                        u48_20 0014                                          u48_21 0013  
                                        u49_20 001F                                          u49_21 001E  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _RXPPS 0E24  
                              __end_of_receive 0163                                          pclath 000A  
                                        status 0003                                          wtemp0 007E  
                                receive@rxData 0074                                __initialization 002E  
                                 __end_of_main 01CC                                   __end_of_send 018A  
                               ??_EUSART_Write 0071                                 __CFG_LPBOR$OFF 0000  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 0073  
                                       ??_main 0045                                         ??_send 0076  
    __end_of_EUSART_DefaultFramingErrorHandler 02AE     __size_of_EUSART_DefaultFramingErrorHandler 0001  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 02AD                     _EUSART_OverrunErrorHandler 003C  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _ANSELC 018E                     __end_of_EUSART_is_rx_ready 027A  
                                       _BORCON 0116                                         _RC1REG 0199  
                                       _RC1STA 019D                                         i1l1121 0223  
                                       i1l1123 022C                                         i1l1211 02A5  
                                       i1l1125 0230                                         i1l1213 02A9  
                                       i1l1301 001F                                         i1l1127 0236  
                                       i1l1303 0024                                         i1l1129 0237  
                                       i1l1251 019C                                         _RB7PPS 0E9F  
                                       i1l1261 0087                                         i1l1253 01A2  
                                       i1l1245 018A                                         i1l1271 00A2  
                                       i1l1263 008C                                         i1l1255 01A3  
                                       i1l1247 0191                                         i1l1273 00AB  
                                       i1l1265 0092                                         i1l1257 007D  
                                       i1l1249 0198                                         _ODCONA 028C  
                                       _ODCONB 028D                                         i1l1275 00B2  
                                       i1l1267 0097                                         i1l1259 0082  
                                       _ODCONC 028E                                         i1l1269 009C  
                                       i1l1293 0006                                         i1l1295 000A  
                                       i1l1297 000F                                         i1l1299 0014  
                                       _INLVLA 038C                                         _INLVLB 038D  
                                       _INLVLC 038E                     __end_of_EUSART_is_tx_ready 0271  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _TX1REG 019A  
                                       _TX1STA 019E                                 __CFG_PWRTE$OFF 0000  
                               __CFG_STVREN$ON 0000                            _EUSART_Transmit_ISR 018A  
                                    ??_receive 0073                           ?_EUSART_Transmit_ISR 0070  
                         __size_of_EUSART_Read 002A                              _SYSTEM_Initialize 025E  
                      __end_of__initialization 003A                             ?_SYSTEM_Initialize 0070  
         __end_of_EUSART_SetTxInterruptHandler 028D          __size_of_EUSART_SetTxInterruptHandler 0006  
                 _EUSART_SetTxInterruptHandler 0287                                 __pcstackCOMMON 0070  
                           __size_of_led1Blink 0015                             __size_of_led2Blink 001D  
                           __size_of_led3Blink 001D                            ??_SYSTEM_Initialize 0074  
                           __size_of_led4Blink 001D                                 _OPTION_REGbits 0095  
                         _eusartRxStatusBuffer 0020                ??_EUSART_SetOverrunErrorHandler 0073  
                    __end_of_SYSTEM_Initialize 0268                          ??_EUSART_Transmit_ISR 0070  
                                   __pbssBANK0 0020                           __end_of_EUSART_Write 0111  
                  __size_of_EUSART_Receive_ISR 0039                                     __pmaintext 01AC  
                ?_EUSART_SetTxInterruptHandler 0071               _EUSART_TxDefaultInterruptHandler 0042  
                              __CFG_PPS1WAY$ON 0000                                     __pintentry 0004  
                 ??_EUSART_DefaultErrorHandler 0071                                  _eusartRxCount 0039  
                              __CFG_WDTCCS$SWC 0000                  __size_of_EUSART_RxDataHandler 001A  
                                      _OSCTUNE 0098                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
                            __end_of_led1Blink 0252                       ??_EUSART_SetErrorHandler 0073  
                            __end_of_led2Blink 0223                              __end_of_led3Blink 0206  
                            __end_of_led4Blink 01E9            __size_of_EUSART_DefaultErrorHandler 0004  
                                      __ptext1 0163                                        __ptext2 023D  
                                      __ptext3 0268                                        __ptext4 00E7  
                                      __ptext5 013B                                        __ptext6 01CC  
                                      __ptext7 01E9                                        __ptext8 0206  
                                      __ptext9 0271                          _OSCILLATOR_Initialize 027A  
                                      _receive 013B                       ??_PIN_MANAGER_Initialize 0071  
                   __size_of_SYSTEM_Initialize 000A                                        clrloop0 0282  
                         end_of_initialization 003A          __end_of_EUSART_SetOverrunErrorHandler 0299  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 0293  
                            _EUSART_Initialize 003E                             ?_EUSART_Initialize 0070  
                           _EUSART_is_rx_ready 0271                             _EUSART_is_tx_ready 0268  
                          ??_EUSART_Initialize 0073                 ??_EUSART_SetTxInterruptHandler 0073  
                          ?_EUSART_is_rx_ready 0070                            ?_EUSART_is_tx_ready 0070  
                             __CFG_FOSC$INTOSC 0000                          __size_of_EUSART_Write 002A  
              __size_of_EUSART_SetErrorHandler 0006                      __end_of_EUSART_Initialize 007D  
                         ??_EUSART_is_rx_ready 0071                           ??_EUSART_is_tx_ready 0071  
           __end_of_EUSART_DefaultErrorHandler 02AD                     _EUSART_DefaultErrorHandler 02A9  
                                 _EUSART_Write 00E7                         ?_OSCILLATOR_Initialize 0070  
                                 receive@blink 0075                            start_initialization 002E  
              __size_of_PIN_MANAGER_Initialize 0031                                  ??_EUSART_Read 0071  
 EUSART_SetRxInterruptHandler@interruptHandler 0071   EUSART_SetTxInterruptHandler@interruptHandler 0071  
               ?_EUSART_SetOverrunErrorHandler 0071                     _EUSART_FramingErrorHandler 003E  
                       _EUSART_SetErrorHandler 029F                    __end_of_EUSART_Transmit_ISR 01AC  
                                  __pbssCOMMON 0079                                      ___latbits 0002  
                                __pcstackBANK0 0045                     __end_of_EUSART_Receive_ISR 00B6  
                   __size_of_EUSART_Initialize 003F                                      _led1Blink 023D  
                                    _led2Blink 0206                                      _led3Blink 01E9  
             _EUSART_RxDefaultInterruptHandler 0040                                      _led4Blink 01CC  
                          __end_of_EUSART_Read 013B                                      __pnvBANK0 003A  
                 __end_of_EUSART_RxDataHandler 023D                         _PIN_MANAGER_Initialize 00B6  
                         EUSART_Read@readValue 0072                                   _eusartRxHead 007A  
                                 _eusartTxHead 007C                                   _eusartRxTail 0079  
                                 _eusartTxTail 007B                   ??_INTERRUPT_InterruptManager 0071  
                      _eusartTxBufferRemaining 0044                                       _BAUD1CON 019F  
                                     ?_receive 0070                                 _eusartRxBuffer 0028  
                               _eusartTxBuffer 0030                                     ?_led1Blink 0070  
                                   ?_led2Blink 0070                                     ?_led3Blink 0070  
                                   ?_led4Blink 0070                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0071                                       _LATCbits 010E  
                                    clear_ram0 0281                                       _PIE1bits 0090  
                            _eusartRxLastError 0038            __size_of_INTERRUPT_InterruptManager 0028  
                                     _PIR1bits 0010                ??_EUSART_SetFramingErrorHandler 0073  
                         __CFG_WDTCPS$WDTCPS1F 0000      __end_of_EUSART_DefaultOverrunErrorHandler 02A9  
   __size_of_EUSART_DefaultOverrunErrorHandler 0004            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 02A5  
                                  _EUSART_Read 0111                        ??_OSCILLATOR_Initialize 0071  
                          _EUSART_ErrorHandler 003A                    ?_EUSART_DefaultErrorHandler 0070  
                                    send@index 0078                               __size_of_receive 0028  
                         _EUSART_RxDataHandler 0223                                       __ptext10 0111  
                                     __ptext11 025E                                       __ptext12 00B6  
                                     __ptext21 018A                                       __ptext13 027A  
                                     __ptext22 007D                                       __ptext14 003E  
                                     __ptext23 02A5                                       __ptext15 0287  
                                     __ptext24 02AD                                       __ptext16 028D  
                                     __ptext25 02A9                                       __ptext17 0293  
                                     __ptext26 0223                                       __ptext18 0299  
                                     __ptext19 029F                                    ??_led1Blink 0071  
                                  ??_led2Blink 0071                                    ??_led3Blink 0071  
                  __size_of_EUSART_is_rx_ready 0009                                    ??_led4Blink 0071  
                                __size_of_main 0020                                  __size_of_send 0027  
                  __size_of_EUSART_is_tx_ready 0009                           __CFG_WDTCWS$WDTCWSSW 0000  
                      ?_EUSART_SetErrorHandler 0071                                     _RC1STAbits 019D  
EUSART_SetOverrunErrorHandler@interruptHandler 0071                                       int$flags 007E  
           __end_of_INTERRUPT_InterruptManager 002C                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 029F         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 0299                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0070                                       intlevel1 0000  
                                     send@data 0073                                       send@size 0075  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 02A5  
                            __CFG_CLKOUTEN$OFF 0000           __end_of_EUSART_SetRxInterruptHandler 0293  
        __size_of_EUSART_SetRxInterruptHandler 0006                   _EUSART_SetRxInterruptHandler 028D  
                           _EUSART_Receive_ISR 007D  EUSART_SetFramingErrorHandler@interruptHandler 0071  
                                __pstringtext1 0252                                  __pstringtext2 0000  
                          ?_EUSART_Receive_ISR 0070                                     _TX1STAbits 019E  
                           EUSART_Write@txData 0072                   __size_of_EUSART_Transmit_ISR 0022  
               __end_of_PIN_MANAGER_Initialize 00E7                           ??_EUSART_Receive_ISR 0071  
