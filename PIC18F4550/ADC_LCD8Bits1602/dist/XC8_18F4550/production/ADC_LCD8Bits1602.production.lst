

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Mar 24 19:59:55 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           	psect	smallconst
    50  000800                     __psmallconst:
    51                           	opt stack 0
    52  000800  00                 	db	0
    53  000801                     lcd_test@F5275:
    54                           	opt stack 0
    55  000801  54                 	db	84
    56  000802  45                 	db	69
    57  000803  53                 	db	83
    58  000804  54                 	db	84
    59  000805  45                 	db	69
    60  000806  54                 	db	84
    61  000807  45                 	db	69
    62  000808  53                 	db	83
    63  000809  54                 	db	84
    64  00080A  45                 	db	69
    65  00080B  54                 	db	84
    66  00080C  45                 	db	69
    67  00080D  53                 	db	83
    68  00080E  54                 	db	84
    69  00080F  45                 	db	69
    70  000810  2E                 	db	46
    71  000811                     __end_oflcd_test@F5275:
    72                           	opt stack 0
    73  000811                     _dpowers:
    74                           	opt stack 0
    75  000811  0001               	dw	1
    76  000813  000A               	dw	10
    77  000815  0064               	dw	100
    78  000817  03E8               	dw	1000
    79  000819  2710               	dw	10000
    80  00081B                     __end_of_dpowers:
    81                           	opt stack 0
    82  0000                     _ADCON0	set	4034
    83  0000                     _ADCON0bits	set	4034
    84  0000                     _ADCON1	set	4033
    85  0000                     _ADCON2	set	4032
    86  0000                     _ADRESH	set	4036
    87  0000                     _ADRESL	set	4035
    88  0000                     _CMCON	set	4020
    89  0000                     _INTCON2bits	set	4081
    90  0000                     _INTCONbits	set	4082
    91  0000                     _PIE1bits	set	3997
    92  0000                     _PIR1bits	set	3998
    93  0000                     _PORTA	set	3968
    94  0000                     _PORTAbits	set	3968
    95  0000                     _PORTB	set	3969
    96  0000                     _PORTC	set	3970
    97  0000                     _PORTD	set	3971
    98  0000                     _PORTE	set	3972
    99  0000                     _RCONbits	set	4048
   100  0000                     _TRISA	set	3986
   101  0000                     _TRISAbits	set	3986
   102  0000                     _TRISB	set	3987
   103  0000                     _TRISC	set	3988
   104  0000                     _TRISD	set	3989
   105  0000                     _TRISE	set	3990
   106  00081B                     __stringdata:
   107                           	opt stack 0
   108  00081B                     STR_2:
   109  00081B  56                 	db	86	;'V'
   110  00081C  61                 	db	97	;'a'
   111  00081D  6C                 	db	108	;'l'
   112  00081E  6F                 	db	111	;'o'
   113  00081F  72                 	db	114	;'r'
   114  000820  3A                 	db	58	;':'
   115  000821  20                 	db	32
   116  000822  25                 	db	37
   117  000823  2E                 	db	46
   118  000824  34                 	db	52	;'4'
   119  000825  75                 	db	117	;'u'
   120  000826  20                 	db	32
   121  000827  25                 	db	37
   122  000828  2E                 	db	46
   123  000829  33                 	db	51	;'3'
   124  00082A  75                 	db	117	;'u'
   125  00082B  25                 	db	37
   126  00082C  25                 	db	37
   127  00082D  00                 	db	0
   128  00082E                     STR_1:
   129  00082E  49                 	db	73	;'I'
   130  00082F  4E                 	db	78	;'N'
   131  000830  54                 	db	84	;'T'
   132  000831  45                 	db	69	;'E'
   133  000832  52                 	db	82	;'R'
   134  000833  52                 	db	82	;'R'
   135  000834  55                 	db	85	;'U'
   136  000835  50                 	db	80	;'P'
   137  000836  54                 	db	84	;'T'
   138  000837  20                 	db	32
   139  000838  49                 	db	73	;'I'
   140  000839  4E                 	db	78	;'N'
   141  00083A  54                 	db	84	;'T'
   142  00083B  30                 	db	48	;'0'
   143  00083C  00                 	db	0
   144  00083D                     __end_of__stringdata:
   145                           	opt stack 0
   146                           
   147                           ; #config settings
   148  00083D  00                 	db	0	; dummy byte at the end
   149  0000                     
   150                           	psect	cinit
   151  0018D8                     __pcinit:
   152                           	opt stack 0
   153  0018D8                     start_initialization:
   154                           	opt stack 0
   155  0018D8                     __initialization:
   156                           	opt stack 0
   157  0018D8                     end_of_initialization:
   158                           	opt stack 0
   159  0018D8                     __end_of__initialization:
   160                           	opt stack 0
   161  0018D8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   162  0018DA  6EF8               	movwf	tblptru,c
   163  0018DC  0100               	movlb	0
   164  0018DE  EF9C  F006         	goto	_main	;jump to C main() function
   165                           tblptru	equ	0xFF8
   166                           
   167                           	psect	cstackBANK0
   168  000060                     __pcstackBANK0:
   169                           	opt stack 0
   170  000060                     ??___ftpack:
   171  000060                     lcd_write_buffer@buffer:
   172                           	opt stack 0
   173  000060                     ___lwdiv@quotient:
   174                           	opt stack 0
   175  000060                     memset@p:
   176                           	opt stack 0
   177  000060                     lcd_test@msgTest:
   178                           	opt stack 0
   179                           
   180                           ; 16 bytes @ 0x0
   181  000060                     	ds	2
   182  000062                     lcd_write_buffer@size:
   183                           	opt stack 0
   184  000062                     ___lwdiv@counter:
   185                           	opt stack 0
   186                           
   187                           ; 1 bytes @ 0x2
   188  000062                     	ds	1
   189  000063                     ??_lcd_write_buffer:
   190  000063                     ?___lwmod:
   191                           	opt stack 0
   192  000063                     ?___lwtoft:
   193                           	opt stack 0
   194  000063                     ___lwmod@dividend:
   195                           	opt stack 0
   196  000063                     ___lwtoft@c:
   197                           	opt stack 0
   198                           
   199                           ; 2 bytes @ 0x3
   200  000063                     	ds	2
   201  000065                     ___lwmod@divisor:
   202                           	opt stack 0
   203                           
   204                           ; 2 bytes @ 0x5
   205  000065                     	ds	1
   206  000066                     ?___ftdiv:
   207                           	opt stack 0
   208  000066                     _lcd_write_buffer$577:
   209                           	opt stack 0
   210  000066                     ___ftdiv@f1:
   211                           	opt stack 0
   212                           
   213                           ; 3 bytes @ 0x6
   214  000066                     	ds	2
   215  000068                     lcd_write_buffer@pos:
   216                           	opt stack 0
   217                           
   218                           ; 2 bytes @ 0x8
   219  000068                     	ds	1
   220  000069                     ___ftdiv@f2:
   221                           	opt stack 0
   222                           
   223                           ; 3 bytes @ 0x9
   224  000069                     	ds	3
   225  00006C                     ??___ftdiv:
   226                           
   227                           ; 0 bytes @ 0xC
   228  00006C                     	ds	3
   229  00006F                     ___ftdiv@cntr:
   230                           	opt stack 0
   231                           
   232                           ; 1 bytes @ 0xF
   233  00006F                     	ds	1
   234  000070                     lcd_test@ln:
   235                           	opt stack 0
   236  000070                     ___ftdiv@f3:
   237                           	opt stack 0
   238                           
   239                           ; 3 bytes @ 0x10
   240  000070                     	ds	2
   241  000072                     lcd_test@pos:
   242                           	opt stack 0
   243                           
   244                           ; 2 bytes @ 0x12
   245  000072                     	ds	1
   246  000073                     ___ftdiv@exp:
   247                           	opt stack 0
   248                           
   249                           ; 1 bytes @ 0x13
   250  000073                     	ds	1
   251  000074                     ___ftdiv@sign:
   252                           	opt stack 0
   253                           
   254                           ; 1 bytes @ 0x14
   255  000074                     	ds	1
   256  000075                     ?___ftmul:
   257                           	opt stack 0
   258  000075                     ___ftmul@f1:
   259                           	opt stack 0
   260                           
   261                           ; 3 bytes @ 0x15
   262  000075                     	ds	3
   263  000078                     ___ftmul@f2:
   264                           	opt stack 0
   265                           
   266                           ; 3 bytes @ 0x18
   267  000078                     	ds	3
   268  00007B                     ??___ftmul:
   269                           
   270                           ; 0 bytes @ 0x1B
   271  00007B                     	ds	3
   272  00007E                     ___ftmul@exp:
   273                           	opt stack 0
   274                           
   275                           ; 1 bytes @ 0x1E
   276  00007E                     	ds	1
   277  00007F                     ___ftmul@f3_as_product:
   278                           	opt stack 0
   279                           
   280                           ; 3 bytes @ 0x1F
   281  00007F                     	ds	3
   282  000082                     ___ftmul@cntr:
   283                           	opt stack 0
   284                           
   285                           ; 1 bytes @ 0x22
   286  000082                     	ds	1
   287  000083                     ___ftmul@sign:
   288                           	opt stack 0
   289                           
   290                           ; 1 bytes @ 0x23
   291  000083                     	ds	1
   292  000084                     ?___fttol:
   293                           	opt stack 0
   294  000084                     ___fttol@f1:
   295                           	opt stack 0
   296                           
   297                           ; 3 bytes @ 0x24
   298  000084                     	ds	4
   299  000088                     ??___fttol:
   300                           
   301                           ; 0 bytes @ 0x28
   302  000088                     	ds	5
   303  00008D                     ___fttol@sign1:
   304                           	opt stack 0
   305                           
   306                           ; 1 bytes @ 0x2D
   307  00008D                     	ds	1
   308  00008E                     ___fttol@lval:
   309                           	opt stack 0
   310                           
   311                           ; 4 bytes @ 0x2E
   312  00008E                     	ds	4
   313  000092                     ___fttol@exp1:
   314                           	opt stack 0
   315                           
   316                           ; 1 bytes @ 0x32
   317  000092                     	ds	1
   318  000093                     ?_sprintf:
   319                           	opt stack 0
   320  000093                     sprintf@sp:
   321                           	opt stack 0
   322                           
   323                           ; 2 bytes @ 0x33
   324  000093                     	ds	2
   325  000095                     sprintf@f:
   326                           	opt stack 0
   327                           
   328                           ; 2 bytes @ 0x35
   329  000095                     	ds	6
   330  00009B                     ??_sprintf:
   331                           
   332                           ; 0 bytes @ 0x3B
   333  00009B                     	ds	2
   334  00009D                     sprintf@flag:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0x3D
   338  00009D                     	ds	1
   339  00009E                     sprintf@ap:
   340                           	opt stack 0
   341                           
   342                           ; 2 bytes @ 0x3E
   343  00009E                     	ds	2
   344  0000A0                     sprintf@_val:
   345                           	opt stack 0
   346                           
   347                           ; 4 bytes @ 0x40
   348  0000A0                     	ds	4
   349  0000A4                     sprintf@prec:
   350                           	opt stack 0
   351                           
   352                           ; 1 bytes @ 0x44
   353  0000A4                     	ds	1
   354  0000A5                     sprintf@c:
   355                           	opt stack 0
   356                           
   357                           ; 1 bytes @ 0x45
   358  0000A5                     	ds	1
   359  0000A6                     ??_main:
   360                           
   361                           ; 0 bytes @ 0x46
   362  0000A6                     	ds	4
   363  0000AA                     main@buffer:
   364                           	opt stack 0
   365                           
   366                           ; 16 bytes @ 0x4A
   367  0000AA                     	ds	16
   368  0000BA                     main@adcValueOld:
   369                           	opt stack 0
   370                           
   371                           ; 2 bytes @ 0x5A
   372  0000BA                     	ds	2
   373  0000BC                     main@adcValue:
   374                           	opt stack 0
   375                           
   376                           ; 2 bytes @ 0x5C
   377  0000BC                     	ds	2
   378                           tblptru	equ	0xFF8
   379                           
   380                           	psect	cstackCOMRAM
   381  000001                     __pcstackCOMRAM:
   382                           	opt stack 0
   383  000001                     ??_low_isr:
   384  000001                     
   385                           ; 1 bytes @ 0x0
   386  000001                     	ds	17
   387  000012                     ??i2_lcd_delay:
   388                           
   389                           ; 0 bytes @ 0x11
   390  000012                     	ds	1
   391  000013                     i2lcd_write@x:
   392                           	opt stack 0
   393  000013                     i2lcd_write_cmd@x:
   394                           	opt stack 0
   395                           
   396                           ; 1 bytes @ 0x12
   397  000013                     	ds	1
   398  000014                     i2lcd_write_buffer@buffer:
   399                           	opt stack 0
   400                           
   401                           ; 2 bytes @ 0x13
   402  000014                     	ds	2
   403  000016                     i2lcd_write_buffer@size:
   404                           	opt stack 0
   405                           
   406                           ; 1 bytes @ 0x15
   407  000016                     	ds	1
   408  000017                     ??i2_lcd_write_buffer:
   409                           
   410                           ; 0 bytes @ 0x16
   411  000017                     	ds	3
   412  00001A                     i2_lcd_write_buffer$577:
   413                           	opt stack 0
   414                           
   415                           ; 2 bytes @ 0x19
   416  00001A                     	ds	2
   417  00001C                     i2lcd_write_buffer@pos:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x1B
   421  00001C                     	ds	2
   422  00001E                     ??_high_isr:
   423                           
   424                           ; 0 bytes @ 0x1D
   425  00001E                     	ds	15
   426  00002D                     ??_SetChanADC:
   427  00002D                     ??_lcd_delay:
   428  00002D                     ??_isdigit:
   429  00002D                     ?_ReadADC:
   430                           	opt stack 0
   431  00002D                     ?_strlen:
   432                           	opt stack 0
   433  00002D                     ?___lwdiv:
   434                           	opt stack 0
   435  00002D                     ?___ftpack:
   436                           	opt stack 0
   437  00002D                     OpenADC@config2:
   438                           	opt stack 0
   439  00002D                     ___lwdiv@dividend:
   440                           	opt stack 0
   441  00002D                     memset@p1:
   442                           	opt stack 0
   443  00002D                     strlen@s:
   444                           	opt stack 0
   445  00002D                     ___ftpack@arg:
   446                           	opt stack 0
   447                           
   448                           ; 3 bytes @ 0x2C
   449  00002D                     	ds	1
   450  00002E                     ??_lcd_init:
   451  00002E                     lcd_write@x:
   452                           	opt stack 0
   453  00002E                     lcd_write_cmd@x:
   454                           	opt stack 0
   455  00002E                     OpenADC@portconfig:
   456                           	opt stack 0
   457  00002E                     SetChanADC@channel:
   458                           	opt stack 0
   459  00002E                     _isdigit$1330:
   460                           	opt stack 0
   461                           
   462                           ; 1 bytes @ 0x2D
   463  00002E                     	ds	1
   464  00002F                     ??_strlen:
   465  00002F                     ??_OpenADC:
   466  00002F                     lcd_pos@coluna:
   467                           	opt stack 0
   468  00002F                     isdigit@c:
   469                           	opt stack 0
   470  00002F                     ___lwdiv@divisor:
   471                           	opt stack 0
   472  00002F                     memset@c:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x2E
   476  00002F                     	ds	1
   477  000030                     ??_lcd_pos:
   478  000030                     ___ftpack@exp:
   479                           	opt stack 0
   480                           
   481                           ; 1 bytes @ 0x2F
   482  000030                     	ds	1
   483  000031                     ??___lwdiv:
   484  000031                     lcd_pos@linha:
   485                           	opt stack 0
   486  000031                     OpenADC@config:
   487                           	opt stack 0
   488  000031                     ___ftpack@sign:
   489                           	opt stack 0
   490  000031                     memset@n:
   491                           	opt stack 0
   492  000031                     strlen@cp:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0x30
   496  000031                     	ds	1
   497  000032                     ??_InitApp:
   498  000032                     ??_lcd_test:
   499  000032                     ??___lwmod:
   500  000032                     ??___lwtoft:
   501                           
   502                           ; 0 bytes @ 0x31
   503  000032                     	ds	1
   504  000033                     ___lwmod@counter:
   505                           	opt stack 0
   506                           
   507                           ; 1 bytes @ 0x32
   508  000033                     	ds	1
   509                           tblptru	equ	0xFF8
   510                           
   511 ;;
   512 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   513 ;;
   514 ;; *************** function _main *****************
   515 ;; Defined at:
   516 ;;		line 11 in file "main.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;		None
   519 ;; Auto vars:     Size  Location     Type
   520 ;;  buffer         16   74[BANK0 ] unsigned char [16]
   521 ;;  adcValue        2   92[BANK0 ] unsigned int 
   522 ;;  adcValueOld     2   90[BANK0 ] unsigned int 
   523 ;;  count           2    0        int 
   524 ;; Return value:  Size  Location     Type
   525 ;;		None               void
   526 ;; Registers used:
   527 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   533 ;;      Params:         0       0       0       0       0       0       0       0       0
   534 ;;      Locals:         0      20       0       0       0       0       0       0       0
   535 ;;      Temps:          0       4       0       0       0       0       0       0       0
   536 ;;      Totals:         0      24       0       0       0       0       0       0       0
   537 ;;Total ram usage:       24 bytes
   538 ;; Hardware stack levels required when called:    9
   539 ;; This function calls:
   540 ;;		_BusyADC
   541 ;;		_ConfigureOscillator
   542 ;;		_ConvertADC
   543 ;;		_InitApp
   544 ;;		_ReadADC
   545 ;;		___ftdiv
   546 ;;		___ftmul
   547 ;;		___fttol
   548 ;;		___lwtoft
   549 ;;		_lcd_clear
   550 ;;		_lcd_cursor_off
   551 ;;		_lcd_enable
   552 ;;		_lcd_init
   553 ;;		_lcd_pos
   554 ;;		_lcd_test
   555 ;;		_lcd_write_buffer
   556 ;;		_memset
   557 ;;		_sprintf
   558 ;;		_strlen
   559 ;; This function is called by:
   560 ;;		Startup code after reset
   561 ;; This function uses a non-reentrant model
   562 ;;
   563                           
   564                           	psect	text0
   565  000D38                     __ptext0:
   566                           	opt stack 0
   567  000D38                     _main:
   568                           	opt stack 22
   569                           
   570                           ;main.c: 12: int count;
   571                           ;main.c: 13: unsigned int adcValue = 0;
   572                           
   573                           ;incstack = 0
   574  000D38  0E00               	movlw	0
   575  000D3A  0100               	movlb	0	; () banked
   576  000D3C  0100               	movlb	0	; () banked
   577  000D3E  6FBD               	movwf	(main@adcValue+1)& (0+255),b
   578  000D40  0E00               	movlw	0
   579  000D42  0100               	movlb	0	; () banked
   580  000D44  6FBC               	movwf	main@adcValue& (0+255),b
   581                           
   582                           ;main.c: 14: unsigned int adcValueOld = 0;
   583  000D46  0E00               	movlw	0
   584  000D48  0100               	movlb	0	; () banked
   585  000D4A  0100               	movlb	0	; () banked
   586  000D4C  6FBB               	movwf	(main@adcValueOld+1)& (0+255),b
   587  000D4E  0E00               	movlw	0
   588  000D50  0100               	movlb	0	; () banked
   589  000D52  6FBA               	movwf	main@adcValueOld& (0+255),b
   590                           
   591                           ; BSR set to: 0
   592                           ;main.c: 15: char buffer[16];
   593                           ;main.c: 17: ConfigureOscillator();
   594  000D54  EC84  F00C         	call	_ConfigureOscillator	;wreg free
   595                           
   596                           ;main.c: 18: InitApp();
   597  000D58  EC0F  F00B         	call	_InitApp	;wreg free
   598                           
   599                           ;main.c: 20: lcd_init();
   600  000D5C  EC75  F00B         	call	_lcd_init	;wreg free
   601                           
   602                           ;main.c: 21: lcd_enable();
   603  000D60  EC5F  F00C         	call	_lcd_enable	;wreg free
   604                           
   605                           ;main.c: 22: lcd_cursor_off();
   606  000D64  EC76  F00C         	call	_lcd_cursor_off	;wreg free
   607                           
   608                           ;main.c: 23: lcd_test();
   609  000D68  ECBB  F009         	call	_lcd_test	;wreg free
   610                           
   611                           ;main.c: 24: lcd_pos(2, 1);
   612  000D6C  0100               	movlb	0	; () banked
   613  000D6E  6FA6               	movwf	??_main& (0+255),b
   614  000D70  0E01               	movlw	1
   615  000D72  6E2F               	movwf	lcd_pos@coluna,c
   616  000D74  0100               	movlb	0	; () banked
   617  000D76  51A6               	movf	??_main& (0+255),w,b
   618  000D78  0E02               	movlw	2
   619  000D7A  ECB3  F00B         	call	_lcd_pos
   620  000D7E                     l1662:
   621                           
   622                           ;main.c: 26: ConvertADC();
   623  000D7E  EC82  F00C         	call	_ConvertADC	;wreg free
   624  000D82                     l1664:
   625  000D82  EC66  F00C         	call	_BusyADC	;wreg free
   626  000D86  0900               	iorlw	0
   627  000D88  A4D8               	btfss	status,2,c
   628  000D8A  D7FB               	goto	l1664
   629                           
   630                           ;main.c: 28: adcValue = ReadADC();
   631  000D8C  EC71  F00C         	call	_ReadADC	;wreg free
   632  000D90  C02D  F0BC         	movff	?_ReadADC,main@adcValue
   633  000D94  C02E  F0BD         	movff	?_ReadADC+1,main@adcValue+1
   634                           
   635                           ;main.c: 29: if (adcValue != adcValueOld) {
   636  000D98  0100               	movlb	0	; () banked
   637  000D9A  0100               	movlb	0	; () banked
   638  000D9C  51BB               	movf	(main@adcValueOld+1)& (0+255),w,b
   639  000D9E  0100               	movlb	0	; () banked
   640  000DA0  0100               	movlb	0	; () banked
   641  000DA2  19BD               	xorwf	(main@adcValue+1)& (0+255),w,b
   642  000DA4  E106               	bnz	u825
   643  000DA6  0100               	movlb	0	; () banked
   644  000DA8  0100               	movlb	0	; () banked
   645  000DAA  51BA               	movf	main@adcValueOld& (0+255),w,b
   646  000DAC  0100               	movlb	0	; () banked
   647  000DAE  0100               	movlb	0	; () banked
   648  000DB0  19BC               	xorwf	main@adcValue& (0+255),w,b
   649  000DB2                     u825:
   650  000DB2  B4D8               	btfsc	status,2,c
   651  000DB4  D091               	goto	l1682
   652                           
   653                           ; BSR set to: 0
   654                           ;main.c: 30: lcd_clear();
   655  000DB6  EC7A  F00C         	call	_lcd_clear	;wreg free
   656                           
   657                           ;main.c: 31: lcd_pos(1, 1);
   658  000DBA  0100               	movlb	0	; () banked
   659  000DBC  6FA6               	movwf	??_main& (0+255),b
   660  000DBE  0E01               	movlw	1
   661  000DC0  6E2F               	movwf	lcd_pos@coluna,c
   662  000DC2  0100               	movlb	0	; () banked
   663  000DC4  51A6               	movf	??_main& (0+255),w,b
   664  000DC6  0E01               	movlw	1
   665  000DC8  ECB3  F00B         	call	_lcd_pos
   666                           
   667                           ;main.c: 32: memset(&buffer[0], 0, sizeof(buffer));
   668  000DCC  0100               	movlb	0	; () banked
   669  000DCE  0E00               	movlw	high main@buffer
   670  000DD0  6E2E               	movwf	memset@p1+1,c
   671  000DD2  0100               	movlb	0	; () banked
   672  000DD4  0EAA               	movlw	low main@buffer
   673  000DD6  6E2D               	movwf	memset@p1,c
   674  000DD8  0E00               	movlw	0
   675  000DDA  6E30               	movwf	memset@c+1,c
   676  000DDC  0E00               	movlw	0
   677  000DDE  6E2F               	movwf	memset@c,c
   678  000DE0  0E00               	movlw	0
   679  000DE2  6E32               	movwf	memset@n+1,c
   680  000DE4  0E10               	movlw	16
   681  000DE6  6E31               	movwf	memset@n,c
   682  000DE8  ECD0  F00B         	call	_memset	;wreg free
   683                           
   684                           ;main.c: 33: sprintf(&buffer[0], "Valor: %.4u %.3u%%", adcValue, (int)(((float)adcValue 
      +                          / 1024) * 100));
   685  000DEC  0100               	movlb	0	; () banked
   686  000DEE  0E00               	movlw	high main@buffer
   687  000DF0  0100               	movlb	0	; () banked
   688  000DF2  0100               	movlb	0	; () banked
   689  000DF4  6F94               	movwf	(sprintf@sp+1)& (0+255),b
   690  000DF6  0100               	movlb	0	; () banked
   691  000DF8  0EAA               	movlw	low main@buffer
   692  000DFA  0100               	movlb	0	; () banked
   693  000DFC  0100               	movlb	0	; () banked
   694  000DFE  6F93               	movwf	sprintf@sp& (0+255),b
   695  000E00  0E08               	movlw	high STR_2
   696  000E02  0100               	movlb	0	; () banked
   697  000E04  0100               	movlb	0	; () banked
   698  000E06  6F96               	movwf	(sprintf@f+1)& (0+255),b
   699  000E08  0E1B               	movlw	low STR_2
   700  000E0A  0100               	movlb	0	; () banked
   701  000E0C  0100               	movlb	0	; () banked
   702  000E0E  6F95               	movwf	sprintf@f& (0+255),b
   703  000E10  C0BC  F097         	movff	main@adcValue,?_sprintf+4
   704  000E14  C0BD  F098         	movff	main@adcValue+1,?_sprintf+5
   705  000E18  0E00               	movlw	0
   706  000E1A  0100               	movlb	0	; () banked
   707  000E1C  0100               	movlb	0	; () banked
   708  000E1E  6F78               	movwf	___ftmul@f2& (0+255),b
   709  000E20  0EC8               	movlw	200
   710  000E22  0100               	movlb	0	; () banked
   711  000E24  0100               	movlb	0	; () banked
   712  000E26  6F79               	movwf	(___ftmul@f2+1)& (0+255),b
   713  000E28  0E42               	movlw	66
   714  000E2A  0100               	movlb	0	; () banked
   715  000E2C  0100               	movlb	0	; () banked
   716  000E2E  6F7A               	movwf	(___ftmul@f2+2)& (0+255),b
   717  000E30  0E00               	movlw	0
   718  000E32  0100               	movlb	0	; () banked
   719  000E34  0100               	movlb	0	; () banked
   720  000E36  6F69               	movwf	___ftdiv@f2& (0+255),b
   721  000E38  0E80               	movlw	128
   722  000E3A  0100               	movlb	0	; () banked
   723  000E3C  0100               	movlb	0	; () banked
   724  000E3E  6F6A               	movwf	(___ftdiv@f2+1)& (0+255),b
   725  000E40  0E44               	movlw	68
   726  000E42  0100               	movlb	0	; () banked
   727  000E44  0100               	movlb	0	; () banked
   728  000E46  6F6B               	movwf	(___ftdiv@f2+2)& (0+255),b
   729  000E48  C0BC  F063         	movff	main@adcValue,___lwtoft@c
   730  000E4C  C0BD  F064         	movff	main@adcValue+1,___lwtoft@c+1
   731  000E50  ECEA  F00B         	call	___lwtoft	;wreg free
   732  000E54  C063  F066         	movff	?___lwtoft,___ftdiv@f1
   733  000E58  C064  F067         	movff	?___lwtoft+1,___ftdiv@f1+1
   734  000E5C  C065  F068         	movff	?___lwtoft+2,___ftdiv@f1+2
   735  000E60  EC75  F007         	call	___ftdiv	;wreg free
   736  000E64  C066  F075         	movff	?___ftdiv,___ftmul@f1
   737  000E68  C067  F076         	movff	?___ftdiv+1,___ftmul@f1+1
   738  000E6C  C068  F077         	movff	?___ftdiv+2,___ftmul@f1+2
   739  000E70  ECBC  F005         	call	___ftmul	;wreg free
   740  000E74  C075  F084         	movff	?___ftmul,___fttol@f1
   741  000E78  C076  F085         	movff	?___ftmul+1,___fttol@f1+1
   742  000E7C  C077  F086         	movff	?___ftmul+2,___fttol@f1+2
   743  000E80  EC42  F008         	call	___fttol	;wreg free
   744  000E84  C084  F0A6         	movff	?___fttol,??_main
   745  000E88  C085  F0A7         	movff	?___fttol+1,??_main+1
   746  000E8C  C086  F0A8         	movff	?___fttol+2,??_main+2
   747  000E90  C087  F0A9         	movff	?___fttol+3,??_main+3
   748  000E94  C0A6  F099         	movff	??_main,?_sprintf+6
   749  000E98  C0A7  F09A         	movff	??_main+1,?_sprintf+7
   750  000E9C  EC1F  F004         	call	_sprintf	;wreg free
   751                           
   752                           ;main.c: 34: lcd_write_buffer(buffer, strlen(buffer));
   753  000EA0  0100               	movlb	0	; () banked
   754  000EA2  0E00               	movlw	high main@buffer
   755  000EA4  0100               	movlb	0	; () banked
   756  000EA6  0100               	movlb	0	; () banked
   757  000EA8  6F61               	movwf	(lcd_write_buffer@buffer+1)& (0+255),b
   758  000EAA  0100               	movlb	0	; () banked
   759  000EAC  0EAA               	movlw	low main@buffer
   760  000EAE  0100               	movlb	0	; () banked
   761  000EB0  0100               	movlb	0	; () banked
   762  000EB2  6F60               	movwf	lcd_write_buffer@buffer& (0+255),b
   763  000EB4  0100               	movlb	0	; () banked
   764  000EB6  0E00               	movlw	high main@buffer
   765  000EB8  6E2E               	movwf	strlen@s+1,c
   766  000EBA  0100               	movlb	0	; () banked
   767  000EBC  0EAA               	movlw	low main@buffer
   768  000EBE  6E2D               	movwf	strlen@s,c
   769  000EC0  EC96  F00B         	call	_strlen	;wreg free
   770  000EC4  502D               	movf	?_strlen,w,c
   771  000EC6  0100               	movlb	0	; () banked
   772  000EC8  0100               	movlb	0	; () banked
   773  000ECA  6F62               	movwf	lcd_write_buffer@size& (0+255),b
   774  000ECC  ECFB  F008         	call	_lcd_write_buffer	;wreg free
   775                           
   776                           ;main.c: 35: adcValueOld = adcValue;
   777  000ED0  C0BC  F0BA         	movff	main@adcValue,main@adcValueOld
   778  000ED4  C0BD  F0BB         	movff	main@adcValue+1,main@adcValueOld+1
   779  000ED8                     l1682:
   780                           
   781                           ;main.c: 36: }
   782                           ;main.c: 37: _delay((unsigned long)((20)*(20000000L/4000.0)));
   783  000ED8  0E82               	movlw	130
   784  000EDA  0100               	movlb	0	; () banked
   785  000EDC  6FA6               	movwf	??_main& (0+255),b
   786  000EDE  0EDE               	movlw	222
   787  000EE0                     u1487:
   788  000EE0  2EE8               	decfsz	wreg,f,c
   789  000EE2  D7FE               	goto	u1487
   790  000EE4  2FA6               	decfsz	??_main& (0+255),f,b
   791  000EE6  D7FC               	goto	u1487
   792  000EE8  D74A               	goto	l1662
   793  000EEA                     __end_of_main:
   794                           	opt stack 0
   795                           tblptru	equ	0xFF8
   796                           wreg	equ	0xFE8
   797                           status	equ	0xFD8
   798                           
   799 ;; *************** function _strlen *****************
   800 ;; Defined at:
   801 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\strlen.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;  s               2   44[COMRAM] PTR const unsigned char 
   804 ;;		 -> main@buffer(16), 
   805 ;; Auto vars:     Size  Location     Type
   806 ;;  cp              2   48[COMRAM] PTR const unsigned char 
   807 ;;		 -> main@buffer(16), 
   808 ;; Return value:  Size  Location     Type
   809 ;;                  2   44[COMRAM] unsigned int 
   810 ;; Registers used:
   811 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   817 ;;      Params:         2       0       0       0       0       0       0       0       0
   818 ;;      Locals:         2       0       0       0       0       0       0       0       0
   819 ;;      Temps:          2       0       0       0       0       0       0       0       0
   820 ;;      Totals:         6       0       0       0       0       0       0       0       0
   821 ;;Total ram usage:        6 bytes
   822 ;; Hardware stack levels used:    1
   823 ;; Hardware stack levels required when called:    5
   824 ;; This function calls:
   825 ;;		Nothing
   826 ;; This function is called by:
   827 ;;		_main
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           	psect	text1
   832  00172C                     __ptext1:
   833                           	opt stack 0
   834  00172C                     _strlen:
   835                           	opt stack 25
   836                           
   837                           ;incstack = 0
   838  00172C  C02E  F032         	movff	strlen@s+1,strlen@cp+1
   839  001730  C02D  F031         	movff	strlen@s,strlen@cp
   840  001734  D002               	goto	l1898
   841  001736                     l1896:
   842  001736  4A31               	infsnz	strlen@cp,f,c
   843  001738  2A32               	incf	strlen@cp+1,f,c
   844  00173A                     l1898:
   845  00173A  C031  FFD9         	movff	strlen@cp,fsr2l
   846  00173E  C032  FFDA         	movff	strlen@cp+1,fsr2h
   847  001742  50DF               	movf	indf2,w,c
   848  001744  A4D8               	btfss	status,2,c
   849  001746  D7F7               	goto	l1896
   850  001748  C02D  F02F         	movff	strlen@s,??_strlen
   851  00174C  C02E  F030         	movff	strlen@s+1,??_strlen+1
   852  001750  1E2F               	comf	??_strlen,f,c
   853  001752  1E30               	comf	??_strlen+1,f,c
   854  001754  4A2F               	infsnz	??_strlen,f,c
   855  001756  2A30               	incf	??_strlen+1,f,c
   856  001758  5031               	movf	strlen@cp,w,c
   857  00175A  242F               	addwf	??_strlen,w,c
   858  00175C  6E2D               	movwf	?_strlen,c
   859  00175E  5032               	movf	strlen@cp+1,w,c
   860  001760  2030               	addwfc	??_strlen+1,w,c
   861  001762  6E2E               	movwf	?_strlen+1,c
   862  001764  0012               	return	
   863  001766                     __end_of_strlen:
   864                           	opt stack 0
   865                           tblptru	equ	0xFF8
   866                           wreg	equ	0xFE8
   867                           indf2	equ	0xFDF
   868                           fsr2h	equ	0xFDA
   869                           fsr2l	equ	0xFD9
   870                           status	equ	0xFD8
   871                           
   872 ;; *************** function _sprintf *****************
   873 ;; Defined at:
   874 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\doprnt.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;  sp              2   51[BANK0 ] PTR unsigned char 
   877 ;;		 -> main@buffer(16), 
   878 ;;  f               2   53[BANK0 ] PTR const unsigned char 
   879 ;;		 -> STR_2(19), 
   880 ;; Auto vars:     Size  Location     Type
   881 ;;  _val            4   64[BANK0 ] struct .
   882 ;;  ap              2   62[BANK0 ] PTR void [1]
   883 ;;		 -> ?_sprintf(2), 
   884 ;;  c               1   69[BANK0 ] char 
   885 ;;  prec            1   68[BANK0 ] char 
   886 ;;  flag            1   61[BANK0 ] unsigned char 
   887 ;; Return value:  Size  Location     Type
   888 ;;                  2   51[BANK0 ] int 
   889 ;; Registers used:
   890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   896 ;;      Params:         0       8       0       0       0       0       0       0       0
   897 ;;      Locals:         0       9       0       0       0       0       0       0       0
   898 ;;      Temps:          0       2       0       0       0       0       0       0       0
   899 ;;      Totals:         0      19       0       0       0       0       0       0       0
   900 ;;Total ram usage:       19 bytes
   901 ;; Hardware stack levels used:    1
   902 ;; Hardware stack levels required when called:    6
   903 ;; This function calls:
   904 ;;		___lwdiv
   905 ;;		___lwmod
   906 ;;		_isdigit
   907 ;; This function is called by:
   908 ;;		_main
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912                           	psect	text2
   913  00083E                     __ptext2:
   914                           	opt stack 0
   915  00083E                     _sprintf:
   916                           	opt stack 24
   917                           
   918                           ;doprnt.c: 494: va_list ap;
   919                           ;doprnt.c: 499: signed char c;
   920                           ;doprnt.c: 506: signed char prec;
   921                           ;doprnt.c: 508: unsigned char flag;
   922                           ;doprnt.c: 527: union {
   923                           ;doprnt.c: 528: unsigned int _val;
   924                           ;doprnt.c: 529: struct {
   925                           ;doprnt.c: 530: const char * _cp;
   926                           ;doprnt.c: 531: unsigned _len;
   927                           ;doprnt.c: 532: } _str;
   928                           ;doprnt.c: 533: } _val;
   929                           ;doprnt.c: 542: *ap = __va_start();
   930                           
   931                           ;incstack = 0
   932  00083E  0100               	movlb	0	; () banked
   933  000840  0E00               	movlw	high (?_sprintf+4)
   934  000842  0100               	movlb	0	; () banked
   935  000844  0100               	movlb	0	; () banked
   936  000846  6F9F               	movwf	(sprintf@ap+1)& (0+255),b
   937  000848  0100               	movlb	0	; () banked
   938  00084A  0E97               	movlw	low (?_sprintf+4)
   939  00084C  0100               	movlb	0	; () banked
   940  00084E  0100               	movlb	0	; () banked
   941  000850  6F9E               	movwf	sprintf@ap& (0+255),b
   942                           
   943                           ;doprnt.c: 545: while(c = *f++) {
   944  000852  D17A               	goto	l1888
   945  000854                     l1802:
   946                           
   947                           ; BSR set to: 0
   948                           ;doprnt.c: 547: if(c != '%')
   949  000854  0100               	movlb	0	; () banked
   950  000856  0100               	movlb	0	; () banked
   951  000858  51A5               	movf	sprintf@c& (0+255),w,b
   952  00085A  0A25               	xorlw	37
   953  00085C  B4D8               	btfsc	status,2,c
   954  00085E  D00C               	goto	l1808
   955                           
   956                           ; BSR set to: 0
   957                           ;doprnt.c: 549: {
   958                           ;doprnt.c: 550: ((*sp++ = (c)));
   959  000860  C093  FFD9         	movff	sprintf@sp,fsr2l
   960  000864  C094  FFDA         	movff	sprintf@sp+1,fsr2h
   961  000868  0100               	movlb	0	; () banked
   962  00086A  C0A5  FFDF         	movff	sprintf@c,indf2
   963                           
   964                           ; BSR set to: 0
   965  00086E  0100               	movlb	0	; () banked
   966  000870  0100               	movlb	0	; () banked
   967  000872  4B93               	infsnz	sprintf@sp& (0+255),f,b
   968  000874  2B94               	incf	(sprintf@sp+1)& (0+255),f,b
   969                           
   970                           ;doprnt.c: 551: continue;
   971  000876  D168               	goto	l1888
   972  000878                     l1808:
   973                           
   974                           ; BSR set to: 0
   975                           ;doprnt.c: 552: }
   976                           ;doprnt.c: 557: flag = 0;
   977  000878  0100               	movlb	0	; () banked
   978  00087A  6F9B               	movwf	??_sprintf& (0+255),b
   979  00087C  0E00               	movlw	0
   980  00087E  0100               	movlb	0	; () banked
   981  000880  0100               	movlb	0	; () banked
   982  000882  6F9D               	movwf	sprintf@flag& (0+255),b
   983  000884  0100               	movlb	0	; () banked
   984  000886  519B               	movf	??_sprintf& (0+255),w,b
   985                           
   986                           ; BSR set to: 0
   987                           ;doprnt.c: 620: if(*f == '.') {
   988  000888  0100               	movlb	0	; () banked
   989  00088A  C095  FFF6         	movff	sprintf@f,tblptrl
   990  00088E  0100               	movlb	0	; () banked
   991  000890  C096  FFF7         	movff	sprintf@f+1,tblptrh
   992  000894  0008               	tblrd		*
   993  000896  50F5               	movf	tablat,w,c
   994  000898  0A2E               	xorlw	46
   995  00089A  A4D8               	btfss	status,2,c
   996  00089C  D032               	goto	l1822
   997                           
   998                           ; BSR set to: 0
   999                           ;doprnt.c: 622: f++;
  1000  00089E  0100               	movlb	0	; () banked
  1001  0008A0  0100               	movlb	0	; () banked
  1002  0008A2  4B95               	infsnz	sprintf@f& (0+255),f,b
  1003  0008A4  2B96               	incf	(sprintf@f+1)& (0+255),f,b
  1004                           
  1005                           ; BSR set to: 0
  1006                           ;doprnt.c: 629: {
  1007                           ;doprnt.c: 630: prec = 0;
  1008  0008A6  0100               	movlb	0	; () banked
  1009  0008A8  6F9B               	movwf	??_sprintf& (0+255),b
  1010  0008AA  0E00               	movlw	0
  1011  0008AC  0100               	movlb	0	; () banked
  1012  0008AE  0100               	movlb	0	; () banked
  1013  0008B0  6FA4               	movwf	sprintf@prec& (0+255),b
  1014  0008B2  0100               	movlb	0	; () banked
  1015  0008B4  519B               	movf	??_sprintf& (0+255),w,b
  1016                           
  1017                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
  1018  0008B6  D018               	goto	l1820
  1019  0008B8                     l1816:
  1020                           
  1021                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
  1022  0008B8  0100               	movlb	0	; () banked
  1023  0008BA  C095  FFF6         	movff	sprintf@f,tblptrl
  1024  0008BE  0100               	movlb	0	; () banked
  1025  0008C0  C096  FFF7         	movff	sprintf@f+1,tblptrh
  1026  0008C4  0008               	tblrd		*
  1027  0008C6  CFF5 F09B          	movff	tablat,??_sprintf
  1028  0008CA  0100               	movlb	0	; () banked
  1029  0008CC  0100               	movlb	0	; () banked
  1030  0008CE  51A4               	movf	sprintf@prec& (0+255),w,b
  1031  0008D0  0D0A               	mullw	10
  1032  0008D2  50F3               	movf	prodl,w,c
  1033  0008D4  0100               	movlb	0	; () banked
  1034  0008D6  259B               	addwf	??_sprintf& (0+255),w,b
  1035  0008D8  0FD0               	addlw	208
  1036  0008DA  0100               	movlb	0	; () banked
  1037  0008DC  0100               	movlb	0	; () banked
  1038  0008DE  6FA4               	movwf	sprintf@prec& (0+255),b
  1039                           
  1040                           ; BSR set to: 0
  1041  0008E0  0100               	movlb	0	; () banked
  1042  0008E2  0100               	movlb	0	; () banked
  1043  0008E4  4B95               	infsnz	sprintf@f& (0+255),f,b
  1044  0008E6  2B96               	incf	(sprintf@f+1)& (0+255),f,b
  1045  0008E8                     l1820:
  1046                           
  1047                           ; BSR set to: 0
  1048  0008E8  0100               	movlb	0	; () banked
  1049  0008EA  C095  FFF6         	movff	sprintf@f,tblptrl
  1050  0008EE  0100               	movlb	0	; () banked
  1051  0008F0  C096  FFF7         	movff	sprintf@f+1,tblptrh
  1052  0008F4  0008               	tblrd		*
  1053  0008F6  50F5               	movf	tablat,w,c
  1054  0008F8  EC02  F00C         	call	_isdigit
  1055  0008FC  A0D8               	btfss	status,0,c
  1056  0008FE  D063               	goto	l1846
  1057  000900  D7DB               	goto	l1816
  1058  000902                     l1822:
  1059                           
  1060                           ;doprnt.c: 635: prec = 0;
  1061  000902  0100               	movlb	0	; () banked
  1062  000904  6F9B               	movwf	??_sprintf& (0+255),b
  1063  000906  0E00               	movlw	0
  1064  000908  0100               	movlb	0	; () banked
  1065  00090A  0100               	movlb	0	; () banked
  1066  00090C  6FA4               	movwf	sprintf@prec& (0+255),b
  1067  00090E  0100               	movlb	0	; () banked
  1068  000910  519B               	movf	??_sprintf& (0+255),w,b
  1069  000912  D059               	goto	l1846
  1070  000914                     l1824:
  1071                           
  1072                           ; BSR set to: 0
  1073                           ;doprnt.c: 762: if(prec && prec < _val._str._len)
  1074  000914  0100               	movlb	0	; () banked
  1075  000916  0100               	movlb	0	; () banked
  1076  000918  51A4               	movf	sprintf@prec& (0+255),w,b
  1077  00091A  B4D8               	btfsc	status,2,c
  1078  00091C  D031               	goto	l1836
  1079                           
  1080                           ; BSR set to: 0
  1081  00091E  0100               	movlb	0	; () banked
  1082  000920  C0A4  F09B         	movff	sprintf@prec,??_sprintf
  1083  000924  0100               	movlb	0	; () banked
  1084  000926  6B9C               	clrf	(??_sprintf+1)& (0+255),b
  1085  000928  BF9B               	btfsc	??_sprintf& (0+255),7,b
  1086  00092A  079C               	decf	(??_sprintf+1)& (0+255),f,b
  1087  00092C  0100               	movlb	0	; () banked
  1088  00092E  0100               	movlb	0	; () banked
  1089  000930  51A2               	movf	(sprintf@_val+2)& (0+255),w,b
  1090  000932  0100               	movlb	0	; () banked
  1091  000934  5D9B               	subwf	??_sprintf& (0+255),w,b
  1092  000936  0100               	movlb	0	; () banked
  1093  000938  0100               	movlb	0	; () banked
  1094  00093A  51A3               	movf	(sprintf@_val+3)& (0+255),w,b
  1095  00093C  0100               	movlb	0	; () banked
  1096  00093E  599C               	subwfb	(??_sprintf+1)& (0+255),w,b
  1097  000940  B0D8               	btfsc	status,0,c
  1098  000942  D01E               	goto	l1836
  1099                           
  1100                           ; BSR set to: 0
  1101                           ;doprnt.c: 763: _val._str._len = prec;
  1102  000944  0100               	movlb	0	; () banked
  1103  000946  0100               	movlb	0	; () banked
  1104  000948  51A4               	movf	sprintf@prec& (0+255),w,b
  1105  00094A  0100               	movlb	0	; () banked
  1106  00094C  0100               	movlb	0	; () banked
  1107  00094E  6FA2               	movwf	(sprintf@_val+2)& (0+255),b
  1108  000950  0100               	movlb	0	; () banked
  1109  000952  6BA3               	clrf	(sprintf@_val+3)& (0+255),b
  1110  000954  0100               	movlb	0	; () banked
  1111  000956  BFA2               	btfsc	(sprintf@_val+2)& (0+255),7,b
  1112  000958  07A3               	decf	(sprintf@_val+3)& (0+255),f,b
  1113  00095A  D012               	goto	l1836
  1114  00095C                     l1830:
  1115                           
  1116                           ; BSR set to: 0
  1117                           ;doprnt.c: 777: ((*sp++ = (*_val._str._cp++)));
  1118  00095C  C0A0  FFD9         	movff	sprintf@_val,fsr2l
  1119  000960  C0A1  FFDA         	movff	sprintf@_val+1,fsr2h
  1120  000964  C093  FFE1         	movff	sprintf@sp,fsr1l
  1121  000968  C094  FFE2         	movff	sprintf@sp+1,fsr1h
  1122  00096C  CFDF FFE7          	movff	indf2,indf1
  1123                           
  1124                           ; BSR set to: 0
  1125  000970  0100               	movlb	0	; () banked
  1126  000972  0100               	movlb	0	; () banked
  1127  000974  4BA0               	infsnz	sprintf@_val& (0+255),f,b
  1128  000976  2BA1               	incf	(sprintf@_val+1)& (0+255),f,b
  1129                           
  1130                           ; BSR set to: 0
  1131  000978  0100               	movlb	0	; () banked
  1132  00097A  0100               	movlb	0	; () banked
  1133  00097C  4B93               	infsnz	sprintf@sp& (0+255),f,b
  1134  00097E  2B94               	incf	(sprintf@sp+1)& (0+255),f,b
  1135  000980                     l1836:
  1136                           
  1137                           ; BSR set to: 0
  1138  000980  0100               	movlb	0	; () banked
  1139  000982  0100               	movlb	0	; () banked
  1140  000984  07A2               	decf	(sprintf@_val+2)& (0+255),f,b
  1141  000986  A0D8               	btfss	status,0,c
  1142  000988  07A3               	decf	(sprintf@_val+3)& (0+255),f,b
  1143  00098A  0100               	movlb	0	; () banked
  1144  00098C  29A2               	incf	(sprintf@_val+2)& (0+255),w,b
  1145  00098E  B4D8               	btfsc	status,2,c
  1146  000990  29A3               	incf	(sprintf@_val+3)& (0+255),w,b
  1147  000992  B4D8               	btfsc	status,2,c
  1148  000994  D0D9               	goto	l1888
  1149  000996  D7E2               	goto	l1830
  1150  000998                     l1838:
  1151                           
  1152                           ; BSR set to: 0
  1153                           ;doprnt.c: 814: _val._str._cp = (char *)&c;
  1154  000998  0100               	movlb	0	; () banked
  1155  00099A  0E00               	movlw	high sprintf@c
  1156  00099C  0100               	movlb	0	; () banked
  1157  00099E  0100               	movlb	0	; () banked
  1158  0009A0  6FA1               	movwf	(sprintf@_val+1)& (0+255),b
  1159  0009A2  0100               	movlb	0	; () banked
  1160  0009A4  0EA5               	movlw	low sprintf@c
  1161  0009A6  0100               	movlb	0	; () banked
  1162  0009A8  0100               	movlb	0	; () banked
  1163  0009AA  6FA0               	movwf	sprintf@_val& (0+255),b
  1164                           
  1165                           ; BSR set to: 0
  1166                           ;doprnt.c: 815: _val._str._len = 1;
  1167  0009AC  0E00               	movlw	0
  1168  0009AE  0100               	movlb	0	; () banked
  1169  0009B0  0100               	movlb	0	; () banked
  1170  0009B2  6FA3               	movwf	(sprintf@_val+3)& (0+255),b
  1171  0009B4  0E01               	movlw	1
  1172  0009B6  0100               	movlb	0	; () banked
  1173  0009B8  6FA2               	movwf	(sprintf@_val+2)& (0+255),b
  1174                           
  1175                           ;doprnt.c: 816: goto dostring;
  1176  0009BA  D7AC               	goto	l1824
  1177  0009BC                     l1842:
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;doprnt.c: 827: flag |= 0xC0;
  1181  0009BC  0EC0               	movlw	192
  1182  0009BE  0100               	movlb	0	; () banked
  1183  0009C0  0100               	movlb	0	; () banked
  1184  0009C2  139D               	iorwf	sprintf@flag& (0+255),f,b
  1185                           
  1186                           ;doprnt.c: 828: break;
  1187  0009C4  D017               	goto	l1848
  1188  0009C6                     l1846:
  1189  0009C6  0100               	movlb	0	; () banked
  1190  0009C8  C095  FFF6         	movff	sprintf@f,tblptrl
  1191  0009CC  0100               	movlb	0	; () banked
  1192  0009CE  C096  FFF7         	movff	sprintf@f+1,tblptrh
  1193  0009D2  0100               	movlb	0	; () banked
  1194  0009D4  0100               	movlb	0	; () banked
  1195  0009D6  4B95               	infsnz	sprintf@f& (0+255),f,b
  1196  0009D8  2B96               	incf	(sprintf@f+1)& (0+255),f,b
  1197  0009DA  0008               	tblrd		*
  1198  0009DC  0100               	movlb	0	; () banked
  1199  0009DE  CFF5 F0A5          	movff	tablat,sprintf@c
  1200  0009E2  0100               	movlb	0	; () banked
  1201  0009E4  51A5               	movf	sprintf@c& (0+255),w,b
  1202                           
  1203                           ; Switch size 1, requested type "space"
  1204                           ; Number of cases is 2, Range of values is 0 to 117
  1205                           ; switch strategies available:
  1206                           ; Name         Instructions Cycles
  1207                           ; simple_byte            7     4 (average)
  1208                           ;	Chosen strategy is simple_byte
  1209  0009E6  0A00               	xorlw	0	; case 0
  1210  0009E8  B4D8               	btfsc	status,2,c
  1211  0009EA  D0BF               	goto	l1890
  1212  0009EC  0A75               	xorlw	117	; case 117
  1213  0009EE  B4D8               	btfsc	status,2,c
  1214  0009F0  D7E5               	goto	l1842
  1215  0009F2  D7D2               	goto	l1838
  1216  0009F4                     l1848:
  1217                           
  1218                           ; BSR set to: 0
  1219                           ;doprnt.c: 1282: {
  1220                           ;doprnt.c: 1295: _val._val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1221  0009F4  C09E  FFD9         	movff	sprintf@ap,fsr2l
  1222  0009F8  C09F  FFDA         	movff	sprintf@ap+1,fsr2h
  1223  0009FC  0100               	movlb	0	; () banked
  1224  0009FE  CFDE F0A0          	movff	postinc2,sprintf@_val
  1225  000A02  0100               	movlb	0	; () banked
  1226  000A04  CFDD F0A1          	movff	postdec2,sprintf@_val+1
  1227                           
  1228                           ; BSR set to: 0
  1229  000A08  0E02               	movlw	2
  1230  000A0A  0100               	movlb	0	; () banked
  1231  000A0C  0100               	movlb	0	; () banked
  1232  000A0E  279E               	addwf	sprintf@ap& (0+255),f,b
  1233  000A10  0E00               	movlw	0
  1234  000A12  0100               	movlb	0	; () banked
  1235  000A14  239F               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1236                           
  1237                           ; BSR set to: 0
  1238                           ;doprnt.c: 1296: }
  1239                           ;doprnt.c: 1299: if(prec == 0 && _val._val == 0)
  1240  000A16  0100               	movlb	0	; () banked
  1241  000A18  0100               	movlb	0	; () banked
  1242  000A1A  67A4               	tstfsz	sprintf@prec& (0+255),b
  1243  000A1C  D009               	goto	l1858
  1244                           
  1245                           ; BSR set to: 0
  1246  000A1E  0100               	movlb	0	; () banked
  1247  000A20  0100               	movlb	0	; () banked
  1248  000A22  51A1               	movf	(sprintf@_val+1)& (0+255),w,b
  1249  000A24  11A0               	iorwf	sprintf@_val& (0+255),w,b
  1250  000A26  A4D8               	btfss	status,2,c
  1251  000A28  D003               	goto	l1858
  1252                           
  1253                           ; BSR set to: 0
  1254                           ;doprnt.c: 1300: prec++;
  1255  000A2A  0100               	movlb	0	; () banked
  1256  000A2C  0100               	movlb	0	; () banked
  1257  000A2E  2BA4               	incf	sprintf@prec& (0+255),f,b
  1258  000A30                     l1858:
  1259                           
  1260                           ; BSR set to: 0
  1261                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1262  000A30  0100               	movlb	0	; () banked
  1263  000A32  6F9B               	movwf	??_sprintf& (0+255),b
  1264  000A34  0E01               	movlw	1
  1265  000A36  0100               	movlb	0	; () banked
  1266  000A38  0100               	movlb	0	; () banked
  1267  000A3A  6FA5               	movwf	sprintf@c& (0+255),b
  1268  000A3C  0100               	movlb	0	; () banked
  1269  000A3E  519B               	movf	??_sprintf& (0+255),w,b
  1270  000A40                     
  1271                           ; BSR set to: 0
  1272  000A40  0100               	movlb	0	; () banked
  1273  000A42  0100               	movlb	0	; () banked
  1274  000A44  51A5               	movf	sprintf@c& (0+255),w,b
  1275  000A46  0A05               	xorlw	5
  1276  000A48  B4D8               	btfsc	status,2,c
  1277  000A4A  D020               	goto	l1872
  1278                           
  1279                           ; BSR set to: 0
  1280                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  1281                           
  1282                           ; BSR set to: 0
  1283                           
  1284                           ; BSR set to: 0
  1285  000A4C  0100               	movlb	0	; () banked
  1286  000A4E  0100               	movlb	0	; () banked
  1287  000A50  51A5               	movf	sprintf@c& (0+255),w,b
  1288  000A52  0D02               	mullw	2
  1289  000A54  0E11               	movlw	low _dpowers
  1290  000A56  24F3               	addwf	prodl,w,c
  1291  000A58  6EF6               	movwf	tblptrl,c
  1292  000A5A  0E08               	movlw	high _dpowers
  1293  000A5C  20F4               	addwfc	prodh,w,c
  1294  000A5E  6EF7               	movwf	tblptrh,c
  1295  000A60  0009               	tblrd		*+
  1296  000A62  CFF5 F09B          	movff	tablat,??_sprintf
  1297  000A66  0009               	tblrd		*+
  1298  000A68  CFF5 F09C          	movff	tablat,??_sprintf+1
  1299  000A6C  0100               	movlb	0	; () banked
  1300  000A6E  519B               	movf	??_sprintf& (0+255),w,b
  1301  000A70  0100               	movlb	0	; () banked
  1302  000A72  0100               	movlb	0	; () banked
  1303  000A74  5DA0               	subwf	sprintf@_val& (0+255),w,b
  1304  000A76  0100               	movlb	0	; () banked
  1305  000A78  519C               	movf	(??_sprintf+1)& (0+255),w,b
  1306  000A7A  0100               	movlb	0	; () banked
  1307  000A7C  0100               	movlb	0	; () banked
  1308  000A7E  59A1               	subwfb	(sprintf@_val+1)& (0+255),w,b
  1309  000A80  A0D8               	btfss	status,0,c
  1310  000A82  D004               	goto	l1872
  1311                           
  1312                           ; BSR set to: 0
  1313                           
  1314                           ; BSR set to: 0
  1315                           
  1316                           ; BSR set to: 0
  1317                           ;doprnt.c: 1316: break;
  1318  000A84  0100               	movlb	0	; () banked
  1319  000A86  0100               	movlb	0	; () banked
  1320  000A88  2BA5               	incf	sprintf@c& (0+255),f,b
  1321  000A8A  D7DA               	goto	L1
  1322  000A8C                     l1872:
  1323                           
  1324                           ; BSR set to: 0
  1325                           ;doprnt.c: 1348: if(c < prec)
  1326  000A8C  0100               	movlb	0	; () banked
  1327  000A8E  0100               	movlb	0	; () banked
  1328  000A90  51A5               	movf	sprintf@c& (0+255),w,b
  1329  000A92  0A80               	xorlw	128
  1330  000A94  0100               	movlb	0	; () banked
  1331  000A96  6F9B               	movwf	??_sprintf& (0+255),b
  1332  000A98  0100               	movlb	0	; () banked
  1333  000A9A  0100               	movlb	0	; () banked
  1334  000A9C  51A4               	movf	sprintf@prec& (0+255),w,b
  1335  000A9E  0A80               	xorlw	128
  1336  000AA0  0100               	movlb	0	; () banked
  1337  000AA2  5D9B               	subwf	??_sprintf& (0+255),w,b
  1338  000AA4  B0D8               	btfsc	status,0,c
  1339  000AA6  D003               	goto	l1876
  1340                           
  1341                           ; BSR set to: 0
  1342                           ;doprnt.c: 1349: c = prec;
  1343  000AA8  C0A4  F0A5         	movff	sprintf@prec,sprintf@c
  1344  000AAC  D046               	goto	l1886
  1345  000AAE                     l1876:
  1346                           
  1347                           ; BSR set to: 0
  1348                           ;doprnt.c: 1350: else if(prec < c)
  1349  000AAE  0100               	movlb	0	; () banked
  1350  000AB0  0100               	movlb	0	; () banked
  1351  000AB2  51A4               	movf	sprintf@prec& (0+255),w,b
  1352  000AB4  0A80               	xorlw	128
  1353  000AB6  0100               	movlb	0	; () banked
  1354  000AB8  6F9B               	movwf	??_sprintf& (0+255),b
  1355  000ABA  0100               	movlb	0	; () banked
  1356  000ABC  0100               	movlb	0	; () banked
  1357  000ABE  51A5               	movf	sprintf@c& (0+255),w,b
  1358  000AC0  0A80               	xorlw	128
  1359  000AC2  0100               	movlb	0	; () banked
  1360  000AC4  5D9B               	subwf	??_sprintf& (0+255),w,b
  1361  000AC6  B0D8               	btfsc	status,0,c
  1362  000AC8  D038               	goto	l1886
  1363                           
  1364                           ; BSR set to: 0
  1365                           ;doprnt.c: 1351: prec = c;
  1366  000ACA  C0A5  F0A4         	movff	sprintf@c,sprintf@prec
  1367  000ACE  D035               	goto	l1886
  1368  000AD0                     l1880:
  1369                           
  1370                           ; BSR set to: 0
  1371                           ;doprnt.c: 1487: {
  1372                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  1373  000AD0  0100               	movlb	0	; () banked
  1374  000AD2  0100               	movlb	0	; () banked
  1375  000AD4  51A4               	movf	sprintf@prec& (0+255),w,b
  1376  000AD6  0D02               	mullw	2
  1377  000AD8  0E11               	movlw	low _dpowers
  1378  000ADA  24F3               	addwf	prodl,w,c
  1379  000ADC  6EF6               	movwf	tblptrl,c
  1380  000ADE  0E08               	movlw	high _dpowers
  1381  000AE0  20F4               	addwfc	prodh,w,c
  1382  000AE2  6EF7               	movwf	tblptrh,c
  1383  000AE4  0009               	tblrd		*+
  1384  000AE6  CFF5 F02F          	movff	tablat,___lwdiv@divisor
  1385  000AEA  000A               	tblrd		*-
  1386  000AEC  CFF5 F030          	movff	tablat,___lwdiv@divisor+1
  1387  000AF0  C0A0  F02D         	movff	sprintf@_val,___lwdiv@dividend
  1388  000AF4  C0A1  F02E         	movff	sprintf@_val+1,___lwdiv@dividend+1
  1389  000AF8  ECD6  F00A         	call	___lwdiv	;wreg free
  1390  000AFC  C02D  F063         	movff	?___lwdiv,___lwmod@dividend
  1391  000B00  C02E  F064         	movff	?___lwdiv+1,___lwmod@dividend+1
  1392  000B04  0E00               	movlw	0
  1393  000B06  0100               	movlb	0	; () banked
  1394  000B08  0100               	movlb	0	; () banked
  1395  000B0A  6F66               	movwf	(___lwmod@divisor+1)& (0+255),b
  1396  000B0C  0E0A               	movlw	10
  1397  000B0E  0100               	movlb	0	; () banked
  1398  000B10  6F65               	movwf	___lwmod@divisor& (0+255),b
  1399  000B12  EC99  F00A         	call	___lwmod	;wreg free
  1400  000B16  0100               	movlb	0	; () banked
  1401  000B18  0100               	movlb	0	; () banked
  1402  000B1A  5163               	movf	?___lwmod& (0+255),w,b
  1403  000B1C  0F30               	addlw	48
  1404  000B1E  0100               	movlb	0	; () banked
  1405  000B20  0100               	movlb	0	; () banked
  1406  000B22  6FA5               	movwf	sprintf@c& (0+255),b
  1407                           
  1408                           ; BSR set to: 0
  1409                           ;doprnt.c: 1532: }
  1410                           ;doprnt.c: 1533: ((*sp++ = (c)));
  1411  000B24  C093  FFD9         	movff	sprintf@sp,fsr2l
  1412  000B28  C094  FFDA         	movff	sprintf@sp+1,fsr2h
  1413  000B2C  0100               	movlb	0	; () banked
  1414  000B2E  C0A5  FFDF         	movff	sprintf@c,indf2
  1415                           
  1416                           ; BSR set to: 0
  1417  000B32  0100               	movlb	0	; () banked
  1418  000B34  0100               	movlb	0	; () banked
  1419  000B36  4B93               	infsnz	sprintf@sp& (0+255),f,b
  1420  000B38  2B94               	incf	(sprintf@sp+1)& (0+255),f,b
  1421  000B3A                     l1886:
  1422                           
  1423                           ; BSR set to: 0
  1424  000B3A  0100               	movlb	0	; () banked
  1425  000B3C  0100               	movlb	0	; () banked
  1426  000B3E  07A4               	decf	sprintf@prec& (0+255),f,b
  1427  000B40  0100               	movlb	0	; () banked
  1428  000B42  29A4               	incf	sprintf@prec& (0+255),w,b
  1429  000B44  A4D8               	btfss	status,2,c
  1430  000B46  D7C4               	goto	l1880
  1431  000B48                     l1888:
  1432                           
  1433                           ; BSR set to: 0
  1434  000B48  0100               	movlb	0	; () banked
  1435  000B4A  C095  FFF6         	movff	sprintf@f,tblptrl
  1436  000B4E  0100               	movlb	0	; () banked
  1437  000B50  C096  FFF7         	movff	sprintf@f+1,tblptrh
  1438  000B54  0100               	movlb	0	; () banked
  1439  000B56  0100               	movlb	0	; () banked
  1440  000B58  4B95               	infsnz	sprintf@f& (0+255),f,b
  1441  000B5A  2B96               	incf	(sprintf@f+1)& (0+255),f,b
  1442  000B5C  0008               	tblrd		*
  1443  000B5E  0100               	movlb	0	; () banked
  1444  000B60  CFF5 F0A5          	movff	tablat,sprintf@c
  1445  000B64  0100               	movlb	0	; () banked
  1446  000B66  67A5               	tstfsz	sprintf@c& (0+255),b
  1447  000B68  D675               	goto	l1802
  1448  000B6A                     l1890:
  1449                           
  1450                           ; BSR set to: 0
  1451                           ;doprnt.c: 1547: *sp = 0;
  1452  000B6A  C093  FFD9         	movff	sprintf@sp,fsr2l
  1453  000B6E  C094  FFDA         	movff	sprintf@sp+1,fsr2h
  1454  000B72  0E00               	movlw	0
  1455  000B74  6EDF               	movwf	indf2,c
  1456                           
  1457                           ; BSR set to: 0
  1458                           
  1459                           ; BSR set to: 0
  1460                           ;doprnt.c: 1549: return 0;
  1461                           ;	Return value of _sprintf is never used
  1462  000B76  0012               	return	
  1463  000B78                     __end_of_sprintf:
  1464                           	opt stack 0
  1465                           tblptru	equ	0xFF8
  1466                           tblptrh	equ	0xFF7
  1467                           tblptrl	equ	0xFF6
  1468                           tablat	equ	0xFF5
  1469                           prodh	equ	0xFF4
  1470                           prodl	equ	0xFF3
  1471                           wreg	equ	0xFE8
  1472                           indf1	equ	0xFE7
  1473                           fsr1h	equ	0xFE2
  1474                           fsr1l	equ	0xFE1
  1475                           indf2	equ	0xFDF
  1476                           postinc2	equ	0xFDE
  1477                           postdec2	equ	0xFDD
  1478                           fsr2h	equ	0xFDA
  1479                           fsr2l	equ	0xFD9
  1480                           status	equ	0xFD8
  1481                           
  1482 ;; *************** function _isdigit *****************
  1483 ;; Defined at:
  1484 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\isdigit.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;  c               1    wreg     unsigned char 
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;  c               1   46[COMRAM] unsigned char 
  1489 ;; Return value:  Size  Location     Type
  1490 ;;		None               void
  1491 ;; Registers used:
  1492 ;;		wreg, status,2, status,0
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1498 ;;      Params:         0       0       0       0       0       0       0       0       0
  1499 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1500 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1501 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1502 ;;Total ram usage:        3 bytes
  1503 ;; Hardware stack levels used:    1
  1504 ;; Hardware stack levels required when called:    5
  1505 ;; This function calls:
  1506 ;;		Nothing
  1507 ;; This function is called by:
  1508 ;;		_sprintf
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           	psect	text3
  1513  001804                     __ptext3:
  1514                           	opt stack 0
  1515  001804                     _isdigit:
  1516                           	opt stack 24
  1517                           
  1518                           ; BSR set to: 0
  1519                           ;incstack = 0
  1520                           ;isdigit@c stored from wreg
  1521  001804  CFE8 F02F          	movff	wreg,isdigit@c
  1522  001808  6E2D               	movwf	??_isdigit& (0+255),c
  1523  00180A  0E00               	movlw	0
  1524  00180C  6E2E               	movwf	_isdigit$1330,c
  1525  00180E  502D               	movf	??_isdigit& (0+255),w,c
  1526  001810  0E3A               	movlw	58
  1527  001812  5C2F               	subwf	isdigit@c,w,c
  1528  001814  B0D8               	btfsc	status,0,c
  1529  001816  D007               	goto	l1952
  1530  001818  0E2F               	movlw	47
  1531  00181A  642F               	cpfsgt	isdigit@c,c
  1532  00181C  D004               	goto	l1952
  1533  00181E  6E2D               	movwf	??_isdigit& (0+255),c
  1534  001820  0E01               	movlw	1
  1535  001822  6E2E               	movwf	_isdigit$1330,c
  1536  001824  502D               	movf	??_isdigit& (0+255),w,c
  1537  001826                     l1952:
  1538  001826  C02E  F02D         	movff	_isdigit$1330,??_isdigit
  1539  00182A  302D               	rrcf	??_isdigit,w,c
  1540  00182C  0012               	return	
  1541  00182E                     __end_of_isdigit:
  1542                           	opt stack 0
  1543                           tblptru	equ	0xFF8
  1544                           tblptrh	equ	0xFF7
  1545                           tblptrl	equ	0xFF6
  1546                           tablat	equ	0xFF5
  1547                           prodh	equ	0xFF4
  1548                           prodl	equ	0xFF3
  1549                           wreg	equ	0xFE8
  1550                           indf1	equ	0xFE7
  1551                           fsr1h	equ	0xFE2
  1552                           fsr1l	equ	0xFE1
  1553                           indf2	equ	0xFDF
  1554                           postinc2	equ	0xFDE
  1555                           postdec2	equ	0xFDD
  1556                           fsr2h	equ	0xFDA
  1557                           fsr2l	equ	0xFD9
  1558                           status	equ	0xFD8
  1559                           
  1560 ;; *************** function ___lwmod *****************
  1561 ;; Defined at:
  1562 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;  dividend        2    3[BANK0 ] unsigned int 
  1565 ;;  divisor         2    5[BANK0 ] unsigned int 
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;  counter         1   50[COMRAM] unsigned char 
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  2    3[BANK0 ] unsigned int 
  1570 ;; Registers used:
  1571 ;;		wreg, status,2, status,0
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1577 ;;      Params:         0       4       0       0       0       0       0       0       0
  1578 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1579 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1580 ;;      Totals:         2       4       0       0       0       0       0       0       0
  1581 ;;Total ram usage:        6 bytes
  1582 ;; Hardware stack levels used:    1
  1583 ;; Hardware stack levels required when called:    5
  1584 ;; This function calls:
  1585 ;;		Nothing
  1586 ;; This function is called by:
  1587 ;;		_sprintf
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           	psect	text4
  1592  001532                     __ptext4:
  1593                           	opt stack 0
  1594  001532                     ___lwmod:
  1595                           	opt stack 24
  1596                           
  1597                           ;incstack = 0
  1598  001532  0100               	movlb	0	; () banked
  1599  001534  0100               	movlb	0	; () banked
  1600  001536  5166               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1601  001538  1165               	iorwf	___lwmod@divisor& (0+255),w,b
  1602  00153A  B4D8               	btfsc	status,2,c
  1603  00153C  D032               	goto	l780
  1604                           
  1605                           ; BSR set to: 0
  1606  00153E  6E32               	movwf	??___lwmod& (0+255),c
  1607  001540  0E01               	movlw	1
  1608  001542  6E33               	movwf	___lwmod@counter,c
  1609  001544  5032               	movf	??___lwmod& (0+255),w,c
  1610  001546  D007               	goto	l2156
  1611  001548                     l2154:
  1612                           
  1613                           ; BSR set to: 0
  1614  001548  0100               	movlb	0	; () banked
  1615  00154A  0100               	movlb	0	; () banked
  1616  00154C  0100               	movlb	0	; () banked
  1617  00154E  90D8               	bcf	status,0,c
  1618  001550  3765               	rlcf	___lwmod@divisor& (0+255),f,b
  1619  001552  3766               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1620  001554  2A33               	incf	___lwmod@counter,f,c
  1621  001556                     l2156:
  1622                           
  1623                           ; BSR set to: 0
  1624  001556  0100               	movlb	0	; () banked
  1625  001558  0100               	movlb	0	; () banked
  1626  00155A  AF66               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1627  00155C  D7F5               	goto	l2154
  1628  00155E                     l2158:
  1629                           
  1630                           ; BSR set to: 0
  1631  00155E  0100               	movlb	0	; () banked
  1632  001560  0100               	movlb	0	; () banked
  1633  001562  5165               	movf	___lwmod@divisor& (0+255),w,b
  1634  001564  0100               	movlb	0	; () banked
  1635  001566  0100               	movlb	0	; () banked
  1636  001568  5D63               	subwf	___lwmod@dividend& (0+255),w,b
  1637  00156A  0100               	movlb	0	; () banked
  1638  00156C  0100               	movlb	0	; () banked
  1639  00156E  5166               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1640  001570  0100               	movlb	0	; () banked
  1641  001572  0100               	movlb	0	; () banked
  1642  001574  5964               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1643  001576  A0D8               	btfss	status,0,c
  1644  001578  D00C               	goto	l2162
  1645                           
  1646                           ; BSR set to: 0
  1647  00157A  0100               	movlb	0	; () banked
  1648  00157C  0100               	movlb	0	; () banked
  1649  00157E  5165               	movf	___lwmod@divisor& (0+255),w,b
  1650  001580  0100               	movlb	0	; () banked
  1651  001582  0100               	movlb	0	; () banked
  1652  001584  5F63               	subwf	___lwmod@dividend& (0+255),f,b
  1653  001586  0100               	movlb	0	; () banked
  1654  001588  0100               	movlb	0	; () banked
  1655  00158A  5166               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1656  00158C  0100               	movlb	0	; () banked
  1657  00158E  0100               	movlb	0	; () banked
  1658  001590  5B64               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1659  001592                     l2162:
  1660                           
  1661                           ; BSR set to: 0
  1662  001592  0100               	movlb	0	; () banked
  1663  001594  0100               	movlb	0	; () banked
  1664  001596  0100               	movlb	0	; () banked
  1665  001598  90D8               	bcf	status,0,c
  1666  00159A  3366               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1667  00159C  3365               	rrcf	___lwmod@divisor& (0+255),f,b
  1668                           
  1669                           ; BSR set to: 0
  1670  00159E  2E33               	decfsz	___lwmod@counter,f,c
  1671  0015A0  D7DE               	goto	l2158
  1672  0015A2                     l780:
  1673                           
  1674                           ; BSR set to: 0
  1675  0015A2  C063  F063         	movff	___lwmod@dividend,?___lwmod
  1676  0015A6  C064  F064         	movff	___lwmod@dividend+1,?___lwmod+1
  1677                           
  1678                           ; BSR set to: 0
  1679  0015AA  0012               	return	
  1680  0015AC                     __end_of___lwmod:
  1681                           	opt stack 0
  1682                           tblptru	equ	0xFF8
  1683                           tblptrh	equ	0xFF7
  1684                           tblptrl	equ	0xFF6
  1685                           tablat	equ	0xFF5
  1686                           prodh	equ	0xFF4
  1687                           prodl	equ	0xFF3
  1688                           wreg	equ	0xFE8
  1689                           indf1	equ	0xFE7
  1690                           fsr1h	equ	0xFE2
  1691                           fsr1l	equ	0xFE1
  1692                           indf2	equ	0xFDF
  1693                           postinc2	equ	0xFDE
  1694                           postdec2	equ	0xFDD
  1695                           fsr2h	equ	0xFDA
  1696                           fsr2l	equ	0xFD9
  1697                           status	equ	0xFD8
  1698                           
  1699 ;; *************** function ___lwdiv *****************
  1700 ;; Defined at:
  1701 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwdiv.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;  dividend        2   44[COMRAM] unsigned int 
  1704 ;;  divisor         2   46[COMRAM] unsigned int 
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;  quotient        2    0[BANK0 ] unsigned int 
  1707 ;;  counter         1    2[BANK0 ] unsigned char 
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  2   44[COMRAM] unsigned int 
  1710 ;; Registers used:
  1711 ;;		wreg, status,2, status,0
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1717 ;;      Params:         4       0       0       0       0       0       0       0       0
  1718 ;;      Locals:         0       3       0       0       0       0       0       0       0
  1719 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1720 ;;      Totals:         5       3       0       0       0       0       0       0       0
  1721 ;;Total ram usage:        8 bytes
  1722 ;; Hardware stack levels used:    1
  1723 ;; Hardware stack levels required when called:    5
  1724 ;; This function calls:
  1725 ;;		Nothing
  1726 ;; This function is called by:
  1727 ;;		_sprintf
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text5
  1732  0015AC                     __ptext5:
  1733                           	opt stack 0
  1734  0015AC                     ___lwdiv:
  1735                           	opt stack 24
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;incstack = 0
  1739  0015AC  0E00               	movlw	0
  1740  0015AE  0100               	movlb	0	; () banked
  1741  0015B0  0100               	movlb	0	; () banked
  1742  0015B2  6F61               	movwf	(___lwdiv@quotient+1)& (0+255),b
  1743  0015B4  0E00               	movlw	0
  1744  0015B6  0100               	movlb	0	; () banked
  1745  0015B8  6F60               	movwf	___lwdiv@quotient& (0+255),b
  1746                           
  1747                           ; BSR set to: 0
  1748  0015BA  5030               	movf	___lwdiv@divisor+1,w,c
  1749  0015BC  102F               	iorwf	___lwdiv@divisor,w,c
  1750  0015BE  B4D8               	btfsc	status,2,c
  1751  0015C0  D029               	goto	l770
  1752                           
  1753                           ; BSR set to: 0
  1754  0015C2  6E31               	movwf	??___lwdiv& (0+255),c
  1755  0015C4  0E01               	movlw	1
  1756  0015C6  0100               	movlb	0	; () banked
  1757  0015C8  0100               	movlb	0	; () banked
  1758  0015CA  6F62               	movwf	___lwdiv@counter& (0+255),b
  1759  0015CC  5031               	movf	??___lwdiv& (0+255),w,c
  1760  0015CE  D006               	goto	l2136
  1761  0015D0                     l2134:
  1762                           
  1763                           ; BSR set to: 0
  1764  0015D0  90D8               	bcf	status,0,c
  1765  0015D2  362F               	rlcf	___lwdiv@divisor,f,c
  1766  0015D4  3630               	rlcf	___lwdiv@divisor+1,f,c
  1767  0015D6  0100               	movlb	0	; () banked
  1768  0015D8  0100               	movlb	0	; () banked
  1769  0015DA  2B62               	incf	___lwdiv@counter& (0+255),f,b
  1770  0015DC                     l2136:
  1771                           
  1772                           ; BSR set to: 0
  1773  0015DC  AE30               	btfss	___lwdiv@divisor+1,7,c
  1774  0015DE  D7F8               	goto	l2134
  1775  0015E0                     l2138:
  1776                           
  1777                           ; BSR set to: 0
  1778  0015E0  0100               	movlb	0	; () banked
  1779  0015E2  0100               	movlb	0	; () banked
  1780  0015E4  0100               	movlb	0	; () banked
  1781  0015E6  90D8               	bcf	status,0,c
  1782  0015E8  3760               	rlcf	___lwdiv@quotient& (0+255),f,b
  1783  0015EA  3761               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  1784                           
  1785                           ; BSR set to: 0
  1786  0015EC  502F               	movf	___lwdiv@divisor,w,c
  1787  0015EE  5C2D               	subwf	___lwdiv@dividend,w,c
  1788  0015F0  5030               	movf	___lwdiv@divisor+1,w,c
  1789  0015F2  582E               	subwfb	___lwdiv@dividend+1,w,c
  1790  0015F4  A0D8               	btfss	status,0,c
  1791  0015F6  D007               	goto	l2146
  1792                           
  1793                           ; BSR set to: 0
  1794  0015F8  502F               	movf	___lwdiv@divisor,w,c
  1795  0015FA  5E2D               	subwf	___lwdiv@dividend,f,c
  1796  0015FC  5030               	movf	___lwdiv@divisor+1,w,c
  1797  0015FE  5A2E               	subwfb	___lwdiv@dividend+1,f,c
  1798                           
  1799                           ; BSR set to: 0
  1800  001600  0100               	movlb	0	; () banked
  1801  001602  0100               	movlb	0	; () banked
  1802  001604  8160               	bsf	___lwdiv@quotient& (0+255),0,b
  1803  001606                     l2146:
  1804                           
  1805                           ; BSR set to: 0
  1806  001606  90D8               	bcf	status,0,c
  1807  001608  3230               	rrcf	___lwdiv@divisor+1,f,c
  1808  00160A  322F               	rrcf	___lwdiv@divisor,f,c
  1809                           
  1810                           ; BSR set to: 0
  1811  00160C  0100               	movlb	0	; () banked
  1812  00160E  0100               	movlb	0	; () banked
  1813  001610  2F62               	decfsz	___lwdiv@counter& (0+255),f,b
  1814  001612  D7E6               	goto	l2138
  1815  001614                     l770:
  1816                           
  1817                           ; BSR set to: 0
  1818  001614  C060  F02D         	movff	___lwdiv@quotient,?___lwdiv
  1819  001618  C061  F02E         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1820                           
  1821                           ; BSR set to: 0
  1822  00161C  0012               	return	
  1823  00161E                     __end_of___lwdiv:
  1824                           	opt stack 0
  1825                           tblptru	equ	0xFF8
  1826                           tblptrh	equ	0xFF7
  1827                           tblptrl	equ	0xFF6
  1828                           tablat	equ	0xFF5
  1829                           prodh	equ	0xFF4
  1830                           prodl	equ	0xFF3
  1831                           wreg	equ	0xFE8
  1832                           indf1	equ	0xFE7
  1833                           fsr1h	equ	0xFE2
  1834                           fsr1l	equ	0xFE1
  1835                           indf2	equ	0xFDF
  1836                           postinc2	equ	0xFDE
  1837                           postdec2	equ	0xFDD
  1838                           fsr2h	equ	0xFDA
  1839                           fsr2l	equ	0xFD9
  1840                           status	equ	0xFD8
  1841                           
  1842 ;; *************** function _memset *****************
  1843 ;; Defined at:
  1844 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memset.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  p1              2   44[COMRAM] PTR void 
  1847 ;;		 -> main@buffer(16), 
  1848 ;;  c               2   46[COMRAM] int 
  1849 ;;  n               2   48[COMRAM] unsigned int 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;  p               2    0[BANK0 ] PTR unsigned char 
  1852 ;;		 -> main@buffer(16), 
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  2   44[COMRAM] PTR void 
  1855 ;; Registers used:
  1856 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1862 ;;      Params:         6       0       0       0       0       0       0       0       0
  1863 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1864 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1865 ;;      Totals:         6       2       0       0       0       0       0       0       0
  1866 ;;Total ram usage:        8 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; Hardware stack levels required when called:    5
  1869 ;; This function calls:
  1870 ;;		Nothing
  1871 ;; This function is called by:
  1872 ;;		_main
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           	psect	text6
  1877  0017A0                     __ptext6:
  1878                           	opt stack 0
  1879  0017A0                     _memset:
  1880                           	opt stack 25
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;incstack = 0
  1884  0017A0  0100               	movlb	0	; () banked
  1885  0017A2  C02E  F061         	movff	memset@p1+1,memset@p+1
  1886  0017A6  0100               	movlb	0	; () banked
  1887  0017A8  C02D  F060         	movff	memset@p1,memset@p
  1888  0017AC  D00A               	goto	l1798
  1889  0017AE                     l1794:
  1890  0017AE  C060  FFD9         	movff	memset@p,fsr2l
  1891  0017B2  C061  FFDA         	movff	memset@p+1,fsr2h
  1892  0017B6  C02F  FFDF         	movff	memset@c,indf2
  1893  0017BA  0100               	movlb	0	; () banked
  1894  0017BC  0100               	movlb	0	; () banked
  1895  0017BE  4B60               	infsnz	memset@p& (0+255),f,b
  1896  0017C0  2B61               	incf	(memset@p+1)& (0+255),f,b
  1897  0017C2                     l1798:
  1898                           
  1899                           ; BSR set to: 0
  1900  0017C2  0631               	decf	memset@n,f,c
  1901  0017C4  A0D8               	btfss	status,0,c
  1902  0017C6  0632               	decf	memset@n+1,f,c
  1903  0017C8  2831               	incf	memset@n& (0+255),w,c
  1904  0017CA  B4D8               	btfsc	status,2,c
  1905  0017CC  2832               	incf	(memset@n+1)& (0+255),w,c
  1906  0017CE  B4D8               	btfsc	status,2,c
  1907                           
  1908                           ;	Return value of _memset is never used
  1909  0017D0  0012               	return	
  1910  0017D2  D7ED               	goto	l1794
  1911  0017D4                     __end_of_memset:
  1912                           	opt stack 0
  1913                           tblptru	equ	0xFF8
  1914                           tblptrh	equ	0xFF7
  1915                           tblptrl	equ	0xFF6
  1916                           tablat	equ	0xFF5
  1917                           prodh	equ	0xFF4
  1918                           prodl	equ	0xFF3
  1919                           wreg	equ	0xFE8
  1920                           indf1	equ	0xFE7
  1921                           fsr1h	equ	0xFE2
  1922                           fsr1l	equ	0xFE1
  1923                           indf2	equ	0xFDF
  1924                           postinc2	equ	0xFDE
  1925                           postdec2	equ	0xFDD
  1926                           fsr2h	equ	0xFDA
  1927                           fsr2l	equ	0xFD9
  1928                           status	equ	0xFD8
  1929                           
  1930 ;; *************** function _lcd_write_buffer *****************
  1931 ;; Defined at:
  1932 ;;		line 54 in file "lcd.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;  buffer          2    0[BANK0 ] PTR const unsigned char 
  1935 ;;		 -> main@buffer(16), STR_1(15), 
  1936 ;;  size            1    2[BANK0 ] unsigned char 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  pos             2    8[BANK0 ] int 
  1939 ;; Return value:  Size  Location     Type
  1940 ;;		None               void
  1941 ;; Registers used:
  1942 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1948 ;;      Params:         0       3       0       0       0       0       0       0       0
  1949 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1950 ;;      Temps:          0       3       0       0       0       0       0       0       0
  1951 ;;      Totals:         0      10       0       0       0       0       0       0       0
  1952 ;;Total ram usage:       10 bytes
  1953 ;; Hardware stack levels used:    1
  1954 ;; Hardware stack levels required when called:    7
  1955 ;; This function calls:
  1956 ;;		_lcd_write
  1957 ;; This function is called by:
  1958 ;;		_main
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           	psect	text7
  1963  0011F6                     __ptext7:
  1964                           	opt stack 0
  1965  0011F6                     _lcd_write_buffer:
  1966                           	opt stack 23
  1967                           
  1968                           ;lcd.c: 55: int pos = 0;
  1969                           
  1970                           ;incstack = 0
  1971  0011F6  0E00               	movlw	0
  1972  0011F8  0100               	movlb	0	; () banked
  1973  0011FA  0100               	movlb	0	; () banked
  1974  0011FC  6F69               	movwf	(lcd_write_buffer@pos+1)& (0+255),b
  1975  0011FE  0E00               	movlw	0
  1976  001200  0100               	movlb	0	; () banked
  1977  001202  6F68               	movwf	lcd_write_buffer@pos& (0+255),b
  1978                           
  1979                           ; BSR set to: 0
  1980                           ;lcd.c: 56: size = (size > 0x10) ? size = 0x10 : size;
  1981  001204  0E11               	movlw	17
  1982  001206  0100               	movlb	0	; () banked
  1983  001208  0100               	movlb	0	; () banked
  1984  00120A  5D62               	subwf	lcd_write_buffer@size& (0+255),w,b
  1985  00120C  A0D8               	btfss	status,0,c
  1986  00120E  D008               	goto	L2
  1987                           
  1988                           ; BSR set to: 0
  1989                           
  1990                           ; BSR set to: 0
  1991                           
  1992                           ; BSR set to: 0
  1993  001210  0100               	movlb	0	; () banked
  1994  001212  6F63               	movwf	??_lcd_write_buffer& (0+255),b
  1995  001214  0E10               	movlw	16
  1996  001216  0100               	movlb	0	; () banked
  1997  001218  0100               	movlb	0	; () banked
  1998  00121A  6F62               	movwf	lcd_write_buffer@size& (0+255),b
  1999  00121C  0100               	movlb	0	; () banked
  2000  00121E  5163               	movf	??_lcd_write_buffer& (0+255),w,b
  2001  001220                     L2:
  2002  001220  0100               	movlb	0	; () banked
  2003  001222  0100               	movlb	0	; () banked
  2004  001224  C062  F066         	movff	lcd_write_buffer@size,_lcd_write_buffer$577
  2005  001228  0100               	movlb	0	; () banked
  2006  00122A  0100               	movlb	0	; () banked
  2007  00122C  6B67               	clrf	(_lcd_write_buffer$577+1)& (0+255),b
  2008                           
  2009                           ; BSR set to: 0
  2010                           
  2011                           ; BSR set to: 0
  2012  00122E  C066  F062         	movff	_lcd_write_buffer$577,lcd_write_buffer@size
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;lcd.c: 57: for (pos = 0; pos < size; pos++)
  2016  001232  0E00               	movlw	0
  2017  001234  0100               	movlb	0	; () banked
  2018  001236  0100               	movlb	0	; () banked
  2019  001238  6F69               	movwf	(lcd_write_buffer@pos+1)& (0+255),b
  2020  00123A  0E00               	movlw	0
  2021  00123C  0100               	movlb	0	; () banked
  2022  00123E  6F68               	movwf	lcd_write_buffer@pos& (0+255),b
  2023  001240  D026               	goto	l1644
  2024  001242                     l1640:
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;lcd.c: 58: {
  2028                           ;lcd.c: 59: lcd_write(buffer[pos]);
  2029  001242  0100               	movlb	0	; () banked
  2030  001244  C060  F063         	movff	lcd_write_buffer@buffer,??_lcd_write_buffer
  2031  001248  0100               	movlb	0	; () banked
  2032  00124A  C061  F064         	movff	lcd_write_buffer@buffer+1,??_lcd_write_buffer+1
  2033  00124E  0100               	movlb	0	; () banked
  2034  001250  0100               	movlb	0	; () banked
  2035  001252  5168               	movf	lcd_write_buffer@pos& (0+255),w,b
  2036  001254  0100               	movlb	0	; () banked
  2037  001256  2763               	addwf	??_lcd_write_buffer& (0+255),f,b
  2038  001258  0100               	movlb	0	; () banked
  2039  00125A  0100               	movlb	0	; () banked
  2040  00125C  5169               	movf	(lcd_write_buffer@pos+1)& (0+255),w,b
  2041  00125E  0100               	movlb	0	; () banked
  2042  001260  2364               	addwfc	(??_lcd_write_buffer+1)& (0+255),f,b
  2043  001262  C063  FFF6         	movff	??_lcd_write_buffer,tblptrl
  2044  001266  C064  FFF7         	movff	??_lcd_write_buffer+1,tblptrh
  2045  00126A  6AF8               	clrf	tblptru,c
  2046  00126C  0E07               	movlw	(high __ramtop+-1)
  2047  00126E  64F7               	cpfsgt	tblptrh,c
  2048  001270  D003               	bra	u797
  2049  001272  0008               	tblrd		*
  2050  001274  50F5               	movf	tablat,w,c
  2051  001276  D005               	bra	u790
  2052  001278                     u797:
  2053  001278  CFF6 FFE9          	movff	tblptrl,fsr0l
  2054  00127C  CFF7 FFEA          	movff	tblptrh,fsr0h
  2055  001280  50EF               	movf	indf0,w,c
  2056  001282                     u790:
  2057  001282  EC23  F00C         	call	_lcd_write
  2058  001286  0100               	movlb	0	; () banked
  2059  001288  0100               	movlb	0	; () banked
  2060  00128A  4B68               	infsnz	lcd_write_buffer@pos& (0+255),f,b
  2061  00128C  2B69               	incf	(lcd_write_buffer@pos+1)& (0+255),f,b
  2062  00128E                     l1644:
  2063                           
  2064                           ; BSR set to: 0
  2065  00128E  0100               	movlb	0	; () banked
  2066  001290  0100               	movlb	0	; () banked
  2067  001292  5162               	movf	lcd_write_buffer@size& (0+255),w,b
  2068  001294  0100               	movlb	0	; () banked
  2069  001296  6F63               	movwf	??_lcd_write_buffer& (0+255),b
  2070  001298  6B64               	clrf	(??_lcd_write_buffer+1)& (0+255),b
  2071  00129A  0100               	movlb	0	; () banked
  2072  00129C  0100               	movlb	0	; () banked
  2073  00129E  5169               	movf	(lcd_write_buffer@pos+1)& (0+255),w,b
  2074  0012A0  0A80               	xorlw	128
  2075  0012A2  0100               	movlb	0	; () banked
  2076  0012A4  6F65               	movwf	(??_lcd_write_buffer+2)& (0+255),b
  2077  0012A6  5163               	movf	??_lcd_write_buffer& (0+255),w,b
  2078  0012A8  0100               	movlb	0	; () banked
  2079  0012AA  0100               	movlb	0	; () banked
  2080  0012AC  5D68               	subwf	lcd_write_buffer@pos& (0+255),w,b
  2081  0012AE  0100               	movlb	0	; () banked
  2082  0012B0  5164               	movf	(??_lcd_write_buffer+1)& (0+255),w,b
  2083  0012B2  0A80               	xorlw	128
  2084  0012B4  0100               	movlb	0	; () banked
  2085  0012B6  5965               	subwfb	(??_lcd_write_buffer+2)& (0+255),w,b
  2086  0012B8  B0D8               	btfsc	status,0,c
  2087                           
  2088                           ; BSR set to: 0
  2089                           
  2090                           ; BSR set to: 0
  2091  0012BA  0012               	return	
  2092  0012BC  D7C2               	goto	l1640
  2093  0012BE                     __end_of_lcd_write_buffer:
  2094                           	opt stack 0
  2095                           tblptru	equ	0xFF8
  2096                           tblptrh	equ	0xFF7
  2097                           tblptrl	equ	0xFF6
  2098                           tablat	equ	0xFF5
  2099                           prodh	equ	0xFF4
  2100                           prodl	equ	0xFF3
  2101                           indf0	equ	0xFEF
  2102                           fsr0h	equ	0xFEA
  2103                           fsr0l	equ	0xFE9
  2104                           wreg	equ	0xFE8
  2105                           indf1	equ	0xFE7
  2106                           fsr1h	equ	0xFE2
  2107                           fsr1l	equ	0xFE1
  2108                           indf2	equ	0xFDF
  2109                           postinc2	equ	0xFDE
  2110                           postdec2	equ	0xFDD
  2111                           fsr2h	equ	0xFDA
  2112                           fsr2l	equ	0xFD9
  2113                           status	equ	0xFD8
  2114                           
  2115 ;; *************** function _lcd_test *****************
  2116 ;; Defined at:
  2117 ;;		line 22 in file "lcd.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;		None
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  msgTest        16    0[BANK0 ] const unsigned char [16]
  2122 ;;  pos             2   18[BANK0 ] int 
  2123 ;;  ln              2   16[BANK0 ] int 
  2124 ;; Return value:  Size  Location     Type
  2125 ;;		None               void
  2126 ;; Registers used:
  2127 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2133 ;;      Params:         0       0       0       0       0       0       0       0       0
  2134 ;;      Locals:         0      20       0       0       0       0       0       0       0
  2135 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2136 ;;      Totals:         1      20       0       0       0       0       0       0       0
  2137 ;;Total ram usage:       21 bytes
  2138 ;; Hardware stack levels used:    1
  2139 ;; Hardware stack levels required when called:    8
  2140 ;; This function calls:
  2141 ;;		_lcd_pos
  2142 ;;		_lcd_write
  2143 ;; This function is called by:
  2144 ;;		_main
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           	psect	text8
  2149  001376                     __ptext8:
  2150                           	opt stack 0
  2151  001376                     _lcd_test:
  2152                           	opt stack 22
  2153                           
  2154                           ;lcd.c: 23: int ln;
  2155                           ;lcd.c: 24: int pos;
  2156                           ;lcd.c: 25: const char msgTest[ ] = {'T', 'E', 'S', 'T', 'E', 'T', 'E', 'S', 'T', 'E', '
      +                          T', 'E', 'S', 'T', 'E', '.'};
  2157                           
  2158                           ; BSR set to: 0
  2159                           ;incstack = 0
  2160  001376  0E01               	movlw	low lcd_test@F5275
  2161  001378  6EF6               	movwf	tblptrl,c
  2162  00137A  0E08               	movlw	high lcd_test@F5275
  2163  00137C  6EF7               	movwf	tblptrh,c
  2164  00137E  EE20  F060         	lfsr	2,lcd_test@msgTest
  2165  001382  0E10               	movlw	16
  2166  001384                     u830:
  2167  001384  0009               	tblrd		*+
  2168  001386  CFF5 FFDE          	movff	tablat,postinc2
  2169  00138A  2EE8               	decfsz	wreg,f,c
  2170  00138C  D7FB               	bra	u830
  2171                           
  2172                           ;lcd.c: 27: for (ln = 1; ln < 3; ln++) {
  2173  00138E  0E00               	movlw	0
  2174  001390  0100               	movlb	0	; () banked
  2175  001392  0100               	movlb	0	; () banked
  2176  001394  6F71               	movwf	(lcd_test@ln+1)& (0+255),b
  2177  001396  0E01               	movlw	1
  2178  001398  0100               	movlb	0	; () banked
  2179  00139A  6F70               	movwf	lcd_test@ln& (0+255),b
  2180  00139C                     
  2181                           ; BSR set to: 0
  2182  00139C  0100               	movlb	0	; () banked
  2183  00139E  0100               	movlb	0	; () banked
  2184  0013A0  5171               	movf	(lcd_test@ln+1)& (0+255),w,b
  2185  0013A2  0A80               	xorlw	128
  2186  0013A4  0F80               	addlw	-128
  2187  0013A6  0E03               	movlw	3
  2188  0013A8  B4D8               	btfsc	status,2,c
  2189  0013AA  5D70               	subwf	lcd_test@ln& (0+255),w,b
  2190  0013AC  B0D8               	btfsc	status,0,c
  2191  0013AE  D033               	goto	l129
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;lcd.c: 28: lcd_pos(ln, 1);
  2195                           
  2196                           ; BSR set to: 0
  2197                           
  2198                           ; BSR set to: 0
  2199  0013B0  6E32               	movwf	??_lcd_test& (0+255),c
  2200  0013B2  0E01               	movlw	1
  2201  0013B4  6E2F               	movwf	lcd_pos@coluna,c
  2202  0013B6  5032               	movf	??_lcd_test& (0+255),w,c
  2203  0013B8  0100               	movlb	0	; () banked
  2204  0013BA  0100               	movlb	0	; () banked
  2205  0013BC  5170               	movf	lcd_test@ln& (0+255),w,b
  2206  0013BE  ECB3  F00B         	call	_lcd_pos
  2207                           
  2208                           ;lcd.c: 29: for (pos = 0; pos < 0x10; pos++)
  2209  0013C2  0E00               	movlw	0
  2210  0013C4  0100               	movlb	0	; () banked
  2211  0013C6  0100               	movlb	0	; () banked
  2212  0013C8  6F73               	movwf	(lcd_test@pos+1)& (0+255),b
  2213  0013CA  0E00               	movlw	0
  2214  0013CC  0100               	movlb	0	; () banked
  2215  0013CE  6F72               	movwf	lcd_test@pos& (0+255),b
  2216  0013D0                     
  2217                           ; BSR set to: 0
  2218  0013D0  0100               	movlb	0	; () banked
  2219  0013D2  0100               	movlb	0	; () banked
  2220  0013D4  5173               	movf	(lcd_test@pos+1)& (0+255),w,b
  2221  0013D6  0A80               	xorlw	128
  2222  0013D8  0F80               	addlw	-128
  2223  0013DA  0E10               	movlw	16
  2224  0013DC  B4D8               	btfsc	status,2,c
  2225  0013DE  5D72               	subwf	lcd_test@pos& (0+255),w,b
  2226  0013E0  B0D8               	btfsc	status,0,c
  2227  0013E2  D014               	goto	l1762
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;lcd.c: 30: {
  2231                           ;lcd.c: 31: lcd_write(msgTest[pos]);
  2232                           
  2233                           ; BSR set to: 0
  2234                           
  2235                           ; BSR set to: 0
  2236  0013E4  0100               	movlb	0	; () banked
  2237  0013E6  0E60               	movlw	low lcd_test@msgTest
  2238  0013E8  0100               	movlb	0	; () banked
  2239  0013EA  0100               	movlb	0	; () banked
  2240  0013EC  2572               	addwf	lcd_test@pos& (0+255),w,b
  2241  0013EE  6ED9               	movwf	fsr2l,c
  2242  0013F0  0100               	movlb	0	; () banked
  2243  0013F2  0E00               	movlw	high lcd_test@msgTest
  2244  0013F4  0100               	movlb	0	; () banked
  2245  0013F6  0100               	movlb	0	; () banked
  2246  0013F8  2173               	addwfc	(lcd_test@pos+1)& (0+255),w,b
  2247  0013FA  6EDA               	movwf	fsr2h,c
  2248  0013FC  50DF               	movf	indf2,w,c
  2249  0013FE  EC23  F00C         	call	_lcd_write
  2250  001402  0100               	movlb	0	; () banked
  2251  001404  0100               	movlb	0	; () banked
  2252  001406  4B72               	infsnz	lcd_test@pos& (0+255),f,b
  2253  001408  2B73               	incf	(lcd_test@pos+1)& (0+255),f,b
  2254  00140A  D7E2               	goto	L3
  2255  00140C                     l1762:
  2256                           
  2257                           ; BSR set to: 0
  2258  00140C  0100               	movlb	0	; () banked
  2259  00140E  0100               	movlb	0	; () banked
  2260  001410  4B70               	infsnz	lcd_test@ln& (0+255),f,b
  2261  001412  2B71               	incf	(lcd_test@ln+1)& (0+255),f,b
  2262  001414  D7C3               	goto	L4
  2263  001416                     l129:
  2264                           
  2265                           ; BSR set to: 0
  2266  001416  0012               	return	
  2267  001418                     __end_of_lcd_test:
  2268                           	opt stack 0
  2269                           tblptru	equ	0xFF8
  2270                           tblptrh	equ	0xFF7
  2271                           tblptrl	equ	0xFF6
  2272                           tablat	equ	0xFF5
  2273                           prodh	equ	0xFF4
  2274                           prodl	equ	0xFF3
  2275                           indf0	equ	0xFEF
  2276                           fsr0h	equ	0xFEA
  2277                           fsr0l	equ	0xFE9
  2278                           wreg	equ	0xFE8
  2279                           indf1	equ	0xFE7
  2280                           fsr1h	equ	0xFE2
  2281                           fsr1l	equ	0xFE1
  2282                           indf2	equ	0xFDF
  2283                           postinc2	equ	0xFDE
  2284                           postdec2	equ	0xFDD
  2285                           fsr2h	equ	0xFDA
  2286                           fsr2l	equ	0xFD9
  2287                           status	equ	0xFD8
  2288                           
  2289 ;; *************** function _lcd_write *****************
  2290 ;; Defined at:
  2291 ;;		line 36 in file "lcd.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;  x               1    wreg     unsigned char 
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;  x               1   45[COMRAM] unsigned char 
  2296 ;; Return value:  Size  Location     Type
  2297 ;;		None               void
  2298 ;; Registers used:
  2299 ;;		wreg, cstack
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2305 ;;      Params:         0       0       0       0       0       0       0       0       0
  2306 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2307 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2308 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2309 ;;Total ram usage:        1 bytes
  2310 ;; Hardware stack levels used:    1
  2311 ;; Hardware stack levels required when called:    6
  2312 ;; This function calls:
  2313 ;;		_lcd_delay
  2314 ;; This function is called by:
  2315 ;;		_lcd_test
  2316 ;;		_lcd_write_buffer
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           	psect	text9
  2321  001846                     __ptext9:
  2322                           	opt stack 0
  2323  001846                     _lcd_write:
  2324                           	opt stack 23
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;incstack = 0
  2328                           ;lcd_write@x stored from wreg
  2329  001846  CFE8 F02E          	movff	wreg,lcd_write@x
  2330                           
  2331                           ;lcd.c: 37: PORTD = x;
  2332  00184A  C02E  FF83         	movff	lcd_write@x,3971	;volatile
  2333                           
  2334                           ;lcd.c: 38: PORTAbits.RA1 = 1;
  2335  00184E  8280               	bsf	3968,1,c	;volatile
  2336                           
  2337                           ;lcd.c: 39: PORTAbits.RA2 = 0;
  2338  001850  9480               	bcf	3968,2,c	;volatile
  2339                           
  2340                           ;lcd.c: 40: PORTAbits.RA3 = 0;
  2341  001852  9680               	bcf	3968,3,c	;volatile
  2342                           
  2343                           ;lcd.c: 41: lcd_delay();
  2344  001854  EC4F  F00C         	call	_lcd_delay	;wreg free
  2345                           
  2346                           ;lcd.c: 42: PORTAbits.RA3 = 1;
  2347  001858  8680               	bsf	3968,3,c	;volatile
  2348  00185A  0012               	return	
  2349  00185C                     __end_of_lcd_write:
  2350                           	opt stack 0
  2351                           tblptru	equ	0xFF8
  2352                           tblptrh	equ	0xFF7
  2353                           tblptrl	equ	0xFF6
  2354                           tablat	equ	0xFF5
  2355                           prodh	equ	0xFF4
  2356                           prodl	equ	0xFF3
  2357                           indf0	equ	0xFEF
  2358                           fsr0h	equ	0xFEA
  2359                           fsr0l	equ	0xFE9
  2360                           wreg	equ	0xFE8
  2361                           indf1	equ	0xFE7
  2362                           fsr1h	equ	0xFE2
  2363                           fsr1l	equ	0xFE1
  2364                           indf2	equ	0xFDF
  2365                           postinc2	equ	0xFDE
  2366                           postdec2	equ	0xFDD
  2367                           fsr2h	equ	0xFDA
  2368                           fsr2l	equ	0xFD9
  2369                           status	equ	0xFD8
  2370                           
  2371 ;; *************** function _lcd_pos *****************
  2372 ;; Defined at:
  2373 ;;		line 71 in file "lcd.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;  linha           1    wreg     unsigned char 
  2376 ;;  coluna          1   46[COMRAM] unsigned char 
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;  linha           1   48[COMRAM] unsigned char 
  2379 ;; Return value:  Size  Location     Type
  2380 ;;		None               void
  2381 ;; Registers used:
  2382 ;;		wreg, status,2, status,0, cstack
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2388 ;;      Params:         1       0       0       0       0       0       0       0       0
  2389 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2390 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2391 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2392 ;;Total ram usage:        3 bytes
  2393 ;; Hardware stack levels used:    1
  2394 ;; Hardware stack levels required when called:    7
  2395 ;; This function calls:
  2396 ;;		_lcd_write_cmd
  2397 ;; This function is called by:
  2398 ;;		_main
  2399 ;;		_lcd_test
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text10
  2404  001766                     __ptext10:
  2405                           	opt stack 0
  2406  001766                     _lcd_pos:
  2407                           	opt stack 22
  2408                           
  2409                           ;incstack = 0
  2410                           ;lcd_pos@linha stored from wreg
  2411  001766  CFE8 F031          	movff	wreg,lcd_pos@linha
  2412                           
  2413                           ;lcd.c: 73: if (linha <= 1) {
  2414  00176A  0E02               	movlw	2
  2415  00176C  5C31               	subwf	lcd_pos@linha,w,c
  2416  00176E  B0D8               	btfsc	status,0,c
  2417  001770  D003               	goto	l1770
  2418                           
  2419                           ;lcd.c: 74: linha = 0x80;
  2420  001772  6E30               	movwf	??_lcd_pos& (0+255),c
  2421  001774  0E80               	movlw	128
  2422  001776  D005               	goto	L5
  2423  001778                     l1770:
  2424                           
  2425                           ;lcd.c: 76: if (linha >= 2) {
  2426  001778  0E01               	movlw	1
  2427  00177A  6431               	cpfsgt	lcd_pos@linha,c
  2428  00177C  D004               	goto	l1774
  2429                           
  2430                           ;lcd.c: 77: linha = 0xC0;
  2431  00177E  6E30               	movwf	??_lcd_pos& (0+255),c
  2432  001780  0EC0               	movlw	192
  2433  001782                     L5:
  2434  001782  6E31               	movwf	lcd_pos@linha,c
  2435  001784  5030               	movf	??_lcd_pos& (0+255),w,c
  2436  001786                     l1774:
  2437                           
  2438                           ;lcd.c: 78: }
  2439                           ;lcd.c: 79: }
  2440                           ;lcd.c: 81: if ((coluna > 1) && (coluna <= 16)) linha += coluna;
  2441  001786  0E01               	movlw	1
  2442  001788  642F               	cpfsgt	lcd_pos@coluna,c
  2443  00178A  D006               	goto	l1780
  2444  00178C  0E11               	movlw	17
  2445  00178E  5C2F               	subwf	lcd_pos@coluna,w,c
  2446  001790  B0D8               	btfsc	status,0,c
  2447  001792  D002               	goto	l1780
  2448  001794  502F               	movf	lcd_pos@coluna,w,c
  2449  001796  2631               	addwf	lcd_pos@linha,f,c
  2450  001798                     l1780:
  2451                           
  2452                           ;lcd.c: 82: lcd_write_cmd(linha);
  2453  001798  5031               	movf	lcd_pos@linha,w,c
  2454  00179A  EC2E  F00C         	call	_lcd_write_cmd
  2455  00179E  0012               	return	
  2456  0017A0                     __end_of_lcd_pos:
  2457                           	opt stack 0
  2458                           tblptru	equ	0xFF8
  2459                           tblptrh	equ	0xFF7
  2460                           tblptrl	equ	0xFF6
  2461                           tablat	equ	0xFF5
  2462                           prodh	equ	0xFF4
  2463                           prodl	equ	0xFF3
  2464                           indf0	equ	0xFEF
  2465                           fsr0h	equ	0xFEA
  2466                           fsr0l	equ	0xFE9
  2467                           wreg	equ	0xFE8
  2468                           indf1	equ	0xFE7
  2469                           fsr1h	equ	0xFE2
  2470                           fsr1l	equ	0xFE1
  2471                           indf2	equ	0xFDF
  2472                           postinc2	equ	0xFDE
  2473                           postdec2	equ	0xFDD
  2474                           fsr2h	equ	0xFDA
  2475                           fsr2l	equ	0xFD9
  2476                           status	equ	0xFD8
  2477                           
  2478 ;; *************** function _lcd_init *****************
  2479 ;; Defined at:
  2480 ;;		line 3 in file "lcd.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;		None
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;		None
  2485 ;; Return value:  Size  Location     Type
  2486 ;;		None               void
  2487 ;; Registers used:
  2488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2494 ;;      Params:         0       0       0       0       0       0       0       0       0
  2495 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2496 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2497 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2498 ;;Total ram usage:        1 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; Hardware stack levels required when called:    7
  2501 ;; This function calls:
  2502 ;;		_lcd_enable
  2503 ;; This function is called by:
  2504 ;;		_main
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           	psect	text11
  2509  0016EA                     __ptext11:
  2510                           	opt stack 0
  2511  0016EA                     _lcd_init:
  2512                           	opt stack 23
  2513                           
  2514                           ;lcd.c: 4: TRISAbits.RA1 = 0;
  2515                           
  2516                           ;incstack = 0
  2517  0016EA  9292               	bcf	3986,1,c	;volatile
  2518                           
  2519                           ;lcd.c: 5: TRISAbits.RA2 = 0;
  2520  0016EC  9492               	bcf	3986,2,c	;volatile
  2521                           
  2522                           ;lcd.c: 6: TRISAbits.RA3 = 0;
  2523  0016EE  9692               	bcf	3986,3,c	;volatile
  2524                           
  2525                           ;lcd.c: 7: TRISD = 0X00;
  2526  0016F0  0E00               	movlw	0
  2527  0016F2  6E95               	movwf	3989,c	;volatile
  2528                           
  2529                           ;lcd.c: 9: _delay((unsigned long)((20)*(20000000L/4000.0)));
  2530  0016F4  0E82               	movlw	130
  2531  0016F6  6E2E               	movwf	??_lcd_init& (0+255),c
  2532  0016F8  0EDE               	movlw	222
  2533  0016FA                     u1497:
  2534  0016FA  2EE8               	decfsz	wreg,f,c
  2535  0016FC  D7FE               	goto	u1497
  2536  0016FE  2E2E               	decfsz	??_lcd_init& (0+255),f,c
  2537  001700  D7FC               	goto	u1497
  2538                           
  2539                           ;lcd.c: 10: PORTD = 0X1;
  2540  001702  0E01               	movlw	1
  2541  001704  6E83               	movwf	3971,c	;volatile
  2542                           
  2543                           ;lcd.c: 11: lcd_enable();
  2544  001706  EC5F  F00C         	call	_lcd_enable	;wreg free
  2545                           
  2546                           ;lcd.c: 12: PORTD = 0X38;
  2547  00170A  0E38               	movlw	56
  2548  00170C  6E83               	movwf	3971,c	;volatile
  2549                           
  2550                           ;lcd.c: 13: lcd_enable();
  2551  00170E  EC5F  F00C         	call	_lcd_enable	;wreg free
  2552                           
  2553                           ;lcd.c: 14: PORTD = 0X0e;
  2554  001712  0E0E               	movlw	14
  2555  001714  6E83               	movwf	3971,c	;volatile
  2556                           
  2557                           ;lcd.c: 15: lcd_enable();
  2558  001716  EC5F  F00C         	call	_lcd_enable	;wreg free
  2559                           
  2560                           ;lcd.c: 16: PORTD = 0X06;
  2561  00171A  0E06               	movlw	6
  2562  00171C  6E83               	movwf	3971,c	;volatile
  2563                           
  2564                           ;lcd.c: 17: lcd_enable();
  2565  00171E  EC5F  F00C         	call	_lcd_enable	;wreg free
  2566                           
  2567                           ;lcd.c: 18: PORTD = 0X80;
  2568  001722  0E80               	movlw	128
  2569  001724  6E83               	movwf	3971,c	;volatile
  2570                           
  2571                           ;lcd.c: 19: lcd_enable();
  2572  001726  EC5F  F00C         	call	_lcd_enable	;wreg free
  2573  00172A  0012               	return	
  2574  00172C                     __end_of_lcd_init:
  2575                           	opt stack 0
  2576                           tblptru	equ	0xFF8
  2577                           tblptrh	equ	0xFF7
  2578                           tblptrl	equ	0xFF6
  2579                           tablat	equ	0xFF5
  2580                           prodh	equ	0xFF4
  2581                           prodl	equ	0xFF3
  2582                           indf0	equ	0xFEF
  2583                           fsr0h	equ	0xFEA
  2584                           fsr0l	equ	0xFE9
  2585                           wreg	equ	0xFE8
  2586                           indf1	equ	0xFE7
  2587                           fsr1h	equ	0xFE2
  2588                           fsr1l	equ	0xFE1
  2589                           indf2	equ	0xFDF
  2590                           postinc2	equ	0xFDE
  2591                           postdec2	equ	0xFDD
  2592                           fsr2h	equ	0xFDA
  2593                           fsr2l	equ	0xFD9
  2594                           status	equ	0xFD8
  2595                           
  2596 ;; *************** function _lcd_enable *****************
  2597 ;; Defined at:
  2598 ;;		line 63 in file "lcd.c"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;		None
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;		None
  2603 ;; Return value:  Size  Location     Type
  2604 ;;		None               void
  2605 ;; Registers used:
  2606 ;;		wreg, cstack
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2612 ;;      Params:         0       0       0       0       0       0       0       0       0
  2613 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2614 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2615 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2616 ;;Total ram usage:        0 bytes
  2617 ;; Hardware stack levels used:    1
  2618 ;; Hardware stack levels required when called:    6
  2619 ;; This function calls:
  2620 ;;		_lcd_delay
  2621 ;; This function is called by:
  2622 ;;		_main
  2623 ;;		_lcd_init
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           	psect	text12
  2628  0018BE                     __ptext12:
  2629                           	opt stack 0
  2630  0018BE                     _lcd_enable:
  2631                           	opt stack 23
  2632                           
  2633                           ;lcd.c: 64: PORTAbits.RA1 = 0;
  2634                           
  2635                           ;incstack = 0
  2636  0018BE  9280               	bcf	3968,1,c	;volatile
  2637                           
  2638                           ;lcd.c: 65: PORTAbits.RA2 = 0;
  2639  0018C0  9480               	bcf	3968,2,c	;volatile
  2640                           
  2641                           ;lcd.c: 66: PORTAbits.RA3 = 0;
  2642  0018C2  9680               	bcf	3968,3,c	;volatile
  2643                           
  2644                           ;lcd.c: 67: lcd_delay();
  2645  0018C4  EC4F  F00C         	call	_lcd_delay	;wreg free
  2646                           
  2647                           ;lcd.c: 68: PORTAbits.RA3 = 1;
  2648  0018C8  8680               	bsf	3968,3,c	;volatile
  2649  0018CA  0012               	return	
  2650  0018CC                     __end_of_lcd_enable:
  2651                           	opt stack 0
  2652                           tblptru	equ	0xFF8
  2653                           tblptrh	equ	0xFF7
  2654                           tblptrl	equ	0xFF6
  2655                           tablat	equ	0xFF5
  2656                           prodh	equ	0xFF4
  2657                           prodl	equ	0xFF3
  2658                           indf0	equ	0xFEF
  2659                           fsr0h	equ	0xFEA
  2660                           fsr0l	equ	0xFE9
  2661                           wreg	equ	0xFE8
  2662                           indf1	equ	0xFE7
  2663                           fsr1h	equ	0xFE2
  2664                           fsr1l	equ	0xFE1
  2665                           indf2	equ	0xFDF
  2666                           postinc2	equ	0xFDE
  2667                           postdec2	equ	0xFDD
  2668                           fsr2h	equ	0xFDA
  2669                           fsr2l	equ	0xFD9
  2670                           status	equ	0xFD8
  2671                           
  2672 ;; *************** function _lcd_cursor_off *****************
  2673 ;; Defined at:
  2674 ;;		line 93 in file "lcd.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;		None
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;		None
  2679 ;; Return value:  Size  Location     Type
  2680 ;;		None               void
  2681 ;; Registers used:
  2682 ;;		wreg, cstack
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2688 ;;      Params:         0       0       0       0       0       0       0       0       0
  2689 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2690 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2691 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2692 ;;Total ram usage:        0 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:    7
  2695 ;; This function calls:
  2696 ;;		_lcd_write_cmd
  2697 ;; This function is called by:
  2698 ;;		_main
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           	psect	text13
  2703  0018EC                     __ptext13:
  2704                           	opt stack 0
  2705  0018EC                     _lcd_cursor_off:
  2706                           	opt stack 23
  2707                           
  2708                           ;lcd.c: 94: lcd_write_cmd(0x0C);
  2709                           
  2710                           ;incstack = 0
  2711  0018EC  0E0C               	movlw	12
  2712  0018EE  EC2E  F00C         	call	_lcd_write_cmd
  2713  0018F2  0012               	return	
  2714  0018F4                     __end_of_lcd_cursor_off:
  2715                           	opt stack 0
  2716                           tblptru	equ	0xFF8
  2717                           tblptrh	equ	0xFF7
  2718                           tblptrl	equ	0xFF6
  2719                           tablat	equ	0xFF5
  2720                           prodh	equ	0xFF4
  2721                           prodl	equ	0xFF3
  2722                           indf0	equ	0xFEF
  2723                           fsr0h	equ	0xFEA
  2724                           fsr0l	equ	0xFE9
  2725                           wreg	equ	0xFE8
  2726                           indf1	equ	0xFE7
  2727                           fsr1h	equ	0xFE2
  2728                           fsr1l	equ	0xFE1
  2729                           indf2	equ	0xFDF
  2730                           postinc2	equ	0xFDE
  2731                           postdec2	equ	0xFDD
  2732                           fsr2h	equ	0xFDA
  2733                           fsr2l	equ	0xFD9
  2734                           status	equ	0xFD8
  2735                           
  2736 ;; *************** function _lcd_clear *****************
  2737 ;; Defined at:
  2738 ;;		line 89 in file "lcd.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;		None
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;		None
  2743 ;; Return value:  Size  Location     Type
  2744 ;;		None               void
  2745 ;; Registers used:
  2746 ;;		wreg, cstack
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2752 ;;      Params:         0       0       0       0       0       0       0       0       0
  2753 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2754 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2755 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2756 ;;Total ram usage:        0 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; Hardware stack levels required when called:    7
  2759 ;; This function calls:
  2760 ;;		_lcd_write_cmd
  2761 ;; This function is called by:
  2762 ;;		_main
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           	psect	text14
  2767  0018F4                     __ptext14:
  2768                           	opt stack 0
  2769  0018F4                     _lcd_clear:
  2770                           	opt stack 23
  2771                           
  2772                           ;lcd.c: 90: lcd_write_cmd(0x01);
  2773                           
  2774                           ;incstack = 0
  2775  0018F4  0E01               	movlw	1
  2776  0018F6  EC2E  F00C         	call	_lcd_write_cmd
  2777  0018FA  0012               	return	
  2778  0018FC                     __end_of_lcd_clear:
  2779                           	opt stack 0
  2780                           tblptru	equ	0xFF8
  2781                           tblptrh	equ	0xFF7
  2782                           tblptrl	equ	0xFF6
  2783                           tablat	equ	0xFF5
  2784                           prodh	equ	0xFF4
  2785                           prodl	equ	0xFF3
  2786                           indf0	equ	0xFEF
  2787                           fsr0h	equ	0xFEA
  2788                           fsr0l	equ	0xFE9
  2789                           wreg	equ	0xFE8
  2790                           indf1	equ	0xFE7
  2791                           fsr1h	equ	0xFE2
  2792                           fsr1l	equ	0xFE1
  2793                           indf2	equ	0xFDF
  2794                           postinc2	equ	0xFDE
  2795                           postdec2	equ	0xFDD
  2796                           fsr2h	equ	0xFDA
  2797                           fsr2l	equ	0xFD9
  2798                           status	equ	0xFD8
  2799                           
  2800 ;; *************** function _lcd_write_cmd *****************
  2801 ;; Defined at:
  2802 ;;		line 45 in file "lcd.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;  x               1    wreg     unsigned char 
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;  x               1   45[COMRAM] unsigned char 
  2807 ;; Return value:  Size  Location     Type
  2808 ;;		None               void
  2809 ;; Registers used:
  2810 ;;		wreg, cstack
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2816 ;;      Params:         0       0       0       0       0       0       0       0       0
  2817 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2818 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2819 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2820 ;;Total ram usage:        1 bytes
  2821 ;; Hardware stack levels used:    1
  2822 ;; Hardware stack levels required when called:    6
  2823 ;; This function calls:
  2824 ;;		_lcd_delay
  2825 ;; This function is called by:
  2826 ;;		_lcd_pos
  2827 ;;		_lcd_clear
  2828 ;;		_lcd_cursor_off
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           	psect	text15
  2833  00185C                     __ptext15:
  2834                           	opt stack 0
  2835  00185C                     _lcd_write_cmd:
  2836                           	opt stack 22
  2837                           
  2838                           ;incstack = 0
  2839                           ;lcd_write_cmd@x stored from wreg
  2840  00185C  CFE8 F02E          	movff	wreg,lcd_write_cmd@x
  2841                           
  2842                           ;lcd.c: 46: PORTD = x;
  2843  001860  C02E  FF83         	movff	lcd_write_cmd@x,3971	;volatile
  2844                           
  2845                           ;lcd.c: 47: PORTAbits.RA1 = 0;
  2846  001864  9280               	bcf	3968,1,c	;volatile
  2847                           
  2848                           ;lcd.c: 48: PORTAbits.RA2 = 0;
  2849  001866  9480               	bcf	3968,2,c	;volatile
  2850                           
  2851                           ;lcd.c: 49: PORTAbits.RA3 = 0;
  2852  001868  9680               	bcf	3968,3,c	;volatile
  2853                           
  2854                           ;lcd.c: 50: lcd_delay();
  2855  00186A  EC4F  F00C         	call	_lcd_delay	;wreg free
  2856                           
  2857                           ;lcd.c: 51: PORTAbits.RA3 = 1;
  2858  00186E  8680               	bsf	3968,3,c	;volatile
  2859  001870  0012               	return	
  2860  001872                     __end_of_lcd_write_cmd:
  2861                           	opt stack 0
  2862                           tblptru	equ	0xFF8
  2863                           tblptrh	equ	0xFF7
  2864                           tblptrl	equ	0xFF6
  2865                           tablat	equ	0xFF5
  2866                           prodh	equ	0xFF4
  2867                           prodl	equ	0xFF3
  2868                           indf0	equ	0xFEF
  2869                           fsr0h	equ	0xFEA
  2870                           fsr0l	equ	0xFE9
  2871                           wreg	equ	0xFE8
  2872                           indf1	equ	0xFE7
  2873                           fsr1h	equ	0xFE2
  2874                           fsr1l	equ	0xFE1
  2875                           indf2	equ	0xFDF
  2876                           postinc2	equ	0xFDE
  2877                           postdec2	equ	0xFDD
  2878                           fsr2h	equ	0xFDA
  2879                           fsr2l	equ	0xFD9
  2880                           status	equ	0xFD8
  2881                           
  2882 ;; *************** function _lcd_delay *****************
  2883 ;; Defined at:
  2884 ;;		line 85 in file "lcd.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;		None
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;		None
  2889 ;; Return value:  Size  Location     Type
  2890 ;;		None               void
  2891 ;; Registers used:
  2892 ;;		wreg
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2898 ;;      Params:         0       0       0       0       0       0       0       0       0
  2899 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2900 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2901 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2902 ;;Total ram usage:        1 bytes
  2903 ;; Hardware stack levels used:    1
  2904 ;; Hardware stack levels required when called:    5
  2905 ;; This function calls:
  2906 ;;		Nothing
  2907 ;; This function is called by:
  2908 ;;		_lcd_write
  2909 ;;		_lcd_write_cmd
  2910 ;;		_lcd_enable
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           	psect	text16
  2915  00189E                     __ptext16:
  2916                           	opt stack 0
  2917  00189E                     _lcd_delay:
  2918                           	opt stack 23
  2919                           
  2920                           ;lcd.c: 86: _delay((unsigned long)((2)*(20000000L/4000.0)));
  2921                           
  2922                           ;incstack = 0
  2923  00189E  0E0D               	movlw	13
  2924  0018A0  6E2D               	movwf	??_lcd_delay& (0+255),c
  2925  0018A2  0EFC               	movlw	252
  2926  0018A4                     u1507:
  2927  0018A4  2EE8               	decfsz	wreg,f,c
  2928  0018A6  D7FE               	goto	u1507
  2929  0018A8  2E2D               	decfsz	??_lcd_delay& (0+255),f,c
  2930  0018AA  D7FC               	goto	u1507
  2931  0018AC  0012               	return	
  2932  0018AE                     __end_of_lcd_delay:
  2933                           	opt stack 0
  2934                           tblptru	equ	0xFF8
  2935                           tblptrh	equ	0xFF7
  2936                           tblptrl	equ	0xFF6
  2937                           tablat	equ	0xFF5
  2938                           prodh	equ	0xFF4
  2939                           prodl	equ	0xFF3
  2940                           indf0	equ	0xFEF
  2941                           fsr0h	equ	0xFEA
  2942                           fsr0l	equ	0xFE9
  2943                           wreg	equ	0xFE8
  2944                           indf1	equ	0xFE7
  2945                           fsr1h	equ	0xFE2
  2946                           fsr1l	equ	0xFE1
  2947                           indf2	equ	0xFDF
  2948                           postinc2	equ	0xFDE
  2949                           postdec2	equ	0xFDD
  2950                           fsr2h	equ	0xFDA
  2951                           fsr2l	equ	0xFD9
  2952                           status	equ	0xFD8
  2953                           
  2954 ;; *************** function ___lwtoft *****************
  2955 ;; Defined at:
  2956 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwtoft.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;  c               2    3[BANK0 ] unsigned int 
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;		None
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  3    3[BANK0 ] float 
  2963 ;; Registers used:
  2964 ;;		wreg, status,2, status,0, cstack
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2970 ;;      Params:         0       3       0       0       0       0       0       0       0
  2971 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2972 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2973 ;;      Totals:         2       3       0       0       0       0       0       0       0
  2974 ;;Total ram usage:        5 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; Hardware stack levels required when called:    6
  2977 ;; This function calls:
  2978 ;;		___ftpack
  2979 ;; This function is called by:
  2980 ;;		_main
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           	psect	text17
  2985  0017D4                     __ptext17:
  2986                           	opt stack 0
  2987  0017D4                     ___lwtoft:
  2988                           	opt stack 24
  2989                           
  2990                           ;incstack = 0
  2991  0017D4  0100               	movlb	0	; () banked
  2992  0017D6  C063  F02D         	movff	___lwtoft@c,___ftpack@arg
  2993  0017DA  0100               	movlb	0	; () banked
  2994  0017DC  C064  F02E         	movff	___lwtoft@c+1,___ftpack@arg+1
  2995  0017E0  6A2F               	clrf	___ftpack@arg+2,c
  2996  0017E2  6E32               	movwf	??___lwtoft& (0+255),c
  2997  0017E4  0E8E               	movlw	142
  2998  0017E6  6E30               	movwf	___ftpack@exp,c
  2999  0017E8  5032               	movf	??___lwtoft& (0+255),w,c
  3000  0017EA  6E33               	movwf	(??___lwtoft+1)& (0+255),c
  3001  0017EC  0E00               	movlw	0
  3002  0017EE  6E31               	movwf	___ftpack@sign,c
  3003  0017F0  5033               	movf	(??___lwtoft+1)& (0+255),w,c
  3004  0017F2  EC5F  F009         	call	___ftpack	;wreg free
  3005  0017F6  C02D  F063         	movff	?___ftpack,?___lwtoft
  3006  0017FA  C02E  F064         	movff	?___ftpack+1,?___lwtoft+1
  3007  0017FE  C02F  F065         	movff	?___ftpack+2,?___lwtoft+2
  3008  001802  0012               	return	
  3009  001804                     __end_of___lwtoft:
  3010                           	opt stack 0
  3011                           tblptru	equ	0xFF8
  3012                           tblptrh	equ	0xFF7
  3013                           tblptrl	equ	0xFF6
  3014                           tablat	equ	0xFF5
  3015                           prodh	equ	0xFF4
  3016                           prodl	equ	0xFF3
  3017                           indf0	equ	0xFEF
  3018                           fsr0h	equ	0xFEA
  3019                           fsr0l	equ	0xFE9
  3020                           wreg	equ	0xFE8
  3021                           indf1	equ	0xFE7
  3022                           fsr1h	equ	0xFE2
  3023                           fsr1l	equ	0xFE1
  3024                           indf2	equ	0xFDF
  3025                           postinc2	equ	0xFDE
  3026                           postdec2	equ	0xFDD
  3027                           fsr2h	equ	0xFDA
  3028                           fsr2l	equ	0xFD9
  3029                           status	equ	0xFD8
  3030                           
  3031 ;; *************** function ___fttol *****************
  3032 ;; Defined at:
  3033 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\fttol.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;  f1              3   36[BANK0 ] float 
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;  lval            4   46[BANK0 ] unsigned long 
  3038 ;;  exp1            1   50[BANK0 ] unsigned char 
  3039 ;;  sign1           1   45[BANK0 ] unsigned char 
  3040 ;; Return value:  Size  Location     Type
  3041 ;;                  4   36[BANK0 ] long 
  3042 ;; Registers used:
  3043 ;;		wreg, status,2, status,0
  3044 ;; Tracked objects:
  3045 ;;		On entry : 0/0
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3049 ;;      Params:         0       4       0       0       0       0       0       0       0
  3050 ;;      Locals:         0       6       0       0       0       0       0       0       0
  3051 ;;      Temps:          0       5       0       0       0       0       0       0       0
  3052 ;;      Totals:         0      15       0       0       0       0       0       0       0
  3053 ;;Total ram usage:       15 bytes
  3054 ;; Hardware stack levels used:    1
  3055 ;; Hardware stack levels required when called:    5
  3056 ;; This function calls:
  3057 ;;		Nothing
  3058 ;; This function is called by:
  3059 ;;		_main
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063                           	psect	text18
  3064  001084                     __ptext18:
  3065                           	opt stack 0
  3066  001084                     ___fttol:
  3067                           	opt stack 25
  3068                           
  3069                           ;incstack = 0
  3070  001084  0100               	movlb	0	; () banked
  3071  001086  C086  F088         	movff	___fttol@f1+2,??___fttol
  3072  00108A  0100               	movlb	0	; () banked
  3073  00108C  6B89               	clrf	(??___fttol+1)& (0+255),b
  3074  00108E  6B8A               	clrf	(??___fttol+2)& (0+255),b
  3075  001090  0100               	movlb	0	; () banked
  3076  001092  0100               	movlb	0	; () banked
  3077  001094  3585               	rlcf	(___fttol@f1+1)& (0+255),w,b
  3078  001096  0100               	movlb	0	; () banked
  3079  001098  3788               	rlcf	??___fttol& (0+255),f,b
  3080  00109A  E301               	bnc	u1311
  3081  00109C  8189               	bsf	(??___fttol+1)& (0+255),0,b
  3082  00109E                     u1311:
  3083  00109E  0100               	movlb	0	; () banked
  3084  0010A0  5188               	movf	??___fttol& (0+255),w,b
  3085  0010A2  0100               	movlb	0	; () banked
  3086  0010A4  0100               	movlb	0	; () banked
  3087  0010A6  6F92               	movwf	___fttol@exp1& (0+255),b
  3088  0010A8  0100               	movlb	0	; () banked
  3089  0010AA  6792               	tstfsz	___fttol@exp1& (0+255),b
  3090  0010AC  D001               	goto	l2088
  3091  0010AE  D066               	goto	u1360
  3092  0010B0                     l2088:
  3093                           
  3094                           ; BSR set to: 0
  3095  0010B0  0E17               	movlw	23
  3096  0010B2  0100               	movlb	0	; () banked
  3097  0010B4  6F88               	movwf	??___fttol& (0+255),b
  3098  0010B6  0100               	movlb	0	; () banked
  3099  0010B8  C084  F089         	movff	___fttol@f1,??___fttol+1
  3100  0010BC  0100               	movlb	0	; () banked
  3101  0010BE  C085  F08A         	movff	___fttol@f1+1,??___fttol+2
  3102  0010C2  0100               	movlb	0	; () banked
  3103  0010C4  C086  F08B         	movff	___fttol@f1+2,??___fttol+3
  3104  0010C8  0100               	movlb	0	; () banked
  3105  0010CA  2988               	incf	??___fttol& (0+255),w,b
  3106  0010CC  0100               	movlb	0	; () banked
  3107  0010CE  6F8C               	movwf	(??___fttol+4)& (0+255),b
  3108  0010D0  D005               	goto	u1330
  3109  0010D2                     u1335:
  3110  0010D2  0100               	movlb	0	; () banked
  3111  0010D4  90D8               	bcf	status,0,c
  3112  0010D6  338B               	rrcf	(??___fttol+3)& (0+255),f,b
  3113  0010D8  338A               	rrcf	(??___fttol+2)& (0+255),f,b
  3114  0010DA  3389               	rrcf	(??___fttol+1)& (0+255),f,b
  3115  0010DC                     u1330:
  3116  0010DC  0100               	movlb	0	; () banked
  3117  0010DE  2F8C               	decfsz	(??___fttol+4)& (0+255),f,b
  3118  0010E0  D7F8               	goto	u1335
  3119  0010E2  0100               	movlb	0	; () banked
  3120  0010E4  5189               	movf	(??___fttol+1)& (0+255),w,b
  3121  0010E6  0100               	movlb	0	; () banked
  3122  0010E8  0100               	movlb	0	; () banked
  3123  0010EA  6F8D               	movwf	___fttol@sign1& (0+255),b
  3124                           
  3125                           ; BSR set to: 0
  3126  0010EC  0100               	movlb	0	; () banked
  3127  0010EE  0100               	movlb	0	; () banked
  3128  0010F0  8F85               	bsf	(___fttol@f1+1)& (0+255),7,b
  3129                           
  3130                           ; BSR set to: 0
  3131  0010F2  0EFF               	movlw	255
  3132  0010F4  0100               	movlb	0	; () banked
  3133  0010F6  0100               	movlb	0	; () banked
  3134  0010F8  1784               	andwf	___fttol@f1& (0+255),f,b
  3135  0010FA  0EFF               	movlw	255
  3136  0010FC  0100               	movlb	0	; () banked
  3137  0010FE  0100               	movlb	0	; () banked
  3138  001100  1785               	andwf	(___fttol@f1+1)& (0+255),f,b
  3139  001102  0E00               	movlw	0
  3140  001104  0100               	movlb	0	; () banked
  3141  001106  0100               	movlb	0	; () banked
  3142  001108  1786               	andwf	(___fttol@f1+2)& (0+255),f,b
  3143                           
  3144                           ; BSR set to: 0
  3145  00110A  0100               	movlb	0	; () banked
  3146  00110C  0100               	movlb	0	; () banked
  3147  00110E  5184               	movf	___fttol@f1& (0+255),w,b
  3148  001110  0100               	movlb	0	; () banked
  3149  001112  0100               	movlb	0	; () banked
  3150  001114  6F8E               	movwf	___fttol@lval& (0+255),b
  3151  001116  0100               	movlb	0	; () banked
  3152  001118  0100               	movlb	0	; () banked
  3153  00111A  5185               	movf	(___fttol@f1+1)& (0+255),w,b
  3154  00111C  0100               	movlb	0	; () banked
  3155  00111E  6F8F               	movwf	(___fttol@lval+1)& (0+255),b
  3156  001120  0100               	movlb	0	; () banked
  3157  001122  5186               	movf	(___fttol@f1+2)& (0+255),w,b
  3158  001124  0100               	movlb	0	; () banked
  3159  001126  6F90               	movwf	(___fttol@lval+2)& (0+255),b
  3160  001128  0100               	movlb	0	; () banked
  3161  00112A  6B91               	clrf	(___fttol@lval+3)& (0+255),b
  3162                           
  3163                           ; BSR set to: 0
  3164  00112C  0E8E               	movlw	142
  3165  00112E  0100               	movlb	0	; () banked
  3166  001130  0100               	movlb	0	; () banked
  3167  001132  5F92               	subwf	___fttol@exp1& (0+255),f,b
  3168                           
  3169                           ; BSR set to: 0
  3170  001134  0100               	movlb	0	; () banked
  3171  001136  0100               	movlb	0	; () banked
  3172  001138  AF92               	btfss	___fttol@exp1& (0+255),7,b
  3173  00113A  D01B               	goto	l2110
  3174                           
  3175                           ; BSR set to: 0
  3176  00113C  0100               	movlb	0	; () banked
  3177  00113E  0100               	movlb	0	; () banked
  3178  001140  5192               	movf	___fttol@exp1& (0+255),w,b
  3179  001142  0A80               	xorlw	128
  3180  001144  0100               	movlb	0	; () banked
  3181  001146  6F88               	movwf	??___fttol& (0+255),b
  3182  001148  0EF1               	movlw	241
  3183  00114A  0A80               	xorlw	128
  3184  00114C  0100               	movlb	0	; () banked
  3185  00114E  5D88               	subwf	??___fttol& (0+255),w,b
  3186  001150  A0D8               	btfss	status,0,c
  3187  001152  D014               	goto	u1360
  3188  001154                     l2106:
  3189                           
  3190                           ; BSR set to: 0
  3191  001154  0100               	movlb	0	; () banked
  3192  001156  90D8               	bcf	status,0,c
  3193  001158  0100               	movlb	0	; () banked
  3194  00115A  3391               	rrcf	(___fttol@lval+3)& (0+255),f,b
  3195  00115C  0100               	movlb	0	; () banked
  3196  00115E  3390               	rrcf	(___fttol@lval+2)& (0+255),f,b
  3197  001160  0100               	movlb	0	; () banked
  3198  001162  338F               	rrcf	(___fttol@lval+1)& (0+255),f,b
  3199  001164  0100               	movlb	0	; () banked
  3200  001166  338E               	rrcf	___fttol@lval& (0+255),f,b
  3201                           
  3202                           ; BSR set to: 0
  3203  001168  0100               	movlb	0	; () banked
  3204  00116A  0100               	movlb	0	; () banked
  3205  00116C  3F92               	incfsz	___fttol@exp1& (0+255),f,b
  3206  00116E  D7F2               	goto	l2106
  3207  001170  D024               	goto	l2120
  3208  001172                     l2110:
  3209                           
  3210                           ; BSR set to: 0
  3211  001172  0E17               	movlw	23
  3212  001174  0100               	movlb	0	; () banked
  3213  001176  0100               	movlb	0	; () banked
  3214  001178  6592               	cpfsgt	___fttol@exp1& (0+255),b
  3215  00117A  D01B               	goto	l2118
  3216  00117C                     u1360:
  3217                           
  3218                           ; BSR set to: 0
  3219  00117C  0E00               	movlw	0
  3220  00117E  0100               	movlb	0	; () banked
  3221  001180  0100               	movlb	0	; () banked
  3222  001182  6F84               	movwf	?___fttol& (0+255),b
  3223  001184  0E00               	movlw	0
  3224  001186  0100               	movlb	0	; () banked
  3225  001188  6F85               	movwf	(?___fttol+1)& (0+255),b
  3226  00118A  0E00               	movlw	0
  3227  00118C  0100               	movlb	0	; () banked
  3228  00118E  6F86               	movwf	(?___fttol+2)& (0+255),b
  3229  001190  0E00               	movlw	0
  3230  001192  0100               	movlb	0	; () banked
  3231  001194  6F87               	movwf	(?___fttol+3)& (0+255),b
  3232  001196  D02E               	goto	l657
  3233  001198                     l2116:
  3234                           
  3235                           ; BSR set to: 0
  3236  001198  0100               	movlb	0	; () banked
  3237  00119A  90D8               	bcf	status,0,c
  3238  00119C  0100               	movlb	0	; () banked
  3239  00119E  378E               	rlcf	___fttol@lval& (0+255),f,b
  3240  0011A0  0100               	movlb	0	; () banked
  3241  0011A2  378F               	rlcf	(___fttol@lval+1)& (0+255),f,b
  3242  0011A4  0100               	movlb	0	; () banked
  3243  0011A6  3790               	rlcf	(___fttol@lval+2)& (0+255),f,b
  3244  0011A8  0100               	movlb	0	; () banked
  3245  0011AA  3791               	rlcf	(___fttol@lval+3)& (0+255),f,b
  3246  0011AC  0100               	movlb	0	; () banked
  3247  0011AE  0100               	movlb	0	; () banked
  3248  0011B0  0792               	decf	___fttol@exp1& (0+255),f,b
  3249  0011B2                     l2118:
  3250                           
  3251                           ; BSR set to: 0
  3252  0011B2  0100               	movlb	0	; () banked
  3253  0011B4  0100               	movlb	0	; () banked
  3254  0011B6  6792               	tstfsz	___fttol@exp1& (0+255),b
  3255  0011B8  D7EF               	goto	l2116
  3256  0011BA                     l2120:
  3257                           
  3258                           ; BSR set to: 0
  3259  0011BA  0100               	movlb	0	; () banked
  3260  0011BC  0100               	movlb	0	; () banked
  3261  0011BE  518D               	movf	___fttol@sign1& (0+255),w,b
  3262  0011C0  B4D8               	btfsc	status,2,c
  3263  0011C2  D010               	goto	l2124
  3264                           
  3265                           ; BSR set to: 0
  3266  0011C4  0100               	movlb	0	; () banked
  3267  0011C6  0100               	movlb	0	; () banked
  3268  0011C8  1F91               	comf	(___fttol@lval+3)& (0+255),f,b
  3269  0011CA  0100               	movlb	0	; () banked
  3270  0011CC  1F90               	comf	(___fttol@lval+2)& (0+255),f,b
  3271  0011CE  0100               	movlb	0	; () banked
  3272  0011D0  1F8F               	comf	(___fttol@lval+1)& (0+255),f,b
  3273  0011D2  0100               	movlb	0	; () banked
  3274  0011D4  6D8E               	negf	___fttol@lval& (0+255),b
  3275  0011D6  0E00               	movlw	0
  3276  0011D8  0100               	movlb	0	; () banked
  3277  0011DA  238F               	addwfc	(___fttol@lval+1)& (0+255),f,b
  3278  0011DC  0100               	movlb	0	; () banked
  3279  0011DE  2390               	addwfc	(___fttol@lval+2)& (0+255),f,b
  3280  0011E0  0100               	movlb	0	; () banked
  3281  0011E2  2391               	addwfc	(___fttol@lval+3)& (0+255),f,b
  3282  0011E4                     l2124:
  3283                           
  3284                           ; BSR set to: 0
  3285  0011E4  C08E  F084         	movff	___fttol@lval,?___fttol
  3286  0011E8  C08F  F085         	movff	___fttol@lval+1,?___fttol+1
  3287  0011EC  C090  F086         	movff	___fttol@lval+2,?___fttol+2
  3288  0011F0  C091  F087         	movff	___fttol@lval+3,?___fttol+3
  3289  0011F4                     l657:
  3290                           
  3291                           ; BSR set to: 0
  3292  0011F4  0012               	return	
  3293  0011F6                     __end_of___fttol:
  3294                           	opt stack 0
  3295                           tblptru	equ	0xFF8
  3296                           tblptrh	equ	0xFF7
  3297                           tblptrl	equ	0xFF6
  3298                           tablat	equ	0xFF5
  3299                           prodh	equ	0xFF4
  3300                           prodl	equ	0xFF3
  3301                           indf0	equ	0xFEF
  3302                           fsr0h	equ	0xFEA
  3303                           fsr0l	equ	0xFE9
  3304                           wreg	equ	0xFE8
  3305                           indf1	equ	0xFE7
  3306                           fsr1h	equ	0xFE2
  3307                           fsr1l	equ	0xFE1
  3308                           indf2	equ	0xFDF
  3309                           postinc2	equ	0xFDE
  3310                           postdec2	equ	0xFDD
  3311                           fsr2h	equ	0xFDA
  3312                           fsr2l	equ	0xFD9
  3313                           status	equ	0xFD8
  3314                           
  3315 ;; *************** function ___ftmul *****************
  3316 ;; Defined at:
  3317 ;;		line 51 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftmul.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;  f1              3   21[BANK0 ] float 
  3320 ;;  f2              3   24[BANK0 ] float 
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;  f3_as_produc    3   31[BANK0 ] unsigned um
  3323 ;;  sign            1   35[BANK0 ] unsigned char 
  3324 ;;  cntr            1   34[BANK0 ] unsigned char 
  3325 ;;  exp             1   30[BANK0 ] unsigned char 
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  3   21[BANK0 ] float 
  3328 ;; Registers used:
  3329 ;;		wreg, status,2, status,0, cstack
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3335 ;;      Params:         0       6       0       0       0       0       0       0       0
  3336 ;;      Locals:         0       6       0       0       0       0       0       0       0
  3337 ;;      Temps:          0       3       0       0       0       0       0       0       0
  3338 ;;      Totals:         0      15       0       0       0       0       0       0       0
  3339 ;;Total ram usage:       15 bytes
  3340 ;; Hardware stack levels used:    1
  3341 ;; Hardware stack levels required when called:    6
  3342 ;; This function calls:
  3343 ;;		___ftpack
  3344 ;; This function is called by:
  3345 ;;		_main
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           	psect	text19
  3350  000B78                     __ptext19:
  3351                           	opt stack 0
  3352  000B78                     ___ftmul:
  3353                           	opt stack 24
  3354                           
  3355                           ; BSR set to: 0
  3356                           ;incstack = 0
  3357  000B78  0100               	movlb	0	; () banked
  3358  000B7A  C077  F07B         	movff	___ftmul@f1+2,??___ftmul
  3359  000B7E  0100               	movlb	0	; () banked
  3360  000B80  6B7C               	clrf	(??___ftmul+1)& (0+255),b
  3361  000B82  6B7D               	clrf	(??___ftmul+2)& (0+255),b
  3362  000B84  0100               	movlb	0	; () banked
  3363  000B86  0100               	movlb	0	; () banked
  3364  000B88  3576               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  3365  000B8A  0100               	movlb	0	; () banked
  3366  000B8C  377B               	rlcf	??___ftmul& (0+255),f,b
  3367  000B8E  E301               	bnc	u1251
  3368  000B90  817C               	bsf	(??___ftmul+1)& (0+255),0,b
  3369  000B92                     u1251:
  3370  000B92  0100               	movlb	0	; () banked
  3371  000B94  517B               	movf	??___ftmul& (0+255),w,b
  3372  000B96  0100               	movlb	0	; () banked
  3373  000B98  0100               	movlb	0	; () banked
  3374  000B9A  6F7E               	movwf	___ftmul@exp& (0+255),b
  3375  000B9C  0100               	movlb	0	; () banked
  3376  000B9E  677E               	tstfsz	___ftmul@exp& (0+255),b
  3377  000BA0  D001               	goto	l2040
  3378  000BA2  D015               	goto	u1280
  3379  000BA4                     l2040:
  3380                           
  3381                           ; BSR set to: 0
  3382  000BA4  0100               	movlb	0	; () banked
  3383  000BA6  C07A  F07B         	movff	___ftmul@f2+2,??___ftmul
  3384  000BAA  0100               	movlb	0	; () banked
  3385  000BAC  6B7C               	clrf	(??___ftmul+1)& (0+255),b
  3386  000BAE  6B7D               	clrf	(??___ftmul+2)& (0+255),b
  3387  000BB0  0100               	movlb	0	; () banked
  3388  000BB2  0100               	movlb	0	; () banked
  3389  000BB4  3579               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  3390  000BB6  0100               	movlb	0	; () banked
  3391  000BB8  377B               	rlcf	??___ftmul& (0+255),f,b
  3392  000BBA  E301               	bnc	u1271
  3393  000BBC  817C               	bsf	(??___ftmul+1)& (0+255),0,b
  3394  000BBE                     u1271:
  3395  000BBE  0100               	movlb	0	; () banked
  3396  000BC0  517B               	movf	??___ftmul& (0+255),w,b
  3397  000BC2  0100               	movlb	0	; () banked
  3398  000BC4  0100               	movlb	0	; () banked
  3399  000BC6  6F83               	movwf	___ftmul@sign& (0+255),b
  3400  000BC8  0100               	movlb	0	; () banked
  3401  000BCA  6783               	tstfsz	___ftmul@sign& (0+255),b
  3402  000BCC  D00D               	goto	l2046
  3403  000BCE                     u1280:
  3404                           
  3405                           ; BSR set to: 0
  3406  000BCE  0E00               	movlw	0
  3407  000BD0  0100               	movlb	0	; () banked
  3408  000BD2  0100               	movlb	0	; () banked
  3409  000BD4  6F75               	movwf	?___ftmul& (0+255),b
  3410  000BD6  0E00               	movlw	0
  3411  000BD8  0100               	movlb	0	; () banked
  3412  000BDA  0100               	movlb	0	; () banked
  3413  000BDC  6F76               	movwf	(?___ftmul+1)& (0+255),b
  3414  000BDE  0E00               	movlw	0
  3415  000BE0  0100               	movlb	0	; () banked
  3416  000BE2  0100               	movlb	0	; () banked
  3417  000BE4  6F77               	movwf	(?___ftmul+2)& (0+255),b
  3418  000BE6  D0A7               	goto	l637
  3419  000BE8                     l2046:
  3420                           
  3421                           ; BSR set to: 0
  3422  000BE8  0100               	movlb	0	; () banked
  3423  000BEA  0100               	movlb	0	; () banked
  3424  000BEC  5183               	movf	___ftmul@sign& (0+255),w,b
  3425  000BEE  0F7B               	addlw	123
  3426  000BF0  0100               	movlb	0	; () banked
  3427  000BF2  0100               	movlb	0	; () banked
  3428  000BF4  277E               	addwf	___ftmul@exp& (0+255),f,b
  3429                           
  3430                           ; BSR set to: 0
  3431  000BF6  C077  F083         	movff	___ftmul@f1+2,___ftmul@sign
  3432  000BFA  0100               	movlb	0	; () banked
  3433  000BFC  0100               	movlb	0	; () banked
  3434  000BFE  517A               	movf	(___ftmul@f2+2)& (0+255),w,b
  3435  000C00  0100               	movlb	0	; () banked
  3436  000C02  0100               	movlb	0	; () banked
  3437  000C04  1B83               	xorwf	___ftmul@sign& (0+255),f,b
  3438  000C06  0E80               	movlw	128
  3439  000C08  0100               	movlb	0	; () banked
  3440  000C0A  0100               	movlb	0	; () banked
  3441  000C0C  1783               	andwf	___ftmul@sign& (0+255),f,b
  3442                           
  3443                           ; BSR set to: 0
  3444  000C0E  0100               	movlb	0	; () banked
  3445  000C10  0100               	movlb	0	; () banked
  3446  000C12  8F76               	bsf	(___ftmul@f1+1)& (0+255),7,b
  3447                           
  3448                           ; BSR set to: 0
  3449  000C14  0100               	movlb	0	; () banked
  3450  000C16  0100               	movlb	0	; () banked
  3451  000C18  8F79               	bsf	(___ftmul@f2+1)& (0+255),7,b
  3452                           
  3453                           ; BSR set to: 0
  3454  000C1A  0EFF               	movlw	255
  3455  000C1C  0100               	movlb	0	; () banked
  3456  000C1E  0100               	movlb	0	; () banked
  3457  000C20  1778               	andwf	___ftmul@f2& (0+255),f,b
  3458  000C22  0EFF               	movlw	255
  3459  000C24  0100               	movlb	0	; () banked
  3460  000C26  0100               	movlb	0	; () banked
  3461  000C28  1779               	andwf	(___ftmul@f2+1)& (0+255),f,b
  3462  000C2A  0E00               	movlw	0
  3463  000C2C  0100               	movlb	0	; () banked
  3464  000C2E  0100               	movlb	0	; () banked
  3465  000C30  177A               	andwf	(___ftmul@f2+2)& (0+255),f,b
  3466                           
  3467                           ; BSR set to: 0
  3468  000C32  0E00               	movlw	0
  3469  000C34  0100               	movlb	0	; () banked
  3470  000C36  0100               	movlb	0	; () banked
  3471  000C38  6F7F               	movwf	___ftmul@f3_as_product& (0+255),b
  3472  000C3A  0E00               	movlw	0
  3473  000C3C  0100               	movlb	0	; () banked
  3474  000C3E  0100               	movlb	0	; () banked
  3475  000C40  6F80               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  3476  000C42  0E00               	movlw	0
  3477  000C44  0100               	movlb	0	; () banked
  3478  000C46  0100               	movlb	0	; () banked
  3479  000C48  6F81               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  3480                           
  3481                           ; BSR set to: 0
  3482  000C4A  0100               	movlb	0	; () banked
  3483  000C4C  6F7B               	movwf	??___ftmul& (0+255),b
  3484  000C4E  0E07               	movlw	7
  3485  000C50  0100               	movlb	0	; () banked
  3486  000C52  0100               	movlb	0	; () banked
  3487  000C54  6F82               	movwf	___ftmul@cntr& (0+255),b
  3488  000C56  0100               	movlb	0	; () banked
  3489  000C58  517B               	movf	??___ftmul& (0+255),w,b
  3490  000C5A                     l2060:
  3491                           
  3492                           ; BSR set to: 0
  3493  000C5A  0100               	movlb	0	; () banked
  3494  000C5C  0100               	movlb	0	; () banked
  3495  000C5E  A175               	btfss	___ftmul@f1& (0+255),0,b
  3496  000C60  D012               	goto	l2064
  3497                           
  3498                           ; BSR set to: 0
  3499  000C62  0100               	movlb	0	; () banked
  3500  000C64  0100               	movlb	0	; () banked
  3501  000C66  5178               	movf	___ftmul@f2& (0+255),w,b
  3502  000C68  0100               	movlb	0	; () banked
  3503  000C6A  0100               	movlb	0	; () banked
  3504  000C6C  277F               	addwf	___ftmul@f3_as_product& (0+255),f,b
  3505  000C6E  0100               	movlb	0	; () banked
  3506  000C70  0100               	movlb	0	; () banked
  3507  000C72  5179               	movf	(___ftmul@f2+1)& (0+255),w,b
  3508  000C74  0100               	movlb	0	; () banked
  3509  000C76  0100               	movlb	0	; () banked
  3510  000C78  2380               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  3511  000C7A  0100               	movlb	0	; () banked
  3512  000C7C  0100               	movlb	0	; () banked
  3513  000C7E  517A               	movf	(___ftmul@f2+2)& (0+255),w,b
  3514  000C80  0100               	movlb	0	; () banked
  3515  000C82  0100               	movlb	0	; () banked
  3516  000C84  2381               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  3517  000C86                     l2064:
  3518                           
  3519                           ; BSR set to: 0
  3520  000C86  0100               	movlb	0	; () banked
  3521  000C88  90D8               	bcf	status,0,c
  3522  000C8A  0100               	movlb	0	; () banked
  3523  000C8C  3377               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  3524  000C8E  0100               	movlb	0	; () banked
  3525  000C90  3376               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  3526  000C92  0100               	movlb	0	; () banked
  3527  000C94  3375               	rrcf	___ftmul@f1& (0+255),f,b
  3528  000C96  0100               	movlb	0	; () banked
  3529  000C98  90D8               	bcf	status,0,c
  3530  000C9A  0100               	movlb	0	; () banked
  3531  000C9C  3778               	rlcf	___ftmul@f2& (0+255),f,b
  3532  000C9E  0100               	movlb	0	; () banked
  3533  000CA0  3779               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  3534  000CA2  0100               	movlb	0	; () banked
  3535  000CA4  377A               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  3536                           
  3537                           ; BSR set to: 0
  3538  000CA6  0100               	movlb	0	; () banked
  3539  000CA8  0100               	movlb	0	; () banked
  3540  000CAA  2F82               	decfsz	___ftmul@cntr& (0+255),f,b
  3541  000CAC  D7D6               	goto	l2060
  3542                           
  3543                           ; BSR set to: 0
  3544                           
  3545                           ; BSR set to: 0
  3546  000CAE  0100               	movlb	0	; () banked
  3547  000CB0  6F7B               	movwf	??___ftmul& (0+255),b
  3548  000CB2  0E09               	movlw	9
  3549  000CB4  0100               	movlb	0	; () banked
  3550  000CB6  0100               	movlb	0	; () banked
  3551  000CB8  6F82               	movwf	___ftmul@cntr& (0+255),b
  3552  000CBA  0100               	movlb	0	; () banked
  3553  000CBC  517B               	movf	??___ftmul& (0+255),w,b
  3554  000CBE                     l2070:
  3555                           
  3556                           ; BSR set to: 0
  3557  000CBE  0100               	movlb	0	; () banked
  3558  000CC0  0100               	movlb	0	; () banked
  3559  000CC2  A175               	btfss	___ftmul@f1& (0+255),0,b
  3560  000CC4  D012               	goto	l2074
  3561                           
  3562                           ; BSR set to: 0
  3563  000CC6  0100               	movlb	0	; () banked
  3564  000CC8  0100               	movlb	0	; () banked
  3565  000CCA  5178               	movf	___ftmul@f2& (0+255),w,b
  3566  000CCC  0100               	movlb	0	; () banked
  3567  000CCE  0100               	movlb	0	; () banked
  3568  000CD0  277F               	addwf	___ftmul@f3_as_product& (0+255),f,b
  3569  000CD2  0100               	movlb	0	; () banked
  3570  000CD4  0100               	movlb	0	; () banked
  3571  000CD6  5179               	movf	(___ftmul@f2+1)& (0+255),w,b
  3572  000CD8  0100               	movlb	0	; () banked
  3573  000CDA  0100               	movlb	0	; () banked
  3574  000CDC  2380               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  3575  000CDE  0100               	movlb	0	; () banked
  3576  000CE0  0100               	movlb	0	; () banked
  3577  000CE2  517A               	movf	(___ftmul@f2+2)& (0+255),w,b
  3578  000CE4  0100               	movlb	0	; () banked
  3579  000CE6  0100               	movlb	0	; () banked
  3580  000CE8  2381               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  3581  000CEA                     l2074:
  3582                           
  3583                           ; BSR set to: 0
  3584  000CEA  0100               	movlb	0	; () banked
  3585  000CEC  90D8               	bcf	status,0,c
  3586  000CEE  0100               	movlb	0	; () banked
  3587  000CF0  3377               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  3588  000CF2  0100               	movlb	0	; () banked
  3589  000CF4  3376               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  3590  000CF6  0100               	movlb	0	; () banked
  3591  000CF8  3375               	rrcf	___ftmul@f1& (0+255),f,b
  3592  000CFA  0100               	movlb	0	; () banked
  3593  000CFC  90D8               	bcf	status,0,c
  3594  000CFE  0100               	movlb	0	; () banked
  3595  000D00  3381               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  3596  000D02  0100               	movlb	0	; () banked
  3597  000D04  3380               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  3598  000D06  0100               	movlb	0	; () banked
  3599  000D08  337F               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  3600                           
  3601                           ; BSR set to: 0
  3602  000D0A  0100               	movlb	0	; () banked
  3603  000D0C  0100               	movlb	0	; () banked
  3604  000D0E  2F82               	decfsz	___ftmul@cntr& (0+255),f,b
  3605  000D10  D7D6               	goto	l2070
  3606                           
  3607                           ; BSR set to: 0
  3608                           
  3609                           ; BSR set to: 0
  3610  000D12  C07F  F02D         	movff	___ftmul@f3_as_product,___ftpack@arg
  3611  000D16  C080  F02E         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3612  000D1A  C081  F02F         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3613  000D1E  C07E  F030         	movff	___ftmul@exp,___ftpack@exp
  3614  000D22  C083  F031         	movff	___ftmul@sign,___ftpack@sign
  3615  000D26  EC5F  F009         	call	___ftpack	;wreg free
  3616  000D2A  C02D  F075         	movff	?___ftpack,?___ftmul
  3617  000D2E  C02E  F076         	movff	?___ftpack+1,?___ftmul+1
  3618  000D32  C02F  F077         	movff	?___ftpack+2,?___ftmul+2
  3619  000D36                     l637:
  3620  000D36  0012               	return	
  3621  000D38                     __end_of___ftmul:
  3622                           	opt stack 0
  3623                           tblptru	equ	0xFF8
  3624                           tblptrh	equ	0xFF7
  3625                           tblptrl	equ	0xFF6
  3626                           tablat	equ	0xFF5
  3627                           prodh	equ	0xFF4
  3628                           prodl	equ	0xFF3
  3629                           indf0	equ	0xFEF
  3630                           fsr0h	equ	0xFEA
  3631                           fsr0l	equ	0xFE9
  3632                           wreg	equ	0xFE8
  3633                           indf1	equ	0xFE7
  3634                           fsr1h	equ	0xFE2
  3635                           fsr1l	equ	0xFE1
  3636                           indf2	equ	0xFDF
  3637                           postinc2	equ	0xFDE
  3638                           postdec2	equ	0xFDD
  3639                           fsr2h	equ	0xFDA
  3640                           fsr2l	equ	0xFD9
  3641                           status	equ	0xFD8
  3642                           
  3643 ;; *************** function ___ftdiv *****************
  3644 ;; Defined at:
  3645 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftdiv.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;  f1              3    6[BANK0 ] float 
  3648 ;;  f2              3    9[BANK0 ] float 
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;  f3              3   16[BANK0 ] float 
  3651 ;;  sign            1   20[BANK0 ] unsigned char 
  3652 ;;  exp             1   19[BANK0 ] unsigned char 
  3653 ;;  cntr            1   15[BANK0 ] unsigned char 
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  3    6[BANK0 ] float 
  3656 ;; Registers used:
  3657 ;;		wreg, status,2, status,0, cstack
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3663 ;;      Params:         0       6       0       0       0       0       0       0       0
  3664 ;;      Locals:         0       6       0       0       0       0       0       0       0
  3665 ;;      Temps:          0       3       0       0       0       0       0       0       0
  3666 ;;      Totals:         0      15       0       0       0       0       0       0       0
  3667 ;;Total ram usage:       15 bytes
  3668 ;; Hardware stack levels used:    1
  3669 ;; Hardware stack levels required when called:    6
  3670 ;; This function calls:
  3671 ;;		___ftpack
  3672 ;; This function is called by:
  3673 ;;		_main
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           	psect	text20
  3678  000EEA                     __ptext20:
  3679                           	opt stack 0
  3680  000EEA                     ___ftdiv:
  3681                           	opt stack 24
  3682                           
  3683                           ;incstack = 0
  3684  000EEA  0100               	movlb	0	; () banked
  3685  000EEC  C068  F06C         	movff	___ftdiv@f1+2,??___ftdiv
  3686  000EF0  0100               	movlb	0	; () banked
  3687  000EF2  6B6D               	clrf	(??___ftdiv+1)& (0+255),b
  3688  000EF4  6B6E               	clrf	(??___ftdiv+2)& (0+255),b
  3689  000EF6  0100               	movlb	0	; () banked
  3690  000EF8  0100               	movlb	0	; () banked
  3691  000EFA  3567               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  3692  000EFC  0100               	movlb	0	; () banked
  3693  000EFE  376C               	rlcf	??___ftdiv& (0+255),f,b
  3694  000F00  E301               	bnc	u1201
  3695  000F02  816D               	bsf	(??___ftdiv+1)& (0+255),0,b
  3696  000F04                     u1201:
  3697  000F04  0100               	movlb	0	; () banked
  3698  000F06  516C               	movf	??___ftdiv& (0+255),w,b
  3699  000F08  0100               	movlb	0	; () banked
  3700  000F0A  0100               	movlb	0	; () banked
  3701  000F0C  6F73               	movwf	___ftdiv@exp& (0+255),b
  3702  000F0E  0100               	movlb	0	; () banked
  3703  000F10  6773               	tstfsz	___ftdiv@exp& (0+255),b
  3704  000F12  D001               	goto	l1996
  3705  000F14  D015               	goto	u1230
  3706  000F16                     l1996:
  3707                           
  3708                           ; BSR set to: 0
  3709  000F16  0100               	movlb	0	; () banked
  3710  000F18  C06B  F06C         	movff	___ftdiv@f2+2,??___ftdiv
  3711  000F1C  0100               	movlb	0	; () banked
  3712  000F1E  6B6D               	clrf	(??___ftdiv+1)& (0+255),b
  3713  000F20  6B6E               	clrf	(??___ftdiv+2)& (0+255),b
  3714  000F22  0100               	movlb	0	; () banked
  3715  000F24  0100               	movlb	0	; () banked
  3716  000F26  356A               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  3717  000F28  0100               	movlb	0	; () banked
  3718  000F2A  376C               	rlcf	??___ftdiv& (0+255),f,b
  3719  000F2C  E301               	bnc	u1221
  3720  000F2E  816D               	bsf	(??___ftdiv+1)& (0+255),0,b
  3721  000F30                     u1221:
  3722  000F30  0100               	movlb	0	; () banked
  3723  000F32  516C               	movf	??___ftdiv& (0+255),w,b
  3724  000F34  0100               	movlb	0	; () banked
  3725  000F36  0100               	movlb	0	; () banked
  3726  000F38  6F74               	movwf	___ftdiv@sign& (0+255),b
  3727  000F3A  0100               	movlb	0	; () banked
  3728  000F3C  6774               	tstfsz	___ftdiv@sign& (0+255),b
  3729  000F3E  D00D               	goto	l2002
  3730  000F40                     u1230:
  3731                           
  3732                           ; BSR set to: 0
  3733  000F40  0E00               	movlw	0
  3734  000F42  0100               	movlb	0	; () banked
  3735  000F44  0100               	movlb	0	; () banked
  3736  000F46  6F66               	movwf	?___ftdiv& (0+255),b
  3737  000F48  0E00               	movlw	0
  3738  000F4A  0100               	movlb	0	; () banked
  3739  000F4C  0100               	movlb	0	; () banked
  3740  000F4E  6F67               	movwf	(?___ftdiv+1)& (0+255),b
  3741  000F50  0E00               	movlw	0
  3742  000F52  0100               	movlb	0	; () banked
  3743  000F54  0100               	movlb	0	; () banked
  3744  000F56  6F68               	movwf	(?___ftdiv+2)& (0+255),b
  3745  000F58  D094               	goto	l622
  3746  000F5A                     l2002:
  3747                           
  3748                           ; BSR set to: 0
  3749  000F5A  0E00               	movlw	0
  3750  000F5C  0100               	movlb	0	; () banked
  3751  000F5E  0100               	movlb	0	; () banked
  3752  000F60  6F70               	movwf	___ftdiv@f3& (0+255),b
  3753  000F62  0E00               	movlw	0
  3754  000F64  0100               	movlb	0	; () banked
  3755  000F66  0100               	movlb	0	; () banked
  3756  000F68  6F71               	movwf	(___ftdiv@f3+1)& (0+255),b
  3757  000F6A  0E00               	movlw	0
  3758  000F6C  0100               	movlb	0	; () banked
  3759  000F6E  0100               	movlb	0	; () banked
  3760  000F70  6F72               	movwf	(___ftdiv@f3+2)& (0+255),b
  3761                           
  3762                           ; BSR set to: 0
  3763  000F72  0100               	movlb	0	; () banked
  3764  000F74  0100               	movlb	0	; () banked
  3765  000F76  5174               	movf	___ftdiv@sign& (0+255),w,b
  3766  000F78  0F89               	addlw	137
  3767  000F7A  0100               	movlb	0	; () banked
  3768  000F7C  0100               	movlb	0	; () banked
  3769  000F7E  5F73               	subwf	___ftdiv@exp& (0+255),f,b
  3770                           
  3771                           ; BSR set to: 0
  3772  000F80  C068  F074         	movff	___ftdiv@f1+2,___ftdiv@sign
  3773                           
  3774                           ; BSR set to: 0
  3775  000F84  0100               	movlb	0	; () banked
  3776  000F86  0100               	movlb	0	; () banked
  3777  000F88  516B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3778  000F8A  0100               	movlb	0	; () banked
  3779  000F8C  0100               	movlb	0	; () banked
  3780  000F8E  1B74               	xorwf	___ftdiv@sign& (0+255),f,b
  3781                           
  3782                           ; BSR set to: 0
  3783  000F90  0E80               	movlw	128
  3784  000F92  0100               	movlb	0	; () banked
  3785  000F94  0100               	movlb	0	; () banked
  3786  000F96  1774               	andwf	___ftdiv@sign& (0+255),f,b
  3787                           
  3788                           ; BSR set to: 0
  3789  000F98  0100               	movlb	0	; () banked
  3790  000F9A  0100               	movlb	0	; () banked
  3791  000F9C  8F67               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  3792                           
  3793                           ; BSR set to: 0
  3794  000F9E  0EFF               	movlw	255
  3795  000FA0  0100               	movlb	0	; () banked
  3796  000FA2  0100               	movlb	0	; () banked
  3797  000FA4  1766               	andwf	___ftdiv@f1& (0+255),f,b
  3798  000FA6  0EFF               	movlw	255
  3799  000FA8  0100               	movlb	0	; () banked
  3800  000FAA  0100               	movlb	0	; () banked
  3801  000FAC  1767               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  3802  000FAE  0E00               	movlw	0
  3803  000FB0  0100               	movlb	0	; () banked
  3804  000FB2  0100               	movlb	0	; () banked
  3805  000FB4  1768               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  3806                           
  3807                           ; BSR set to: 0
  3808  000FB6  0100               	movlb	0	; () banked
  3809  000FB8  0100               	movlb	0	; () banked
  3810  000FBA  8F6A               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  3811                           
  3812                           ; BSR set to: 0
  3813  000FBC  0EFF               	movlw	255
  3814  000FBE  0100               	movlb	0	; () banked
  3815  000FC0  0100               	movlb	0	; () banked
  3816  000FC2  1769               	andwf	___ftdiv@f2& (0+255),f,b
  3817  000FC4  0EFF               	movlw	255
  3818  000FC6  0100               	movlb	0	; () banked
  3819  000FC8  0100               	movlb	0	; () banked
  3820  000FCA  176A               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  3821  000FCC  0E00               	movlw	0
  3822  000FCE  0100               	movlb	0	; () banked
  3823  000FD0  0100               	movlb	0	; () banked
  3824  000FD2  176B               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  3825                           
  3826                           ; BSR set to: 0
  3827  000FD4  0100               	movlb	0	; () banked
  3828  000FD6  6F6C               	movwf	??___ftdiv& (0+255),b
  3829  000FD8  0E18               	movlw	24
  3830  000FDA  0100               	movlb	0	; () banked
  3831  000FDC  0100               	movlb	0	; () banked
  3832  000FDE  6F6F               	movwf	___ftdiv@cntr& (0+255),b
  3833  000FE0  0100               	movlb	0	; () banked
  3834  000FE2  516C               	movf	??___ftdiv& (0+255),w,b
  3835  000FE4                     l624:
  3836                           
  3837                           ; BSR set to: 0
  3838  000FE4  0100               	movlb	0	; () banked
  3839  000FE6  90D8               	bcf	status,0,c
  3840  000FE8  0100               	movlb	0	; () banked
  3841  000FEA  3770               	rlcf	___ftdiv@f3& (0+255),f,b
  3842  000FEC  0100               	movlb	0	; () banked
  3843  000FEE  3771               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  3844  000FF0  0100               	movlb	0	; () banked
  3845  000FF2  3772               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  3846                           
  3847                           ; BSR set to: 0
  3848  000FF4  0100               	movlb	0	; () banked
  3849  000FF6  0100               	movlb	0	; () banked
  3850  000FF8  5169               	movf	___ftdiv@f2& (0+255),w,b
  3851  000FFA  0100               	movlb	0	; () banked
  3852  000FFC  0100               	movlb	0	; () banked
  3853  000FFE  5D66               	subwf	___ftdiv@f1& (0+255),w,b
  3854  001000  0100               	movlb	0	; () banked
  3855  001002  0100               	movlb	0	; () banked
  3856  001004  516A               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3857  001006  0100               	movlb	0	; () banked
  3858  001008  0100               	movlb	0	; () banked
  3859  00100A  5967               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  3860  00100C  0100               	movlb	0	; () banked
  3861  00100E  0100               	movlb	0	; () banked
  3862  001010  516B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3863  001012  0100               	movlb	0	; () banked
  3864  001014  0100               	movlb	0	; () banked
  3865  001016  5968               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  3866  001018  A0D8               	btfss	status,0,c
  3867  00101A  D015               	goto	l625
  3868                           
  3869                           ; BSR set to: 0
  3870  00101C  0100               	movlb	0	; () banked
  3871  00101E  0100               	movlb	0	; () banked
  3872  001020  5169               	movf	___ftdiv@f2& (0+255),w,b
  3873  001022  0100               	movlb	0	; () banked
  3874  001024  0100               	movlb	0	; () banked
  3875  001026  5F66               	subwf	___ftdiv@f1& (0+255),f,b
  3876  001028  0100               	movlb	0	; () banked
  3877  00102A  0100               	movlb	0	; () banked
  3878  00102C  516A               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3879  00102E  0100               	movlb	0	; () banked
  3880  001030  0100               	movlb	0	; () banked
  3881  001032  5B67               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  3882  001034  0100               	movlb	0	; () banked
  3883  001036  0100               	movlb	0	; () banked
  3884  001038  516B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3885  00103A  0100               	movlb	0	; () banked
  3886  00103C  0100               	movlb	0	; () banked
  3887  00103E  5B68               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  3888                           
  3889                           ; BSR set to: 0
  3890  001040  0100               	movlb	0	; () banked
  3891  001042  0100               	movlb	0	; () banked
  3892  001044  8170               	bsf	___ftdiv@f3& (0+255),0,b
  3893  001046                     l625:
  3894                           
  3895                           ; BSR set to: 0
  3896  001046  0100               	movlb	0	; () banked
  3897  001048  90D8               	bcf	status,0,c
  3898  00104A  0100               	movlb	0	; () banked
  3899  00104C  3766               	rlcf	___ftdiv@f1& (0+255),f,b
  3900  00104E  0100               	movlb	0	; () banked
  3901  001050  3767               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  3902  001052  0100               	movlb	0	; () banked
  3903  001054  3768               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  3904                           
  3905                           ; BSR set to: 0
  3906  001056  0100               	movlb	0	; () banked
  3907  001058  0100               	movlb	0	; () banked
  3908  00105A  2F6F               	decfsz	___ftdiv@cntr& (0+255),f,b
  3909  00105C  D7C3               	goto	l624
  3910                           
  3911                           ; BSR set to: 0
  3912                           
  3913                           ; BSR set to: 0
  3914  00105E  C070  F02D         	movff	___ftdiv@f3,___ftpack@arg
  3915  001062  C071  F02E         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3916  001066  C072  F02F         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3917  00106A  C073  F030         	movff	___ftdiv@exp,___ftpack@exp
  3918  00106E  C074  F031         	movff	___ftdiv@sign,___ftpack@sign
  3919  001072  EC5F  F009         	call	___ftpack	;wreg free
  3920  001076  C02D  F066         	movff	?___ftpack,?___ftdiv
  3921  00107A  C02E  F067         	movff	?___ftpack+1,?___ftdiv+1
  3922  00107E  C02F  F068         	movff	?___ftpack+2,?___ftdiv+2
  3923  001082                     l622:
  3924  001082  0012               	return	
  3925  001084                     __end_of___ftdiv:
  3926                           	opt stack 0
  3927                           tblptru	equ	0xFF8
  3928                           tblptrh	equ	0xFF7
  3929                           tblptrl	equ	0xFF6
  3930                           tablat	equ	0xFF5
  3931                           prodh	equ	0xFF4
  3932                           prodl	equ	0xFF3
  3933                           indf0	equ	0xFEF
  3934                           fsr0h	equ	0xFEA
  3935                           fsr0l	equ	0xFE9
  3936                           wreg	equ	0xFE8
  3937                           indf1	equ	0xFE7
  3938                           fsr1h	equ	0xFE2
  3939                           fsr1l	equ	0xFE1
  3940                           indf2	equ	0xFDF
  3941                           postinc2	equ	0xFDE
  3942                           postdec2	equ	0xFDD
  3943                           fsr2h	equ	0xFDA
  3944                           fsr2l	equ	0xFD9
  3945                           status	equ	0xFD8
  3946                           
  3947 ;; *************** function ___ftpack *****************
  3948 ;; Defined at:
  3949 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\float.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;  arg             3   44[COMRAM] unsigned um
  3952 ;;  exp             1   47[COMRAM] unsigned char 
  3953 ;;  sign            1   48[COMRAM] unsigned char 
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;		None
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  3   44[COMRAM] float 
  3958 ;; Registers used:
  3959 ;;		wreg, status,2, status,0
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3965 ;;      Params:         5       0       0       0       0       0       0       0       0
  3966 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3967 ;;      Temps:          0       3       0       0       0       0       0       0       0
  3968 ;;      Totals:         5       3       0       0       0       0       0       0       0
  3969 ;;Total ram usage:        8 bytes
  3970 ;; Hardware stack levels used:    1
  3971 ;; Hardware stack levels required when called:    5
  3972 ;; This function calls:
  3973 ;;		Nothing
  3974 ;; This function is called by:
  3975 ;;		___ftdiv
  3976 ;;		___ftmul
  3977 ;;		___lwtoft
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981                           	psect	text21
  3982  0012BE                     __ptext21:
  3983                           	opt stack 0
  3984  0012BE                     ___ftpack:
  3985                           	opt stack 24
  3986                           
  3987                           ;incstack = 0
  3988  0012BE  5030               	movf	___ftpack@exp,w,c
  3989  0012C0  B4D8               	btfsc	status,2,c
  3990  0012C2  D005               	goto	l1960
  3991  0012C4  502D               	movf	___ftpack@arg,w,c
  3992  0012C6  102E               	iorwf	___ftpack@arg+1,w,c
  3993  0012C8  102F               	iorwf	___ftpack@arg+2,w,c
  3994  0012CA  A4D8               	btfss	status,2,c
  3995  0012CC  D00C               	goto	l1966
  3996  0012CE                     l1960:
  3997  0012CE  0E00               	movlw	0
  3998  0012D0  6E2D               	movwf	?___ftpack,c
  3999  0012D2  0E00               	movlw	0
  4000  0012D4  6E2E               	movwf	?___ftpack+1,c
  4001  0012D6  0E00               	movlw	0
  4002  0012D8  6E2F               	movwf	?___ftpack+2,c
  4003  0012DA  D04C               	goto	l553
  4004  0012DC                     l1964:
  4005  0012DC  2A30               	incf	___ftpack@exp,f,c
  4006  0012DE  90D8               	bcf	status,0,c
  4007  0012E0  322F               	rrcf	___ftpack@arg+2,f,c
  4008  0012E2  322E               	rrcf	___ftpack@arg+1,f,c
  4009  0012E4  322D               	rrcf	___ftpack@arg,f,c
  4010  0012E6                     l1966:
  4011  0012E6  0E00               	movlw	0
  4012  0012E8  142D               	andwf	___ftpack@arg,w,c
  4013  0012EA  0100               	movlb	0	; () banked
  4014  0012EC  6F60               	movwf	??___ftpack& (0+255),b
  4015  0012EE  0E00               	movlw	0
  4016  0012F0  142E               	andwf	___ftpack@arg+1,w,c
  4017  0012F2  0100               	movlb	0	; () banked
  4018  0012F4  6F61               	movwf	(??___ftpack+1)& (0+255),b
  4019  0012F6  0EFE               	movlw	254
  4020  0012F8  142F               	andwf	___ftpack@arg+2,w,c
  4021  0012FA  0100               	movlb	0	; () banked
  4022  0012FC  6F62               	movwf	(??___ftpack+2)& (0+255),b
  4023  0012FE  0100               	movlb	0	; () banked
  4024  001300  5160               	movf	??___ftpack& (0+255),w,b
  4025  001302  1161               	iorwf	(??___ftpack+1)& (0+255),w,b
  4026  001304  1162               	iorwf	(??___ftpack+2)& (0+255),w,b
  4027  001306  B4D8               	btfsc	status,2,c
  4028  001308  D00C               	goto	l1972
  4029  00130A  D7E8               	goto	l1964
  4030  00130C                     l1968:
  4031                           
  4032                           ; BSR set to: 0
  4033  00130C  2A30               	incf	___ftpack@exp,f,c
  4034                           
  4035                           ; BSR set to: 0
  4036  00130E  0E01               	movlw	1
  4037  001310  262D               	addwf	___ftpack@arg,f,c
  4038  001312  0E00               	movlw	0
  4039  001314  222E               	addwfc	___ftpack@arg+1,f,c
  4040  001316  0E00               	movlw	0
  4041  001318  222F               	addwfc	___ftpack@arg+2,f,c
  4042  00131A  90D8               	bcf	status,0,c
  4043  00131C  322F               	rrcf	___ftpack@arg+2,f,c
  4044  00131E  322E               	rrcf	___ftpack@arg+1,f,c
  4045  001320  322D               	rrcf	___ftpack@arg,f,c
  4046  001322                     l1972:
  4047                           
  4048                           ; BSR set to: 0
  4049  001322  0E00               	movlw	0
  4050  001324  142D               	andwf	___ftpack@arg,w,c
  4051  001326  0100               	movlb	0	; () banked
  4052  001328  6F60               	movwf	??___ftpack& (0+255),b
  4053  00132A  0E00               	movlw	0
  4054  00132C  142E               	andwf	___ftpack@arg+1,w,c
  4055  00132E  0100               	movlb	0	; () banked
  4056  001330  6F61               	movwf	(??___ftpack+1)& (0+255),b
  4057  001332  0EFF               	movlw	255
  4058  001334  142F               	andwf	___ftpack@arg+2,w,c
  4059  001336  0100               	movlb	0	; () banked
  4060  001338  6F62               	movwf	(??___ftpack+2)& (0+255),b
  4061  00133A  0100               	movlb	0	; () banked
  4062  00133C  5160               	movf	??___ftpack& (0+255),w,b
  4063  00133E  1161               	iorwf	(??___ftpack+1)& (0+255),w,b
  4064  001340  1162               	iorwf	(??___ftpack+2)& (0+255),w,b
  4065  001342  B4D8               	btfsc	status,2,c
  4066  001344  D006               	goto	l1976
  4067  001346  D7E2               	goto	l1968
  4068  001348                     l1974:
  4069  001348  0630               	decf	___ftpack@exp,f,c
  4070  00134A  90D8               	bcf	status,0,c
  4071  00134C  362D               	rlcf	___ftpack@arg,f,c
  4072  00134E  362E               	rlcf	___ftpack@arg+1,f,c
  4073  001350  362F               	rlcf	___ftpack@arg+2,f,c
  4074  001352                     l1976:
  4075  001352  AE2E               	btfss	___ftpack@arg+1,7,c
  4076  001354  D7F9               	goto	l1974
  4077  001356  A030               	btfss	___ftpack@exp,0,c
  4078  001358  9E2E               	bcf	___ftpack@arg+1,7,c
  4079  00135A  90D8               	bcf	status,0,c
  4080  00135C  3230               	rrcf	___ftpack@exp,f,c
  4081  00135E  5030               	movf	___ftpack@exp,w,c
  4082  001360  122F               	iorwf	___ftpack@arg+2,f,c
  4083  001362  5031               	movf	___ftpack@sign,w,c
  4084  001364  A4D8               	btfss	status,2,c
  4085  001366  8E2F               	bsf	___ftpack@arg+2,7,c
  4086  001368  C02D  F02D         	movff	___ftpack@arg,?___ftpack
  4087  00136C  C02E  F02E         	movff	___ftpack@arg+1,?___ftpack+1
  4088  001370  C02F  F02F         	movff	___ftpack@arg+2,?___ftpack+2
  4089  001374                     l553:
  4090  001374  0012               	return	
  4091  001376                     __end_of___ftpack:
  4092                           	opt stack 0
  4093                           tblptru	equ	0xFF8
  4094                           tblptrh	equ	0xFF7
  4095                           tblptrl	equ	0xFF6
  4096                           tablat	equ	0xFF5
  4097                           prodh	equ	0xFF4
  4098                           prodl	equ	0xFF3
  4099                           indf0	equ	0xFEF
  4100                           fsr0h	equ	0xFEA
  4101                           fsr0l	equ	0xFE9
  4102                           wreg	equ	0xFE8
  4103                           indf1	equ	0xFE7
  4104                           fsr1h	equ	0xFE2
  4105                           fsr1l	equ	0xFE1
  4106                           indf2	equ	0xFDF
  4107                           postinc2	equ	0xFDE
  4108                           postdec2	equ	0xFDD
  4109                           fsr2h	equ	0xFDA
  4110                           fsr2l	equ	0xFD9
  4111                           status	equ	0xFD8
  4112                           
  4113 ;; *************** function _ReadADC *****************
  4114 ;; Defined at:
  4115 ;;		line 24 in file "adcread.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;		None
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;		None
  4120 ;; Return value:  Size  Location     Type
  4121 ;;                  2   44[COMRAM] int 
  4122 ;; Registers used:
  4123 ;;		wreg, status,2
  4124 ;; Tracked objects:
  4125 ;;		On entry : 0/0
  4126 ;;		On exit  : 0/0
  4127 ;;		Unchanged: 0/0
  4128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4129 ;;      Params:         2       0       0       0       0       0       0       0       0
  4130 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4131 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4132 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4133 ;;Total ram usage:        2 bytes
  4134 ;; Hardware stack levels used:    1
  4135 ;; Hardware stack levels required when called:    5
  4136 ;; This function calls:
  4137 ;;		Nothing
  4138 ;; This function is called by:
  4139 ;;		_main
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           	psect	text22
  4144  0018E2                     __ptext22:
  4145                           	opt stack 0
  4146  0018E2                     _ReadADC:
  4147                           	opt stack 25
  4148                           
  4149                           ;adcread.c: 26: return (((unsigned int)ADRESH)<<8)|(ADRESL);
  4150                           
  4151                           ;incstack = 0
  4152  0018E2  50C4               	movf	4036,w,c	;volatile
  4153  0018E4  6E2E               	movwf	?_ReadADC+1,c
  4154  0018E6  50C3               	movf	4035,w,c	;volatile
  4155  0018E8  6E2D               	movwf	?_ReadADC,c
  4156  0018EA  0012               	return	
  4157  0018EC                     __end_of_ReadADC:
  4158                           	opt stack 0
  4159                           tblptru	equ	0xFF8
  4160                           tblptrh	equ	0xFF7
  4161                           tblptrl	equ	0xFF6
  4162                           tablat	equ	0xFF5
  4163                           prodh	equ	0xFF4
  4164                           prodl	equ	0xFF3
  4165                           indf0	equ	0xFEF
  4166                           fsr0h	equ	0xFEA
  4167                           fsr0l	equ	0xFE9
  4168                           wreg	equ	0xFE8
  4169                           indf1	equ	0xFE7
  4170                           fsr1h	equ	0xFE2
  4171                           fsr1l	equ	0xFE1
  4172                           indf2	equ	0xFDF
  4173                           postinc2	equ	0xFDE
  4174                           postdec2	equ	0xFDD
  4175                           fsr2h	equ	0xFDA
  4176                           fsr2l	equ	0xFD9
  4177                           status	equ	0xFD8
  4178                           
  4179 ;; *************** function _InitApp *****************
  4180 ;; Defined at:
  4181 ;;		line 8 in file "user.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;		None
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;		None
  4186 ;; Return value:  Size  Location     Type
  4187 ;;		None               void
  4188 ;; Registers used:
  4189 ;;		wreg, status,2, status,0, cstack
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4195 ;;      Params:         0       0       0       0       0       0       0       0       0
  4196 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4197 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4198 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4199 ;;Total ram usage:        2 bytes
  4200 ;; Hardware stack levels used:    1
  4201 ;; Hardware stack levels required when called:    6
  4202 ;; This function calls:
  4203 ;;		_OpenADC
  4204 ;;		_SetChanADC
  4205 ;; This function is called by:
  4206 ;;		_main
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           	psect	text23
  4211  00161E                     __ptext23:
  4212                           	opt stack 0
  4213  00161E                     _InitApp:
  4214                           	opt stack 24
  4215                           
  4216                           ;user.c: 10: TRISA = 0x00000001;
  4217                           
  4218                           ;incstack = 0
  4219  00161E  0E01               	movlw	1
  4220  001620  6E92               	movwf	3986,c	;volatile
  4221                           
  4222                           ;user.c: 11: TRISB = 0b00000001;
  4223  001622  0E01               	movlw	1
  4224  001624  6E93               	movwf	3987,c	;volatile
  4225                           
  4226                           ;user.c: 12: TRISC = 0x00;
  4227  001626  0E00               	movlw	0
  4228  001628  6E94               	movwf	3988,c	;volatile
  4229                           
  4230                           ;user.c: 13: TRISD = 0x00;
  4231  00162A  0E00               	movlw	0
  4232  00162C  6E95               	movwf	3989,c	;volatile
  4233                           
  4234                           ;user.c: 14: TRISE = 0x00;
  4235  00162E  0E00               	movlw	0
  4236  001630  6E96               	movwf	3990,c	;volatile
  4237                           
  4238                           ;user.c: 16: ADCON1 = 0x0F;
  4239  001632  0E0F               	movlw	15
  4240  001634  6EC1               	movwf	4033,c	;volatile
  4241                           
  4242                           ;user.c: 17: CMCON = 0x07;
  4243  001636  0E07               	movlw	7
  4244  001638  6EB4               	movwf	4020,c	;volatile
  4245                           
  4246                           ;user.c: 19: PORTA = 0X00;
  4247  00163A  0E00               	movlw	0
  4248  00163C  6E80               	movwf	3968,c	;volatile
  4249                           
  4250                           ;user.c: 20: PORTB = 0X00;
  4251  00163E  0E00               	movlw	0
  4252  001640  6E81               	movwf	3969,c	;volatile
  4253                           
  4254                           ;user.c: 21: PORTC = 0X00;
  4255  001642  0E00               	movlw	0
  4256  001644  6E82               	movwf	3970,c	;volatile
  4257                           
  4258                           ;user.c: 22: PORTD = 0X00;
  4259  001646  0E00               	movlw	0
  4260  001648  6E83               	movwf	3971,c	;volatile
  4261                           
  4262                           ;user.c: 23: PORTE = 0X00;
  4263  00164A  0E00               	movlw	0
  4264  00164C  6E84               	movwf	3972,c	;volatile
  4265                           
  4266                           ;user.c: 25: INTCON2bits.INTEDG0 = 0;
  4267  00164E  9CF1               	bcf	intcon2,6,c	;volatile
  4268                           
  4269                           ;user.c: 26: INTCON2bits.RBIP = 1;
  4270  001650  80F1               	bsf	intcon2,0,c	;volatile
  4271                           
  4272                           ;user.c: 28: INTCONbits.INT0IF = 0;
  4273  001652  92F2               	bcf	intcon,1,c	;volatile
  4274                           
  4275                           ;user.c: 29: INTCONbits.INT0IE = 1;
  4276  001654  88F2               	bsf	intcon,4,c	;volatile
  4277                           
  4278                           ;user.c: 31: RCONbits.IPEN = 1;
  4279  001656  8ED0               	bsf	4048,7,c	;volatile
  4280                           
  4281                           ;user.c: 32: INTCONbits.GIEH = 1;
  4282  001658  8EF2               	bsf	intcon,7,c	;volatile
  4283                           
  4284                           ;user.c: 33: INTCONbits.GIEL = 0;
  4285  00165A  9CF2               	bcf	intcon,6,c	;volatile
  4286                           
  4287                           ;user.c: 36: OpenADC(0b11011111 & 0b11111111 & 0b11110011, 0b10000111 &0b01111111 & 0b11
      +                          111110 & 0b11111101, 0b11111110);
  4288  00165C  6E32               	movwf	??_InitApp& (0+255),c
  4289  00165E  0E04               	movlw	4
  4290  001660  6E2D               	movwf	OpenADC@config2,c
  4291  001662  5032               	movf	??_InitApp& (0+255),w,c
  4292  001664  6E33               	movwf	(??_InitApp+1)& (0+255),c
  4293  001666  0EFE               	movlw	254
  4294  001668  6E2E               	movwf	OpenADC@portconfig,c
  4295  00166A  5033               	movf	(??_InitApp+1)& (0+255),w,c
  4296  00166C  0ED3               	movlw	211
  4297  00166E  EC45  F00B         	call	_OpenADC
  4298                           
  4299                           ;user.c: 37: SetChanADC(0b10000111);
  4300  001672  0E87               	movlw	135
  4301  001674  EC17  F00C         	call	_SetChanADC
  4302                           
  4303                           ;user.c: 38: _delay((unsigned long)((1)*(20000000L/4000.0)));
  4304  001678  0E07               	movlw	7
  4305  00167A  6E32               	movwf	??_InitApp& (0+255),c
  4306  00167C  0E7D               	movlw	125
  4307  00167E                     u1517:
  4308  00167E  2EE8               	decfsz	wreg,f,c
  4309  001680  D7FE               	goto	u1517
  4310  001682  2E32               	decfsz	??_InitApp& (0+255),f,c
  4311  001684  D7FC               	goto	u1517
  4312  001686  F000               	nop	
  4313  001688  0012               	return	
  4314  00168A                     __end_of_InitApp:
  4315                           	opt stack 0
  4316                           tblptru	equ	0xFF8
  4317                           tblptrh	equ	0xFF7
  4318                           tblptrl	equ	0xFF6
  4319                           tablat	equ	0xFF5
  4320                           prodh	equ	0xFF4
  4321                           prodl	equ	0xFF3
  4322                           intcon	equ	0xFF2
  4323                           intcon2	equ	0xFF1
  4324                           indf0	equ	0xFEF
  4325                           fsr0h	equ	0xFEA
  4326                           fsr0l	equ	0xFE9
  4327                           wreg	equ	0xFE8
  4328                           indf1	equ	0xFE7
  4329                           fsr1h	equ	0xFE2
  4330                           fsr1l	equ	0xFE1
  4331                           indf2	equ	0xFDF
  4332                           postinc2	equ	0xFDE
  4333                           postdec2	equ	0xFDD
  4334                           fsr2h	equ	0xFDA
  4335                           fsr2l	equ	0xFD9
  4336                           status	equ	0xFD8
  4337                           
  4338 ;; *************** function _SetChanADC *****************
  4339 ;; Defined at:
  4340 ;;		line 30 in file "adcsetch.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;  channel         1    wreg     unsigned char 
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;  channel         1   45[COMRAM] unsigned char 
  4345 ;; Return value:  Size  Location     Type
  4346 ;;		None               void
  4347 ;; Registers used:
  4348 ;;		wreg, status,2, status,0
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4354 ;;      Params:         0       0       0       0       0       0       0       0       0
  4355 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4356 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4357 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4358 ;;Total ram usage:        2 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; Hardware stack levels required when called:    5
  4361 ;; This function calls:
  4362 ;;		Nothing
  4363 ;; This function is called by:
  4364 ;;		_InitApp
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           	psect	text24
  4369  00182E                     __ptext24:
  4370                           	opt stack 0
  4371  00182E                     _SetChanADC:
  4372                           	opt stack 24
  4373                           
  4374                           ;incstack = 0
  4375                           ;SetChanADC@channel stored from wreg
  4376  00182E  CFE8 F02E          	movff	wreg,SetChanADC@channel
  4377                           
  4378                           ;adcsetch.c: 33: ADCON0 = ((channel >> 1) & 0b00111100) |
  4379                           ;adcsetch.c: 34: (ADCON0 & 0b11000011);
  4380  001832  CFC2 F02D          	movff	4034,??_SetChanADC	;volatile
  4381  001836  0EC3               	movlw	195
  4382  001838  162D               	andwf	??_SetChanADC,f,c
  4383  00183A  90D8               	bcf	status,0,c
  4384  00183C  302E               	rrcf	SetChanADC@channel,w,c
  4385  00183E  0B3C               	andlw	60
  4386  001840  102D               	iorwf	??_SetChanADC,w,c
  4387  001842  6EC2               	movwf	4034,c	;volatile
  4388  001844  0012               	return	
  4389  001846                     __end_of_SetChanADC:
  4390                           	opt stack 0
  4391                           tblptru	equ	0xFF8
  4392                           tblptrh	equ	0xFF7
  4393                           tblptrl	equ	0xFF6
  4394                           tablat	equ	0xFF5
  4395                           prodh	equ	0xFF4
  4396                           prodl	equ	0xFF3
  4397                           intcon	equ	0xFF2
  4398                           intcon2	equ	0xFF1
  4399                           indf0	equ	0xFEF
  4400                           fsr0h	equ	0xFEA
  4401                           fsr0l	equ	0xFE9
  4402                           wreg	equ	0xFE8
  4403                           indf1	equ	0xFE7
  4404                           fsr1h	equ	0xFE2
  4405                           fsr1l	equ	0xFE1
  4406                           indf2	equ	0xFDF
  4407                           postinc2	equ	0xFDE
  4408                           postdec2	equ	0xFDD
  4409                           fsr2h	equ	0xFDA
  4410                           fsr2l	equ	0xFD9
  4411                           status	equ	0xFD8
  4412                           
  4413 ;; *************** function _OpenADC *****************
  4414 ;; Defined at:
  4415 ;;		line 68 in file "adcopen.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  config          1    wreg     unsigned char 
  4418 ;;  config2         1   44[COMRAM] unsigned char 
  4419 ;;  portconfig      1   45[COMRAM] unsigned char 
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;  config          1   48[COMRAM] unsigned char 
  4422 ;; Return value:  Size  Location     Type
  4423 ;;		None               void
  4424 ;; Registers used:
  4425 ;;		wreg, status,2, status,0
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4431 ;;      Params:         2       0       0       0       0       0       0       0       0
  4432 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4433 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4434 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4435 ;;Total ram usage:        5 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    5
  4438 ;; This function calls:
  4439 ;;		Nothing
  4440 ;; This function is called by:
  4441 ;;		_InitApp
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445                           	psect	text25
  4446  00168A                     __ptext25:
  4447                           	opt stack 0
  4448  00168A                     _OpenADC:
  4449                           	opt stack 24
  4450                           
  4451                           ;incstack = 0
  4452                           ;OpenADC@config stored from wreg
  4453  00168A  CFE8 F031          	movff	wreg,OpenADC@config
  4454                           
  4455                           ;adcopen.c: 72: ADCON0 = 0;
  4456  00168E  0E00               	movlw	0
  4457  001690  6EC2               	movwf	4034,c	;volatile
  4458                           
  4459                           ;adcopen.c: 73: ADCON2 = 0;
  4460  001692  0E00               	movlw	0
  4461  001694  6EC0               	movwf	4032,c	;volatile
  4462                           
  4463                           ;adcopen.c: 75: ADCON0 = (config2 >> 1) & 0b00111100;
  4464  001696  90D8               	bcf	status,0,c
  4465  001698  302D               	rrcf	OpenADC@config2,w,c
  4466  00169A  0B3C               	andlw	60
  4467  00169C  6EC2               	movwf	4034,c	;volatile
  4468                           
  4469                           ;adcopen.c: 76: ADCON1 = (portconfig & 0b00001111) |
  4470                           ;adcopen.c: 77: ((config2 << 4) & 0b00110000);
  4471  00169E  C02D  F02F         	movff	OpenADC@config2,??_OpenADC
  4472  0016A2  3A2F               	swapf	??_OpenADC,f,c
  4473  0016A4  0EF0               	movlw	240
  4474  0016A6  162F               	andwf	??_OpenADC,f,c
  4475  0016A8  0E30               	movlw	48
  4476  0016AA  162F               	andwf	??_OpenADC,f,c
  4477  0016AC  502E               	movf	OpenADC@portconfig,w,c
  4478  0016AE  0B0F               	andlw	15
  4479  0016B0  102F               	iorwf	??_OpenADC,w,c
  4480  0016B2  6EC1               	movwf	4033,c	;volatile
  4481                           
  4482                           ;adcopen.c: 78: ADCON2 = (config & 0b10000000) |
  4483                           ;adcopen.c: 79: ((config >> 4) & 0b00000111) |
  4484                           ;adcopen.c: 80: ((config << 2) & 0b00111000);
  4485  0016B4  C031  F02F         	movff	OpenADC@config,??_OpenADC
  4486  0016B8  90D8               	bcf	status,0,c
  4487  0016BA  362F               	rlcf	??_OpenADC,f,c
  4488  0016BC  90D8               	bcf	status,0,c
  4489  0016BE  362F               	rlcf	??_OpenADC,f,c
  4490  0016C0  0E38               	movlw	56
  4491  0016C2  162F               	andwf	??_OpenADC,f,c
  4492  0016C4  C031  F030         	movff	OpenADC@config,??_OpenADC+1
  4493  0016C8  3A30               	swapf	??_OpenADC+1,f,c
  4494  0016CA  0E0F               	movlw	15
  4495  0016CC  1630               	andwf	??_OpenADC+1,f,c
  4496  0016CE  0E07               	movlw	7
  4497  0016D0  1630               	andwf	??_OpenADC+1,f,c
  4498  0016D2  5031               	movf	OpenADC@config,w,c
  4499  0016D4  0B80               	andlw	128
  4500  0016D6  1030               	iorwf	??_OpenADC+1,w,c
  4501  0016D8  102F               	iorwf	??_OpenADC,w,c
  4502  0016DA  6EC0               	movwf	4032,c	;volatile
  4503                           
  4504                           ;adcopen.c: 82: if( config2 & 0b10000000 )
  4505  0016DC  AE2D               	btfss	OpenADC@config2,7,c
  4506  0016DE  D003               	goto	l198
  4507                           
  4508                           ;adcopen.c: 83: {
  4509                           ;adcopen.c: 84: PIR1bits.ADIF = 0;
  4510  0016E0  9C9E               	bcf	3998,6,c	;volatile
  4511                           
  4512                           ;adcopen.c: 85: PIE1bits.ADIE = 1;
  4513  0016E2  8C9D               	bsf	3997,6,c	;volatile
  4514                           
  4515                           ;adcopen.c: 86: INTCONbits.PEIE = 1;
  4516  0016E4  8CF2               	bsf	intcon,6,c	;volatile
  4517  0016E6                     l198:
  4518                           
  4519                           ;adcopen.c: 87: }
  4520                           ;adcopen.c: 88: ADCON0bits.ADON = 1;
  4521  0016E6  80C2               	bsf	4034,0,c	;volatile
  4522  0016E8  0012               	return	
  4523  0016EA                     __end_of_OpenADC:
  4524                           	opt stack 0
  4525                           tblptru	equ	0xFF8
  4526                           tblptrh	equ	0xFF7
  4527                           tblptrl	equ	0xFF6
  4528                           tablat	equ	0xFF5
  4529                           prodh	equ	0xFF4
  4530                           prodl	equ	0xFF3
  4531                           intcon	equ	0xFF2
  4532                           intcon2	equ	0xFF1
  4533                           indf0	equ	0xFEF
  4534                           fsr0h	equ	0xFEA
  4535                           fsr0l	equ	0xFE9
  4536                           wreg	equ	0xFE8
  4537                           indf1	equ	0xFE7
  4538                           fsr1h	equ	0xFE2
  4539                           fsr1l	equ	0xFE1
  4540                           indf2	equ	0xFDF
  4541                           postinc2	equ	0xFDE
  4542                           postdec2	equ	0xFDD
  4543                           fsr2h	equ	0xFDA
  4544                           fsr2l	equ	0xFD9
  4545                           status	equ	0xFD8
  4546                           
  4547 ;; *************** function _ConvertADC *****************
  4548 ;; Defined at:
  4549 ;;		line 22 in file "adcconv.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;		None
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;		None
  4554 ;; Return value:  Size  Location     Type
  4555 ;;		None               void
  4556 ;; Registers used:
  4557 ;;		None
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4563 ;;      Params:         0       0       0       0       0       0       0       0       0
  4564 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4565 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4566 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4567 ;;Total ram usage:        0 bytes
  4568 ;; Hardware stack levels used:    1
  4569 ;; Hardware stack levels required when called:    5
  4570 ;; This function calls:
  4571 ;;		Nothing
  4572 ;; This function is called by:
  4573 ;;		_main
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577                           	psect	text26
  4578  001904                     __ptext26:
  4579                           	opt stack 0
  4580  001904                     _ConvertADC:
  4581                           	opt stack 25
  4582                           
  4583                           ;adcconv.c: 24: ADCON0bits.GO = 1;
  4584                           
  4585                           ;incstack = 0
  4586  001904  82C2               	bsf	4034,1,c	;volatile
  4587  001906  0012               	return	
  4588  001908                     __end_of_ConvertADC:
  4589                           	opt stack 0
  4590                           tblptru	equ	0xFF8
  4591                           tblptrh	equ	0xFF7
  4592                           tblptrl	equ	0xFF6
  4593                           tablat	equ	0xFF5
  4594                           prodh	equ	0xFF4
  4595                           prodl	equ	0xFF3
  4596                           intcon	equ	0xFF2
  4597                           intcon2	equ	0xFF1
  4598                           indf0	equ	0xFEF
  4599                           fsr0h	equ	0xFEA
  4600                           fsr0l	equ	0xFE9
  4601                           wreg	equ	0xFE8
  4602                           indf1	equ	0xFE7
  4603                           fsr1h	equ	0xFE2
  4604                           fsr1l	equ	0xFE1
  4605                           indf2	equ	0xFDF
  4606                           postinc2	equ	0xFDE
  4607                           postdec2	equ	0xFDD
  4608                           fsr2h	equ	0xFDA
  4609                           fsr2l	equ	0xFD9
  4610                           status	equ	0xFD8
  4611                           
  4612 ;; *************** function _ConfigureOscillator *****************
  4613 ;; Defined at:
  4614 ;;		line 6 in file "system.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;		None
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;		None
  4619 ;; Return value:  Size  Location     Type
  4620 ;;		None               void
  4621 ;; Registers used:
  4622 ;;		None
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4628 ;;      Params:         0       0       0       0       0       0       0       0       0
  4629 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4630 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4631 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4632 ;;Total ram usage:        0 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; Hardware stack levels required when called:    5
  4635 ;; This function calls:
  4636 ;;		Nothing
  4637 ;; This function is called by:
  4638 ;;		_main
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642                           	psect	text27
  4643  001908                     __ptext27:
  4644                           	opt stack 0
  4645  001908                     _ConfigureOscillator:
  4646                           	opt stack 25
  4647                           
  4648                           ;incstack = 0
  4649  001908  0012               	return	
  4650  00190A                     __end_of_ConfigureOscillator:
  4651                           	opt stack 0
  4652                           tblptru	equ	0xFF8
  4653                           tblptrh	equ	0xFF7
  4654                           tblptrl	equ	0xFF6
  4655                           tablat	equ	0xFF5
  4656                           prodh	equ	0xFF4
  4657                           prodl	equ	0xFF3
  4658                           intcon	equ	0xFF2
  4659                           intcon2	equ	0xFF1
  4660                           indf0	equ	0xFEF
  4661                           fsr0h	equ	0xFEA
  4662                           fsr0l	equ	0xFE9
  4663                           wreg	equ	0xFE8
  4664                           indf1	equ	0xFE7
  4665                           fsr1h	equ	0xFE2
  4666                           fsr1l	equ	0xFE1
  4667                           indf2	equ	0xFDF
  4668                           postinc2	equ	0xFDE
  4669                           postdec2	equ	0xFDD
  4670                           fsr2h	equ	0xFDA
  4671                           fsr2l	equ	0xFD9
  4672                           status	equ	0xFD8
  4673                           
  4674 ;; *************** function _BusyADC *****************
  4675 ;; Defined at:
  4676 ;;		line 26 in file "adcbusy.c"
  4677 ;; Parameters:    Size  Location     Type
  4678 ;;		None
  4679 ;; Auto vars:     Size  Location     Type
  4680 ;;		None
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  1    wreg      unsigned char 
  4683 ;; Registers used:
  4684 ;;		wreg
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4690 ;;      Params:         0       0       0       0       0       0       0       0       0
  4691 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4692 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4693 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4694 ;;Total ram usage:        0 bytes
  4695 ;; Hardware stack levels used:    1
  4696 ;; Hardware stack levels required when called:    5
  4697 ;; This function calls:
  4698 ;;		Nothing
  4699 ;; This function is called by:
  4700 ;;		_main
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           	psect	text28
  4705  0018CC                     __ptext28:
  4706                           	opt stack 0
  4707  0018CC                     _BusyADC:
  4708                           	opt stack 25
  4709                           
  4710                           ;adcbusy.c: 28: return(ADCON0bits.GO);
  4711                           
  4712                           ;incstack = 0
  4713  0018CC  A2C2               	btfss	4034,1,c	;volatile
  4714  0018CE  D002               	goto	u920
  4715  0018D0  0E01               	movlw	1
  4716  0018D2  D001               	goto	l169
  4717  0018D4                     u920:
  4718  0018D4  0E00               	movlw	0
  4719  0018D6                     l169:
  4720  0018D6  0012               	return	
  4721  0018D8                     __end_of_BusyADC:
  4722                           	opt stack 0
  4723                           tblptru	equ	0xFF8
  4724                           tblptrh	equ	0xFF7
  4725                           tblptrl	equ	0xFF6
  4726                           tablat	equ	0xFF5
  4727                           prodh	equ	0xFF4
  4728                           prodl	equ	0xFF3
  4729                           intcon	equ	0xFF2
  4730                           intcon2	equ	0xFF1
  4731                           indf0	equ	0xFEF
  4732                           fsr0h	equ	0xFEA
  4733                           fsr0l	equ	0xFE9
  4734                           wreg	equ	0xFE8
  4735                           indf1	equ	0xFE7
  4736                           fsr1h	equ	0xFE2
  4737                           fsr1l	equ	0xFE1
  4738                           indf2	equ	0xFDF
  4739                           postinc2	equ	0xFDE
  4740                           postdec2	equ	0xFDD
  4741                           fsr2h	equ	0xFDA
  4742                           fsr2l	equ	0xFD9
  4743                           status	equ	0xFD8
  4744                           
  4745 ;; *************** function _low_isr *****************
  4746 ;; Defined at:
  4747 ;;		line 16 in file "interrupts.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;		None
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;		None
  4752 ;; Return value:  Size  Location     Type
  4753 ;;		None               void
  4754 ;; Registers used:
  4755 ;;		None
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4761 ;;      Params:         0       0       0       0       0       0       0       0       0
  4762 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4763 ;;      Temps:         17       0       0       0       0       0       0       0       0
  4764 ;;      Totals:        17       0       0       0       0       0       0       0       0
  4765 ;;Total ram usage:       17 bytes
  4766 ;; Hardware stack levels used:    1
  4767 ;; Hardware stack levels required when called:    4
  4768 ;; This function calls:
  4769 ;;		Nothing
  4770 ;; This function is called by:
  4771 ;;		Interrupt level 1
  4772 ;; This function uses a non-reentrant model
  4773 ;;
  4774                           
  4775                           	psect	intcodelo
  4776  000018                     __pintcodelo:
  4777                           	opt stack 0
  4778  000018                     _low_isr:
  4779                           	opt stack 22
  4780                           
  4781                           ;incstack = 0
  4782  000018  CFD8 F001          	movff	status,??_low_isr
  4783  00001C  CFE8 F002          	movff	wreg,??_low_isr+1
  4784  000020  CFE0 F003          	movff	bsr,??_low_isr+2
  4785  000024  CFFA F004          	movff	pclath,??_low_isr+3
  4786  000028  CFFB F005          	movff	pclatu,??_low_isr+4
  4787  00002C  CFE9 F006          	movff	fsr0l,??_low_isr+5
  4788  000030  CFEA F007          	movff	fsr0h,??_low_isr+6
  4789  000034  CFE1 F008          	movff	fsr1l,??_low_isr+7
  4790  000038  CFE2 F009          	movff	fsr1h,??_low_isr+8
  4791  00003C  CFD9 F00A          	movff	fsr2l,??_low_isr+9
  4792  000040  CFDA F00B          	movff	fsr2h,??_low_isr+10
  4793  000044  CFF3 F00C          	movff	prodl,??_low_isr+11
  4794  000048  CFF4 F00D          	movff	prodh,??_low_isr+12
  4795  00004C  CFF6 F00E          	movff	tblptrl,??_low_isr+13
  4796  000050  CFF7 F00F          	movff	tblptrh,??_low_isr+14
  4797  000054  CFF8 F010          	movff	tblptru,??_low_isr+15
  4798  000058  CFF5 F011          	movff	tablat,??_low_isr+16
  4799  00005C  C011  FFF5         	movff	??_low_isr+16,tablat
  4800  000060  C010  FFF8         	movff	??_low_isr+15,tblptru
  4801  000064  C00F  FFF7         	movff	??_low_isr+14,tblptrh
  4802  000068  C00E  FFF6         	movff	??_low_isr+13,tblptrl
  4803  00006C  C00D  FFF4         	movff	??_low_isr+12,prodh
  4804  000070  C00C  FFF3         	movff	??_low_isr+11,prodl
  4805  000074  C00B  FFDA         	movff	??_low_isr+10,fsr2h
  4806  000078  C00A  FFD9         	movff	??_low_isr+9,fsr2l
  4807  00007C  C009  FFE2         	movff	??_low_isr+8,fsr1h
  4808  000080  C008  FFE1         	movff	??_low_isr+7,fsr1l
  4809  000084  C007  FFEA         	movff	??_low_isr+6,fsr0h
  4810  000088  C006  FFE9         	movff	??_low_isr+5,fsr0l
  4811  00008C  C005  FFFB         	movff	??_low_isr+4,pclatu
  4812  000090  C004  FFFA         	movff	??_low_isr+3,pclath
  4813  000094  C003  FFE0         	movff	??_low_isr+2,bsr
  4814  000098  C002  FFE8         	movff	??_low_isr+1,wreg
  4815  00009C  C001  FFD8         	movff	??_low_isr,status
  4816  0000A0  0010               	retfie	
  4817  0000A2                     __end_of_low_isr:
  4818                           	opt stack 0
  4819                           pclatu	equ	0xFFB
  4820                           pclath	equ	0xFFA
  4821                           tblptru	equ	0xFF8
  4822                           tblptrh	equ	0xFF7
  4823                           tblptrl	equ	0xFF6
  4824                           tablat	equ	0xFF5
  4825                           prodh	equ	0xFF4
  4826                           prodl	equ	0xFF3
  4827                           intcon	equ	0xFF2
  4828                           intcon2	equ	0xFF1
  4829                           indf0	equ	0xFEF
  4830                           fsr0h	equ	0xFEA
  4831                           fsr0l	equ	0xFE9
  4832                           wreg	equ	0xFE8
  4833                           indf1	equ	0xFE7
  4834                           fsr1h	equ	0xFE2
  4835                           fsr1l	equ	0xFE1
  4836                           bsr	equ	0xFE0
  4837                           indf2	equ	0xFDF
  4838                           postinc2	equ	0xFDE
  4839                           postdec2	equ	0xFDD
  4840                           fsr2h	equ	0xFDA
  4841                           fsr2l	equ	0xFD9
  4842                           status	equ	0xFD8
  4843                           
  4844 ;; *************** function _high_isr *****************
  4845 ;; Defined at:
  4846 ;;		line 7 in file "interrupts.c"
  4847 ;; Parameters:    Size  Location     Type
  4848 ;;		None
  4849 ;; Auto vars:     Size  Location     Type
  4850 ;;		None
  4851 ;; Return value:  Size  Location     Type
  4852 ;;		None               void
  4853 ;; Registers used:
  4854 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4855 ;; Tracked objects:
  4856 ;;		On entry : 0/0
  4857 ;;		On exit  : 0/0
  4858 ;;		Unchanged: 0/0
  4859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4860 ;;      Params:         0       0       0       0       0       0       0       0       0
  4861 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4862 ;;      Temps:         15       0       0       0       0       0       0       0       0
  4863 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4864 ;;Total ram usage:       15 bytes
  4865 ;; Hardware stack levels used:    1
  4866 ;; Hardware stack levels required when called:    3
  4867 ;; This function calls:
  4868 ;;		i2_lcd_clear
  4869 ;;		i2_lcd_write_buffer
  4870 ;; This function is called by:
  4871 ;;		Interrupt level 2
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           	psect	intcode
  4876  000008                     __pintcode:
  4877                           	opt stack 0
  4878  000008                     _high_isr:
  4879                           	opt stack 22
  4880                           
  4881                           ;incstack = 0
  4882  000008  CFFA F01F          	movff	pclath,??_high_isr+1
  4883  00000C  CFFB F020          	movff	pclatu,??_high_isr+2
  4884  000010  ED0C  F00A         	call	int_func,f	;refresh shadow registers
  4885                           pclatu	equ	0xFFB
  4886                           pclath	equ	0xFFA
  4887                           tblptru	equ	0xFF8
  4888                           tblptrh	equ	0xFF7
  4889                           tblptrl	equ	0xFF6
  4890                           tablat	equ	0xFF5
  4891                           prodh	equ	0xFF4
  4892                           prodl	equ	0xFF3
  4893                           intcon	equ	0xFF2
  4894                           intcon2	equ	0xFF1
  4895                           indf0	equ	0xFEF
  4896                           fsr0h	equ	0xFEA
  4897                           fsr0l	equ	0xFE9
  4898                           wreg	equ	0xFE8
  4899                           indf1	equ	0xFE7
  4900                           fsr1h	equ	0xFE2
  4901                           fsr1l	equ	0xFE1
  4902                           bsr	equ	0xFE0
  4903                           indf2	equ	0xFDF
  4904                           postinc2	equ	0xFDE
  4905                           postdec2	equ	0xFDD
  4906                           fsr2h	equ	0xFDA
  4907                           fsr2l	equ	0xFD9
  4908                           status	equ	0xFD8
  4909                           
  4910                           	psect	intcode_body
  4911  001418                     __pintcode_body:
  4912                           	opt stack 22
  4913  001418                     int_func:
  4914                           	opt stack 22
  4915  001418  0006               	pop		; remove dummy address from shadow register refresh
  4916  00141A  CFE9 F021          	movff	fsr0l,??_high_isr+3
  4917  00141E  CFEA F022          	movff	fsr0h,??_high_isr+4
  4918  001422  CFE1 F023          	movff	fsr1l,??_high_isr+5
  4919  001426  CFE2 F024          	movff	fsr1h,??_high_isr+6
  4920  00142A  CFD9 F025          	movff	fsr2l,??_high_isr+7
  4921  00142E  CFDA F026          	movff	fsr2h,??_high_isr+8
  4922  001432  CFF3 F027          	movff	prodl,??_high_isr+9
  4923  001436  CFF4 F028          	movff	prodh,??_high_isr+10
  4924  00143A  CFF6 F029          	movff	tblptrl,??_high_isr+11
  4925  00143E  CFF7 F02A          	movff	tblptrh,??_high_isr+12
  4926  001442  CFF8 F02B          	movff	tblptru,??_high_isr+13
  4927  001446  CFF5 F02C          	movff	tablat,??_high_isr+14
  4928                           
  4929                           ;interrupts.c: 8: if((INTCONbits.INT0IF == 1) && (INTCONbits.INT0IE == 1)){
  4930  00144A  B2F2               	btfsc	intcon,1,c	;volatile
  4931  00144C  A8F2               	btfss	intcon,4,c	;volatile
  4932  00144E  D014               	goto	i2l12
  4933                           
  4934                           ;interrupts.c: 9: lcd_clear();
  4935  001450  EC7E  F00C         	call	i2_lcd_clear	;wreg free
  4936                           
  4937                           ;interrupts.c: 10: lcd_write_buffer("INTERRUPT INT0", 14);
  4938  001454  0E08               	movlw	high STR_1
  4939  001456  6E15               	movwf	i2lcd_write_buffer@buffer+1,c
  4940  001458  0E2E               	movlw	low STR_1
  4941  00145A  6E14               	movwf	i2lcd_write_buffer@buffer,c
  4942  00145C  6E1E               	movwf	??_high_isr& (0+255),c
  4943  00145E  0E0E               	movlw	14
  4944  001460  6E16               	movwf	i2lcd_write_buffer@size,c
  4945  001462  501E               	movf	??_high_isr& (0+255),w,c
  4946  001464  EC59  F00A         	call	i2_lcd_write_buffer	;wreg free
  4947                           
  4948                           ;interrupts.c: 11: _delay((unsigned long)((20)*(20000000L/4000.0)));
  4949  001468  0E82               	movlw	130
  4950  00146A  6E1E               	movwf	??_high_isr& (0+255),c
  4951  00146C  0EDE               	movlw	222
  4952  00146E                     i2u152_47:
  4953  00146E  2EE8               	decfsz	wreg,f,c
  4954  001470  D7FE               	goto	i2u152_47
  4955  001472  2E1E               	decfsz	??_high_isr& (0+255),f,c
  4956  001474  D7FC               	goto	i2u152_47
  4957                           
  4958                           ;interrupts.c: 12: INTCONbits.INT0IF = 0;
  4959  001476  92F2               	bcf	intcon,1,c	;volatile
  4960  001478                     i2l12:
  4961  001478  C02C  FFF5         	movff	??_high_isr+14,tablat
  4962  00147C  C02B  FFF8         	movff	??_high_isr+13,tblptru
  4963  001480  C02A  FFF7         	movff	??_high_isr+12,tblptrh
  4964  001484  C029  FFF6         	movff	??_high_isr+11,tblptrl
  4965  001488  C028  FFF4         	movff	??_high_isr+10,prodh
  4966  00148C  C027  FFF3         	movff	??_high_isr+9,prodl
  4967  001490  C026  FFDA         	movff	??_high_isr+8,fsr2h
  4968  001494  C025  FFD9         	movff	??_high_isr+7,fsr2l
  4969  001498  C024  FFE2         	movff	??_high_isr+6,fsr1h
  4970  00149C  C023  FFE1         	movff	??_high_isr+5,fsr1l
  4971  0014A0  C022  FFEA         	movff	??_high_isr+4,fsr0h
  4972  0014A4  C021  FFE9         	movff	??_high_isr+3,fsr0l
  4973  0014A8  C020  FFFB         	movff	??_high_isr+2,pclatu
  4974  0014AC  C01F  FFFA         	movff	??_high_isr+1,pclath
  4975  0014B0  0011               	retfie		f
  4976  0014B2                     __end_of_high_isr:
  4977                           	opt stack 0
  4978                           pclatu	equ	0xFFB
  4979                           pclath	equ	0xFFA
  4980                           tblptru	equ	0xFF8
  4981                           tblptrh	equ	0xFF7
  4982                           tblptrl	equ	0xFF6
  4983                           tablat	equ	0xFF5
  4984                           prodh	equ	0xFF4
  4985                           prodl	equ	0xFF3
  4986                           intcon	equ	0xFF2
  4987                           intcon2	equ	0xFF1
  4988                           indf0	equ	0xFEF
  4989                           fsr0h	equ	0xFEA
  4990                           fsr0l	equ	0xFE9
  4991                           wreg	equ	0xFE8
  4992                           indf1	equ	0xFE7
  4993                           fsr1h	equ	0xFE2
  4994                           fsr1l	equ	0xFE1
  4995                           bsr	equ	0xFE0
  4996                           indf2	equ	0xFDF
  4997                           postinc2	equ	0xFDE
  4998                           postdec2	equ	0xFDD
  4999                           fsr2h	equ	0xFDA
  5000                           fsr2l	equ	0xFD9
  5001                           status	equ	0xFD8
  5002                           
  5003 ;; *************** function i2_lcd_write_buffer *****************
  5004 ;; Defined at:
  5005 ;;		line 54 in file "lcd.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;  buffer          2   19[COMRAM] PTR const unsigned char 
  5008 ;;		 -> main@buffer(16), STR_1(15), 
  5009 ;;  size            1   21[COMRAM] unsigned char 
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;  lcd_write_bu    2   27[COMRAM] int 
  5012 ;;  lcd_write_bu    2   25[COMRAM] int 
  5013 ;; Return value:  Size  Location     Type
  5014 ;;		None               void
  5015 ;; Registers used:
  5016 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5017 ;; Tracked objects:
  5018 ;;		On entry : 0/0
  5019 ;;		On exit  : 0/0
  5020 ;;		Unchanged: 0/0
  5021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5022 ;;      Params:         3       0       0       0       0       0       0       0       0
  5023 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5024 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5025 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5026 ;;Total ram usage:       10 bytes
  5027 ;; Hardware stack levels used:    1
  5028 ;; Hardware stack levels required when called:    2
  5029 ;; This function calls:
  5030 ;;		i2_lcd_write
  5031 ;; This function is called by:
  5032 ;;		_high_isr
  5033 ;; This function uses a non-reentrant model
  5034 ;;
  5035                           
  5036                           	psect	text31
  5037  0014B2                     __ptext31:
  5038                           	opt stack 0
  5039  0014B2                     i2_lcd_write_buffer:
  5040                           	opt stack 22
  5041                           
  5042                           ;lcd.c: 55: int pos = 0;
  5043                           
  5044                           ;incstack = 0
  5045  0014B2  0E00               	movlw	0
  5046  0014B4  6E1D               	movwf	i2lcd_write_buffer@pos+1,c
  5047  0014B6  0E00               	movlw	0
  5048  0014B8  6E1C               	movwf	i2lcd_write_buffer@pos,c
  5049                           
  5050                           ;lcd.c: 56: size = (size > 0x10) ? size = 0x10 : size;
  5051  0014BA  0E11               	movlw	17
  5052  0014BC  5C16               	subwf	i2lcd_write_buffer@size,w,c
  5053  0014BE  A0D8               	btfss	status,0,c
  5054  0014C0  D004               	goto	L6
  5055  0014C2  6E17               	movwf	??i2_lcd_write_buffer& (0+255),c
  5056  0014C4  0E10               	movlw	16
  5057  0014C6  6E16               	movwf	i2lcd_write_buffer@size,c
  5058  0014C8  5017               	movf	??i2_lcd_write_buffer& (0+255),w,c
  5059  0014CA                     L6:
  5060  0014CA  C016  F01A         	movff	i2lcd_write_buffer@size,i2_lcd_write_buffer$577
  5061  0014CE  6A1B               	clrf	i2_lcd_write_buffer$577+1,c
  5062  0014D0  C01A  F016         	movff	i2_lcd_write_buffer$577,i2lcd_write_buffer@size
  5063                           
  5064                           ;lcd.c: 57: for (pos = 0; pos < size; pos++)
  5065  0014D4  0E00               	movlw	0
  5066  0014D6  6E1D               	movwf	i2lcd_write_buffer@pos+1,c
  5067  0014D8  0E00               	movlw	0
  5068  0014DA  6E1C               	movwf	i2lcd_write_buffer@pos,c
  5069  0014DC  D01C               	goto	i2l2210
  5070  0014DE                     i2l2206:
  5071                           
  5072                           ;lcd.c: 58: {
  5073                           ;lcd.c: 59: lcd_write(buffer[pos]);
  5074  0014DE  C014  F017         	movff	i2lcd_write_buffer@buffer,??i2_lcd_write_buffer
  5075  0014E2  C015  F018         	movff	i2lcd_write_buffer@buffer+1,??i2_lcd_write_buffer+1
  5076  0014E6  501C               	movf	i2lcd_write_buffer@pos,w,c
  5077  0014E8  2617               	addwf	??i2_lcd_write_buffer,f,c
  5078  0014EA  501D               	movf	i2lcd_write_buffer@pos+1,w,c
  5079  0014EC  2218               	addwfc	??i2_lcd_write_buffer+1,f,c
  5080  0014EE  C017  FFF6         	movff	??i2_lcd_write_buffer,tblptrl
  5081  0014F2  C018  FFF7         	movff	??i2_lcd_write_buffer+1,tblptrh
  5082  0014F6  6AF8               	clrf	tblptru,c
  5083  0014F8  0E07               	movlw	(high __ramtop+-1)
  5084  0014FA  64F7               	cpfsgt	tblptrh,c
  5085  0014FC  D003               	bra	i2u146_47
  5086  0014FE  0008               	tblrd		*
  5087  001500  50F5               	movf	tablat,w,c
  5088  001502  D005               	bra	i2u146_40
  5089  001504                     i2u146_47:
  5090  001504  CFF6 FFE9          	movff	tblptrl,fsr0l
  5091  001508  CFF7 FFEA          	movff	tblptrh,fsr0h
  5092  00150C  50EF               	movf	indf0,w,c
  5093  00150E                     i2u146_40:
  5094  00150E  EC39  F00C         	call	i2_lcd_write
  5095  001512  4A1C               	infsnz	i2lcd_write_buffer@pos,f,c
  5096  001514  2A1D               	incf	i2lcd_write_buffer@pos+1,f,c
  5097  001516                     i2l2210:
  5098  001516  5016               	movf	i2lcd_write_buffer@size,w,c
  5099  001518  6E17               	movwf	??i2_lcd_write_buffer& (0+255),c
  5100  00151A  6A18               	clrf	(??i2_lcd_write_buffer+1)& (0+255),c
  5101  00151C  501D               	movf	i2lcd_write_buffer@pos+1,w,c
  5102  00151E  0A80               	xorlw	128
  5103  001520  6E19               	movwf	(??i2_lcd_write_buffer+2)& (0+255),c
  5104  001522  5017               	movf	??i2_lcd_write_buffer,w,c
  5105  001524  5C1C               	subwf	i2lcd_write_buffer@pos,w,c
  5106  001526  5018               	movf	??i2_lcd_write_buffer+1,w,c
  5107  001528  0A80               	xorlw	128
  5108  00152A  5819               	subwfb	(??i2_lcd_write_buffer+2)& (0+255),w,c
  5109  00152C  B0D8               	btfsc	status,0,c
  5110  00152E  0012               	return	
  5111  001530  D7D6               	goto	i2l2206
  5112  001532                     __end_ofi2_lcd_write_buffer:
  5113                           	opt stack 0
  5114                           pclatu	equ	0xFFB
  5115                           pclath	equ	0xFFA
  5116                           tblptru	equ	0xFF8
  5117                           tblptrh	equ	0xFF7
  5118                           tblptrl	equ	0xFF6
  5119                           tablat	equ	0xFF5
  5120                           prodh	equ	0xFF4
  5121                           prodl	equ	0xFF3
  5122                           intcon	equ	0xFF2
  5123                           intcon2	equ	0xFF1
  5124                           indf0	equ	0xFEF
  5125                           fsr0h	equ	0xFEA
  5126                           fsr0l	equ	0xFE9
  5127                           wreg	equ	0xFE8
  5128                           indf1	equ	0xFE7
  5129                           fsr1h	equ	0xFE2
  5130                           fsr1l	equ	0xFE1
  5131                           bsr	equ	0xFE0
  5132                           indf2	equ	0xFDF
  5133                           postinc2	equ	0xFDE
  5134                           postdec2	equ	0xFDD
  5135                           fsr2h	equ	0xFDA
  5136                           fsr2l	equ	0xFD9
  5137                           status	equ	0xFD8
  5138                           
  5139 ;; *************** function i2_lcd_write *****************
  5140 ;; Defined at:
  5141 ;;		line 36 in file "lcd.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;  x               1    wreg     unsigned char 
  5144 ;; Auto vars:     Size  Location     Type
  5145 ;;  x               1   18[COMRAM] unsigned char 
  5146 ;; Return value:  Size  Location     Type
  5147 ;;		None               void
  5148 ;; Registers used:
  5149 ;;		wreg, cstack
  5150 ;; Tracked objects:
  5151 ;;		On entry : 0/0
  5152 ;;		On exit  : 0/0
  5153 ;;		Unchanged: 0/0
  5154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5155 ;;      Params:         0       0       0       0       0       0       0       0       0
  5156 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5157 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5158 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5159 ;;Total ram usage:        1 bytes
  5160 ;; Hardware stack levels used:    1
  5161 ;; Hardware stack levels required when called:    1
  5162 ;; This function calls:
  5163 ;;		i2_lcd_delay
  5164 ;; This function is called by:
  5165 ;;		i2_lcd_write_buffer
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168                           
  5169                           	psect	text32
  5170  001872                     __ptext32:
  5171                           	opt stack 0
  5172  001872                     i2_lcd_write:
  5173                           	opt stack 22
  5174                           
  5175                           ;incstack = 0
  5176                           ;i2lcd_write@x stored from wreg
  5177  001872  CFE8 F013          	movff	wreg,i2lcd_write@x
  5178                           
  5179                           ;lcd.c: 37: PORTD = x;
  5180  001876  C013  FF83         	movff	i2lcd_write@x,3971	;volatile
  5181                           
  5182                           ;lcd.c: 38: PORTAbits.RA1 = 1;
  5183  00187A  8280               	bsf	3968,1,c	;volatile
  5184                           
  5185                           ;lcd.c: 39: PORTAbits.RA2 = 0;
  5186  00187C  9480               	bcf	3968,2,c	;volatile
  5187                           
  5188                           ;lcd.c: 40: PORTAbits.RA3 = 0;
  5189  00187E  9680               	bcf	3968,3,c	;volatile
  5190                           
  5191                           ;lcd.c: 41: lcd_delay();
  5192  001880  EC57  F00C         	call	i2_lcd_delay	;wreg free
  5193                           
  5194                           ;lcd.c: 42: PORTAbits.RA3 = 1;
  5195  001884  8680               	bsf	3968,3,c	;volatile
  5196  001886  0012               	return	
  5197  001888                     __end_ofi2_lcd_write:
  5198                           	opt stack 0
  5199                           pclatu	equ	0xFFB
  5200                           pclath	equ	0xFFA
  5201                           tblptru	equ	0xFF8
  5202                           tblptrh	equ	0xFF7
  5203                           tblptrl	equ	0xFF6
  5204                           tablat	equ	0xFF5
  5205                           prodh	equ	0xFF4
  5206                           prodl	equ	0xFF3
  5207                           intcon	equ	0xFF2
  5208                           intcon2	equ	0xFF1
  5209                           indf0	equ	0xFEF
  5210                           fsr0h	equ	0xFEA
  5211                           fsr0l	equ	0xFE9
  5212                           wreg	equ	0xFE8
  5213                           indf1	equ	0xFE7
  5214                           fsr1h	equ	0xFE2
  5215                           fsr1l	equ	0xFE1
  5216                           bsr	equ	0xFE0
  5217                           indf2	equ	0xFDF
  5218                           postinc2	equ	0xFDE
  5219                           postdec2	equ	0xFDD
  5220                           fsr2h	equ	0xFDA
  5221                           fsr2l	equ	0xFD9
  5222                           status	equ	0xFD8
  5223                           
  5224 ;; *************** function i2_lcd_clear *****************
  5225 ;; Defined at:
  5226 ;;		line 89 in file "lcd.c"
  5227 ;; Parameters:    Size  Location     Type
  5228 ;;		None
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;		None
  5231 ;; Return value:  Size  Location     Type
  5232 ;;		None               void
  5233 ;; Registers used:
  5234 ;;		wreg, cstack
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5240 ;;      Params:         0       0       0       0       0       0       0       0       0
  5241 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5242 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5243 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5244 ;;Total ram usage:        0 bytes
  5245 ;; Hardware stack levels used:    1
  5246 ;; Hardware stack levels required when called:    2
  5247 ;; This function calls:
  5248 ;;		i2_lcd_write_cmd
  5249 ;; This function is called by:
  5250 ;;		_high_isr
  5251 ;; This function uses a non-reentrant model
  5252 ;;
  5253                           
  5254                           	psect	text33
  5255  0018FC                     __ptext33:
  5256                           	opt stack 0
  5257  0018FC                     i2_lcd_clear:
  5258                           	opt stack 22
  5259                           
  5260                           ;lcd.c: 90: lcd_write_cmd(0x01);
  5261                           
  5262                           ;incstack = 0
  5263  0018FC  0E01               	movlw	1
  5264  0018FE  EC44  F00C         	call	i2_lcd_write_cmd
  5265  001902  0012               	return	
  5266  001904                     __end_ofi2_lcd_clear:
  5267                           	opt stack 0
  5268                           pclatu	equ	0xFFB
  5269                           pclath	equ	0xFFA
  5270                           tblptru	equ	0xFF8
  5271                           tblptrh	equ	0xFF7
  5272                           tblptrl	equ	0xFF6
  5273                           tablat	equ	0xFF5
  5274                           prodh	equ	0xFF4
  5275                           prodl	equ	0xFF3
  5276                           intcon	equ	0xFF2
  5277                           intcon2	equ	0xFF1
  5278                           indf0	equ	0xFEF
  5279                           fsr0h	equ	0xFEA
  5280                           fsr0l	equ	0xFE9
  5281                           wreg	equ	0xFE8
  5282                           indf1	equ	0xFE7
  5283                           fsr1h	equ	0xFE2
  5284                           fsr1l	equ	0xFE1
  5285                           bsr	equ	0xFE0
  5286                           indf2	equ	0xFDF
  5287                           postinc2	equ	0xFDE
  5288                           postdec2	equ	0xFDD
  5289                           fsr2h	equ	0xFDA
  5290                           fsr2l	equ	0xFD9
  5291                           status	equ	0xFD8
  5292                           
  5293 ;; *************** function i2_lcd_write_cmd *****************
  5294 ;; Defined at:
  5295 ;;		line 45 in file "lcd.c"
  5296 ;; Parameters:    Size  Location     Type
  5297 ;;  x               1    wreg     unsigned char 
  5298 ;; Auto vars:     Size  Location     Type
  5299 ;;  x               1   18[COMRAM] unsigned char 
  5300 ;; Return value:  Size  Location     Type
  5301 ;;		None               void
  5302 ;; Registers used:
  5303 ;;		wreg, cstack
  5304 ;; Tracked objects:
  5305 ;;		On entry : 0/0
  5306 ;;		On exit  : 0/0
  5307 ;;		Unchanged: 0/0
  5308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5309 ;;      Params:         0       0       0       0       0       0       0       0       0
  5310 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5311 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5312 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5313 ;;Total ram usage:        1 bytes
  5314 ;; Hardware stack levels used:    1
  5315 ;; Hardware stack levels required when called:    1
  5316 ;; This function calls:
  5317 ;;		i2_lcd_delay
  5318 ;; This function is called by:
  5319 ;;		i2_lcd_clear
  5320 ;; This function uses a non-reentrant model
  5321 ;;
  5322                           
  5323                           	psect	text34
  5324  001888                     __ptext34:
  5325                           	opt stack 0
  5326  001888                     i2_lcd_write_cmd:
  5327                           	opt stack 22
  5328                           
  5329                           ;incstack = 0
  5330                           ;i2lcd_write_cmd@x stored from wreg
  5331  001888  CFE8 F013          	movff	wreg,i2lcd_write_cmd@x
  5332                           
  5333                           ;lcd.c: 46: PORTD = x;
  5334  00188C  C013  FF83         	movff	i2lcd_write_cmd@x,3971	;volatile
  5335                           
  5336                           ;lcd.c: 47: PORTAbits.RA1 = 0;
  5337  001890  9280               	bcf	3968,1,c	;volatile
  5338                           
  5339                           ;lcd.c: 48: PORTAbits.RA2 = 0;
  5340  001892  9480               	bcf	3968,2,c	;volatile
  5341                           
  5342                           ;lcd.c: 49: PORTAbits.RA3 = 0;
  5343  001894  9680               	bcf	3968,3,c	;volatile
  5344                           
  5345                           ;lcd.c: 50: lcd_delay();
  5346  001896  EC57  F00C         	call	i2_lcd_delay	;wreg free
  5347                           
  5348                           ;lcd.c: 51: PORTAbits.RA3 = 1;
  5349  00189A  8680               	bsf	3968,3,c	;volatile
  5350  00189C  0012               	return	
  5351  00189E                     __end_ofi2_lcd_write_cmd:
  5352                           	opt stack 0
  5353                           pclatu	equ	0xFFB
  5354                           pclath	equ	0xFFA
  5355                           tblptru	equ	0xFF8
  5356                           tblptrh	equ	0xFF7
  5357                           tblptrl	equ	0xFF6
  5358                           tablat	equ	0xFF5
  5359                           prodh	equ	0xFF4
  5360                           prodl	equ	0xFF3
  5361                           intcon	equ	0xFF2
  5362                           intcon2	equ	0xFF1
  5363                           indf0	equ	0xFEF
  5364                           fsr0h	equ	0xFEA
  5365                           fsr0l	equ	0xFE9
  5366                           wreg	equ	0xFE8
  5367                           indf1	equ	0xFE7
  5368                           fsr1h	equ	0xFE2
  5369                           fsr1l	equ	0xFE1
  5370                           bsr	equ	0xFE0
  5371                           indf2	equ	0xFDF
  5372                           postinc2	equ	0xFDE
  5373                           postdec2	equ	0xFDD
  5374                           fsr2h	equ	0xFDA
  5375                           fsr2l	equ	0xFD9
  5376                           status	equ	0xFD8
  5377                           
  5378 ;; *************** function i2_lcd_delay *****************
  5379 ;; Defined at:
  5380 ;;		line 85 in file "lcd.c"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;		None
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;		None
  5385 ;; Return value:  Size  Location     Type
  5386 ;;		None               void
  5387 ;; Registers used:
  5388 ;;		wreg
  5389 ;; Tracked objects:
  5390 ;;		On entry : 0/0
  5391 ;;		On exit  : 0/0
  5392 ;;		Unchanged: 0/0
  5393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5394 ;;      Params:         0       0       0       0       0       0       0       0       0
  5395 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5396 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5397 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5398 ;;Total ram usage:        1 bytes
  5399 ;; Hardware stack levels used:    1
  5400 ;; This function calls:
  5401 ;;		Nothing
  5402 ;; This function is called by:
  5403 ;;		i2_lcd_write
  5404 ;;		i2_lcd_write_cmd
  5405 ;; This function uses a non-reentrant model
  5406 ;;
  5407                           
  5408                           	psect	text35
  5409  0018AE                     __ptext35:
  5410                           	opt stack 0
  5411  0018AE                     i2_lcd_delay:
  5412                           	opt stack 22
  5413                           
  5414                           ;lcd.c: 86: _delay((unsigned long)((2)*(20000000L/4000.0)));
  5415                           
  5416                           ;incstack = 0
  5417  0018AE  0E0D               	movlw	13
  5418  0018B0  6E12               	movwf	??i2_lcd_delay& (0+255),c
  5419  0018B2  0EFC               	movlw	252
  5420  0018B4                     i2u153_47:
  5421  0018B4  2EE8               	decfsz	wreg,f,c
  5422  0018B6  D7FE               	goto	i2u153_47
  5423  0018B8  2E12               	decfsz	??i2_lcd_delay& (0+255),f,c
  5424  0018BA  D7FC               	goto	i2u153_47
  5425  0018BC  0012               	return	
  5426  0018BE                     __end_ofi2_lcd_delay:
  5427                           	opt stack 0
  5428                           pclatu	equ	0xFFB
  5429                           pclath	equ	0xFFA
  5430                           tblptru	equ	0xFF8
  5431                           tblptrh	equ	0xFF7
  5432                           tblptrl	equ	0xFF6
  5433                           tablat	equ	0xFF5
  5434                           prodh	equ	0xFF4
  5435                           prodl	equ	0xFF3
  5436                           intcon	equ	0xFF2
  5437                           intcon2	equ	0xFF1
  5438                           indf0	equ	0xFEF
  5439                           fsr0h	equ	0xFEA
  5440                           fsr0l	equ	0xFE9
  5441                           wreg	equ	0xFE8
  5442                           indf1	equ	0xFE7
  5443                           fsr1h	equ	0xFE2
  5444                           fsr1l	equ	0xFE1
  5445                           bsr	equ	0xFE0
  5446                           indf2	equ	0xFDF
  5447                           postinc2	equ	0xFDE
  5448                           postdec2	equ	0xFDD
  5449                           fsr2h	equ	0xFDA
  5450                           fsr2l	equ	0xFD9
  5451                           status	equ	0xFD8
  5452                           pclatu	equ	0xFFB
  5453                           pclath	equ	0xFFA
  5454                           tblptru	equ	0xFF8
  5455                           tblptrh	equ	0xFF7
  5456                           tblptrl	equ	0xFF6
  5457                           tablat	equ	0xFF5
  5458                           prodh	equ	0xFF4
  5459                           prodl	equ	0xFF3
  5460                           intcon	equ	0xFF2
  5461                           intcon2	equ	0xFF1
  5462                           indf0	equ	0xFEF
  5463                           fsr0h	equ	0xFEA
  5464                           fsr0l	equ	0xFE9
  5465                           wreg	equ	0xFE8
  5466                           indf1	equ	0xFE7
  5467                           fsr1h	equ	0xFE2
  5468                           fsr1l	equ	0xFE1
  5469                           bsr	equ	0xFE0
  5470                           indf2	equ	0xFDF
  5471                           postinc2	equ	0xFDE
  5472                           postdec2	equ	0xFDD
  5473                           fsr2h	equ	0xFDA
  5474                           fsr2l	equ	0xFD9
  5475                           status	equ	0xFD8
  5476                           
  5477                           	psect	rparam
  5478  0000                     pclatu	equ	0xFFB
  5479                           pclath	equ	0xFFA
  5480                           tblptru	equ	0xFF8
  5481                           tblptrh	equ	0xFF7
  5482                           tblptrl	equ	0xFF6
  5483                           tablat	equ	0xFF5
  5484                           prodh	equ	0xFF4
  5485                           prodl	equ	0xFF3
  5486                           intcon	equ	0xFF2
  5487                           intcon2	equ	0xFF1
  5488                           indf0	equ	0xFEF
  5489                           fsr0h	equ	0xFEA
  5490                           fsr0l	equ	0xFE9
  5491                           wreg	equ	0xFE8
  5492                           indf1	equ	0xFE7
  5493                           fsr1h	equ	0xFE2
  5494                           fsr1l	equ	0xFE1
  5495                           bsr	equ	0xFE0
  5496                           indf2	equ	0xFDF
  5497                           postinc2	equ	0xFDE
  5498                           postdec2	equ	0xFDD
  5499                           fsr2h	equ	0xFDA
  5500                           fsr2l	equ	0xFD9
  5501                           status	equ	0xFD8


Data Sizes:
    Strings     34
    Constant    26
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     51      51
    BANK0           160     94      94
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 16
		 -> main@buffer(BANK0[16]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 16
		 -> main@buffer(BANK0[16]), 

    memset@p1	PTR void  size(2) Largest target is 16
		 -> main@buffer(BANK0[16]), 

    memset@p	PTR unsigned char  size(2) Largest target is 16
		 -> main@buffer(BANK0[16]), 

    sprintf@_val._cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_2(CODE[19]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> main@buffer(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1057$_cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    lcd_write_buffer@buffer	PTR const unsigned char  size(2) Largest target is 16
		 -> main@buffer(BANK0[16]), STR_1(CODE[15]), 

    sp__memset	PTR void  size(2) Largest target is 16
		 -> main@buffer(BANK0[16]), 


Critical Paths under _main in COMRAM

    _main->_InitApp
    _main->___lwtoft
    _sprintf->___lwmod
    _sprintf->___lwtoft
    ___lwmod->___lwdiv
    _lcd_write_buffer->_strlen
    _lcd_test->_lcd_pos
    _lcd_write->_lcd_delay
    _lcd_pos->_lcd_write_cmd
    _lcd_enable->_lcd_delay
    _lcd_cursor_off->_lcd_write_cmd
    _lcd_clear->_lcd_write_cmd
    _lcd_write_cmd->_lcd_delay
    ___lwtoft->___ftpack
    ___fttol->___lwtoft
    ___ftmul->___lwtoft
    ___ftdiv->___lwtoft
    _InitApp->_OpenADC

Critical Paths under _high_isr in COMRAM

    _high_isr->i2_lcd_write_buffer
    i2_lcd_write_buffer->i2_lcd_write
    i2_lcd_write->i2_lcd_delay
    i2_lcd_clear->i2_lcd_write_cmd
    i2_lcd_write_cmd->i2_lcd_delay

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fttol
    ___lwmod->___lwdiv
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___lwtoft

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0    9967
                                             70 BANK0     24    24      0
                            _BusyADC
                _ConfigureOscillator
                         _ConvertADC
                            _InitApp
                            _ReadADC
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
                          _lcd_clear
                     _lcd_cursor_off
                         _lcd_enable
                           _lcd_init
                            _lcd_pos
                           _lcd_test
                   _lcd_write_buffer
                             _memset
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               6     4      2     143
                                             44 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19    11      8    1574
                                             51 BANK0     19    11      8
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___fttol (ARG)
                            ___lwdiv
                            ___lwmod
                           ___lwtoft (ARG)
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                             44 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                             49 COMRAM     2     2      0
                                              3 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     268
                                             44 COMRAM     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _memset                                               8     2      6     255
                                             44 COMRAM     6     0      6
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_write_buffer                                    10     7      3     343
                                              0 BANK0     10     7      3
                          _lcd_write
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_test                                            21    21      0     498
                                             49 COMRAM     1     1      0
                                              0 BANK0     20    20      0
                            _lcd_pos
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            1     1      0      22
                                             45 COMRAM     1     1      0
                          _lcd_delay
 ---------------------------------------------------------------------------------
 (2) _lcd_pos                                              3     2      1     316
                                             46 COMRAM     3     2      1
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0       0
                                             45 COMRAM     1     1      0
                         _lcd_enable
 ---------------------------------------------------------------------------------
 (2) _lcd_enable                                           0     0      0       0
                          _lcd_delay
 ---------------------------------------------------------------------------------
 (1) _lcd_cursor_off                                       0     0      0      22
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0      22
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_write_cmd                                        1     1      0      22
                                             45 COMRAM     1     1      0
                          _lcd_delay
 ---------------------------------------------------------------------------------
 (3) _lcd_delay                                            1     1      0       0
                                             44 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             5     2      3    1721
                                             49 COMRAM     2     2      0
                                              3 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     305
                                             36 BANK0     15    11      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    2158
                                             21 BANK0     15     9      6
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2112
                                              6 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1646
                                             44 COMRAM     5     0      5
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              2     0      2       0
                                             44 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              2     2      0     282
                                             49 COMRAM     2     2      0
                            _OpenADC
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (2) _SetChanADC                                           2     2      0      22
                                             44 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     260
                                             44 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _low_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_isr                                            15    15      0     761
                                             29 COMRAM    15    15      0
                        i2_lcd_clear
                 i2_lcd_write_buffer
 ---------------------------------------------------------------------------------
 (7) i2_lcd_write_buffer                                  10     7      3     688
                                             19 COMRAM    10     7      3
                        i2_lcd_write
 ---------------------------------------------------------------------------------
 (8) i2_lcd_write                                          1     1      0      73
                                             18 COMRAM     1     1      0
                        i2_lcd_delay
 ---------------------------------------------------------------------------------
 (7) i2_lcd_clear                                          0     0      0      73
                    i2_lcd_write_cmd
 ---------------------------------------------------------------------------------
 (8) i2_lcd_write_cmd                                      1     1      0      73
                                             18 COMRAM     1     1      0
                        i2_lcd_delay
 ---------------------------------------------------------------------------------
 (9) i2_lcd_delay                                          1     1      0       0
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyADC
   _ConfigureOscillator
   _ConvertADC
   _InitApp
     _OpenADC
     _SetChanADC
   _ReadADC
   ___ftdiv
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___ftdiv (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftdiv (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _lcd_clear
     _lcd_write_cmd
       _lcd_delay
   _lcd_cursor_off
     _lcd_write_cmd
       _lcd_delay
   _lcd_enable
     _lcd_delay
   _lcd_init
     _lcd_enable
       _lcd_delay
   _lcd_pos
     _lcd_write_cmd
       _lcd_delay
   _lcd_test
     _lcd_pos
       _lcd_write_cmd
         _lcd_delay
     _lcd_write
       _lcd_delay
   _lcd_write_buffer
     _lcd_write
       _lcd_delay
     _strlen (ARG)
   _memset
   _sprintf
     ___ftdiv (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
     ___lwtoft (ARG)
       ___ftpack
     _isdigit (ARG)
   _strlen

 _low_isr (ROOT)

 _high_isr (ROOT)
   i2_lcd_clear
     i2_lcd_write_cmd
       i2_lcd_delay
   i2_lcd_write_buffer
     i2_lcd_write
       i2_lcd_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     33      33       1       53.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5E      5E       5       58.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Mar 24 19:59:55 2014

                 __CFG_BOR$ON 000000                            bsr 000FE0                   __CFG_BORV$1 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000      __size_ofi2_lcd_write_cmd 0016                           l129 1416  
                         l169 18D6                           l198 16E6                           l622 1082  
                         l624 0FE4                           l553 1374                           l625 1046  
                         l637 0D36                           l657 11F4                           l770 1614  
                         l780 15A2                  __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000  
                         u830 1384                           u920 18D4                           u825 0DB2  
                         u790 1282                           u797 1278    __end_ofi2_lcd_write_buffer 1532  
                         wreg 000FE8                  __CFG_FOSC$HS 000000                  __CFG_LVP$OFF 000000  
                ___ftdiv@cntr 006F                  ___ftdiv@sign 0074                  __CFG_WDT$OFF 000000  
                        l2002 0F5A                          l2110 1172                          l2040 0BA4  
                        l2120 11BA                          l2106 1154                          l2060 0C5A  
                        l2124 11E4                          l2116 1198                          l2070 0CBE  
                        l2046 0BE8                          l2118 11B2                          l2134 15D0  
                        l2064 0C86                          l2136 15DC                          l2074 0CEA  
                        l2146 1606                          l2138 15E0                          l2162 1592  
                        l2154 1548                          l2156 1556                          l2158 155E  
                        l2088 10B0                          l1640 1242                          l1802 0854  
                        l1644 128E                          l1820 08E8                          l1830 095C  
                        l1822 0902                          l1662 0D7E                          l1824 0914  
                        l1816 08B8                          l1808 0878                          l1664 0D82  
                        l1770 1778                          l1762 140C                          l1842 09BC  
                        l1682 0ED8                          l1780 1798                          l1836 0980  
                        l1774 1786                          l1838 0998                          l1846 09C6  
                        l1960 12CE                          l1952 1826                          l1880 0AD0  
                        l1872 0A8C                          l1848 09F4                          l1794 17AE  
                        l1858 0A30                          l1890 0B6A                          l1972 1322  
                        l1964 12DC                          l1876 0AAE                          l1974 1348  
                        l1966 12E6                          l1798 17C2                          l1886 0B3A  
                        l1976 1352                          l1968 130C                          l1888 0B48  
                        l1896 1736                          l1898 173A                          l1996 0F16  
                        STR_1 082E                          STR_2 081B                          u1201 0F04  
                        u1221 0F30                          u1230 0F40                          u1311 109E  
                        u1330 10DC                          u1251 0B92                          u1271 0BBE  
                        u1335 10D2                          u1280 0BCE                          u1360 117C  
                        u1507 18A4                          u1517 167E                          u1487 0EE0  
                        u1497 16FA                          i2l12 1478                   lcd_test@pos 0072  
                __CFG_PWRT$ON 000000                          _main 0D38                  ___ftpack@arg 002D  
                ___ftpack@exp 0030                          fsr0h 000FEA                          fsr1h 000FE2  
                        indf0 000FEF                          fsr0l 000FE9                          fsr2h 000FDA  
                        indf1 000FE7                          fsr1l 000FE1                          indf2 000FDF  
                        fsr2l 000FD9                          pclat 000FFA                  main@adcValue 00BC  
                        prodh 000FF4                          prodl 000FF3                ?_lcd_write_cmd 0001  
                        start 00A2                 __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000  
                ___ftmul@cntr 0082                  ___ftmul@sign 0083               __end_of_BusyADC 18D8  
             __end_of_ReadADC 18EC               __end_of_InitApp 168A               __end_of_OpenADC 16EA  
                ___fttol@exp1 0092                  ___fttol@lval 008E                 __CFG_PLLDIV$5 000000  
                 i2_lcd_delay 18AE                   i2_lcd_clear 18FC                  lcd_pos@linha 0031  
              __CFG_CCP2MX$ON 000000                         ?_main 0001               __end_of___ftdiv 1084  
                       _CMCON 000FB4                   i2_lcd_write 1872               __end_of___ftmul 0D38  
             __end_of___fttol 11F6               __end_of___lwdiv 161E               __end_of___lwmod 15AC  
                       _PORTA 000F80                         _PORTB 000F81                         _PORTC 000F82  
                       _PORTD 000F83                         _PORTE 000F84                 __CFG_USBDIV$1 000000  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISC 000F94  
                       _TRISD 000F95                         _TRISE 000F96           _ConfigureOscillator 1908  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
             __end_of_lcd_pos 17A0                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000               __end_of_dpowers 081B  
             __end_of_isdigit 182E                 ___ftpack@sign 0031                    _ConvertADC 1904  
             __end_of_low_isr 00A2                         tablat 000FF5                         status 000FD8  
             __end_of_sprintf 0B78                __CFG_ICPRT$OFF 000000        i2_lcd_write_buffer$577 001A  
        ?_ConfigureOscillator 0001               __initialization 18D8                  __end_of_main 0EEA  
                      ??_main 00A6                 ___fttol@sign1 008D                 __activetblptr 000002  
                  _SetChanADC 182E                 lcd_pos@coluna 002F                 lcd_test@F5275 0801  
           ??i2_lcd_write_cmd 0013                        _ADCON0 000FC2                        _ADCON1 000FC1  
                      _ADCON2 000FC0                        _ADRESH 000FC4                        _ADRESL 000FC3  
            __end_of___ftpack 1376                        i2l2210 1516                        i2l2206 14DE  
            __end_of___lwtoft 1804               ??_lcd_write_cmd 002E                     ??_BusyADC 002D  
                   ??_ReadADC 002F                     ??_InitApp 0032         ??_ConfigureOscillator 002D  
                   ??_OpenADC 002F                __CFG_XINST$OFF 000000              __end_of_lcd_init 172C  
            __end_of_high_isr 14B2              __end_of_lcd_test 1418      __end_of_lcd_write_buffer 12BE  
              __CFG_STVREN$ON 000000                     ??___ftdiv 006C                     ??___ftmul 007B  
                   ??___fttol 0088                     ??___lwdiv 0031                     ??___lwmod 0032  
                      _memset 17A0                        _strlen 172C                     ??_lcd_pos 0030  
       ___ftmul@f3_as_product 007F                     ??_isdigit 002D                  __mediumconst 0000  
                   ??_low_isr 0001                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                     ??_sprintf 009B              ??_lcd_cursor_off 002F  
                 ?_ConvertADC 0001        i2lcd_write_buffer@size 0016                    __accesstop 0060  
     __end_of__initialization 18D8               __CFG_PBADEN$OFF 000000                    ___ftdiv@f1 0066  
                  ___ftdiv@f2 0069                    ___ftdiv@f3 0070                    ___ftmul@f1 0075  
                  ___ftmul@f2 0078                    ___fttol@f1 0084                __pcstackCOMRAM 0001  
                  ___lwtoft@c 0063                   ?_SetChanADC 0001            __size_of_lcd_delay 0010  
          __size_of_lcd_clear 0008            __size_of_lcd_write 0016            i2_lcd_write_buffer 14B2  
                i2lcd_write@x 0013           ?i2_lcd_write_buffer 0014                       ?_memset 002D  
                ?i2_lcd_delay 0001                  ?i2_lcd_clear 0001           __size_of_ConvertADC 0004  
                   ?___ftpack 002D                  ?i2_lcd_write 0001                       ?_strlen 002D  
                   ?___lwtoft 0063              i2lcd_write_cmd@x 0013                    _lcd_enable 18BE  
        ??i2_lcd_write_buffer 0017                     ?_lcd_init 0001                     ?_high_isr 0001  
                   ?_lcd_test 0001               __CFG_VREGEN$OFF 000000                       _BusyADC 18CC  
                     _ReadADC 18E2                       _InitApp 161E                       _OpenADC 168A  
                     __Hparam 0000           __size_of_SetChanADC 0018                       __Lparam 0000  
           __end_of_lcd_delay 18AE             __end_of_lcd_clear 18FC                       ___ftdiv 0EEA  
           __end_of_lcd_write 185C                       ___ftmul 0B78                       ___fttol 1084  
                     ___lwdiv 15AC                       ___lwmod 1532                  __psmallconst 0800  
             i2_lcd_write_cmd 1888                       __pcinit 18D8                    ??___ftpack 0060  
             __size_of_memset 0034                       __ramtop 0800                       __ptext0 0D38  
                     __ptext1 172C                       __ptext2 083E                       __ptext3 1804  
                     __ptext4 1532                       __ptext5 15AC                       __ptext6 17A0  
                     __ptext7 11F6                       __ptext8 1376                       __ptext9 1846  
                     _lcd_pos 1766                    ??___lwtoft 0032               __size_of_strlen 003A  
                     _dpowers 0811                       _isdigit 1804                       _low_isr 0018  
              OpenADC@config2 002D                       _sprintf 083E                    ??_lcd_init 002E  
                  ??_high_isr 001E                    ??_lcd_test 0032                __pintcode_body 1418  
        end_of_initialization 18D8                       memset@c 002F                       memset@n 0031  
                     memset@p 0060                 __Lmediumconst 0000                       int_func 1418  
             main@adcValueOld 00BA                       postdec2 000FDD                       postinc2 000FDE  
           ?_lcd_write_buffer 0060                       strlen@s 002D            ??_lcd_write_buffer 0063  
                   _PORTAbits 000F80                   ?_lcd_enable 0001                     _TRISAbits 000F92  
                ??_ConvertADC 002D   __end_of_ConfigureOscillator 190A                   ___ftdiv@exp 0073  
                  main@buffer 00AA                    lcd_test@ln 0070                lcd_write_cmd@x 002E  
       __end_of_lcd_write_cmd 1872          _lcd_write_buffer$577 0066       __end_ofi2_lcd_write_cmd 189E  
                  lcd_write@x 002E                   ___ftmul@exp 007E            __end_of_ConvertADC 1908  
              __end_of_memset 17D4          __size_ofi2_lcd_delay 0010          __size_ofi2_lcd_clear 0008  
                ??_SetChanADC 002D                __end_of_strlen 1766           start_initialization 18D8  
        __size_ofi2_lcd_write 0016        lcd_write_buffer@buffer 0060           __size_of_lcd_enable 000E  
          __end_of_SetChanADC 1846              __CFG_LPT1OSC$OFF 000000                      ??_memset 0033  
                    ??_strlen 002F         i2lcd_write_buffer@pos 001C             __size_of___ftpack 00B8  
           __size_of___lwtoft 0030                 __pcstackBANK0 0060           __end_of__stringdata 083D  
                _isdigit$1330 002E          lcd_write_buffer@size 0062             __size_of_lcd_init 0042  
           __size_of_high_isr 14AA                   sprintf@_val 00A0                   sprintf@flag 009D  
           __size_of_lcd_test 00A2                   sprintf@prec 00A4                      ?_BusyADC 0001  
                    ?_ReadADC 002D                      ?_InitApp 0001             OpenADC@portconfig 002E  
                    ?_OpenADC 002D              ___lwdiv@dividend 002D       __size_of_lcd_cursor_off 0008  
            ?i2_lcd_write_cmd 0001                     __pintcode 0008                      ?___ftdiv 0066  
                    ?___ftmul 0075                      ?___fttol 0084                      ?___lwdiv 002D  
                    ?___lwmod 0063                     _lcd_delay 189E                     _lcd_clear 18F4  
                 __pintcodelo 0018                     _lcd_write 1846                      ?_lcd_pos 002F  
                 __smallconst 0800                      ?_isdigit 0001         __end_oflcd_test@F5275 0811  
                    ?_low_isr 0001   __size_ofi2_lcd_write_buffer 0080              ___lwdiv@quotient 0060  
                    ?_sprintf 0093                 OpenADC@config 0031                      _PIE1bits 000F9D  
                    i2u152_47 146E                      i2u153_47 18B4                      i2u146_40 150E  
                    i2u146_47 1504                      _PIR1bits 000F9E                      _RCONbits 000FD0  
            __CFG_WDTPS$32768 000000                    ?_lcd_delay 0001                    ?_lcd_clear 0001  
                  _ADCON0bits 000FC2                   __stringdata 081B                    ?_lcd_write 0001  
             lcd_test@msgTest 0060                  ??_lcd_enable 002E     __size_of_lcd_write_buffer 00C8  
                 _INTCON2bits 000FF1              __size_of_BusyADC 000C              __size_of_ReadADC 000A  
            __size_of_InitApp 006C                      __Hrparam 0000              __size_of_OpenADC 0060  
                    __Lrparam 0000            __end_of_lcd_enable 18CC              __size_of___ftdiv 019A  
            __size_of___ftmul 01C0              __size_of___fttol 0172              __size_of___lwdiv 0072  
            __size_of___lwmod 007A                      ___ftpack 12BE                      ___lwtoft 17D4  
         lcd_write_buffer@pos 0068              __size_of_lcd_pos 003A              __size_of_isdigit 002A  
             ___lwdiv@divisor 002F               ___lwdiv@counter 0062              __size_of_low_isr 008A  
                    __ptext10 1766                      __ptext11 16EA                      __ptext20 0EEA  
                    __ptext12 18BE                      __ptext21 12BE                      __ptext13 18EC  
                    __ptext22 18E2                      __ptext14 18F4                      __ptext31 14B2  
                    __ptext23 161E                      __ptext15 185C                      __ptext32 1872  
                    __ptext24 182E                      __ptext16 189E                      __ptext33 18FC  
                    __ptext25 168A                      __ptext17 17D4                      __ptext34 1888  
                    __ptext26 1904                      __ptext18 1084                      __ptext35 18AE  
                    __ptext27 1908                      __ptext19 0B78                      __ptext28 18CC  
                    _lcd_init 16EA                      _high_isr 0008                      _lcd_test 1376  
            __size_of_sprintf 033A                 __size_of_main 01B2  __size_of_ConfigureOscillator 0002  
              _lcd_cursor_off 18EC                 ??i2_lcd_delay 0012                 ??i2_lcd_clear 0014  
                 ??_lcd_delay 002D                   ??_lcd_clear 002F                 ??i2_lcd_write 0013  
                 ??_lcd_write 002E         __CFG_CPUDIV$OSC1_PLL2 000000                    _INTCONbits 000FF2  
      __size_of_lcd_write_cmd 0016                      isdigit@c 002F                      memset@p1 002D  
                    intlevel1 0000                      intlevel2 0000                     sprintf@ap 009E  
                   sprintf@sp 0093              ___lwmod@dividend 0063        __end_of_lcd_cursor_off 18F4  
           SetChanADC@channel 002E                      sprintf@c 00A5                      sprintf@f 0095  
             ___lwmod@divisor 0065                      strlen@cp 0031               ___lwmod@counter 0033  
         __end_ofi2_lcd_delay 18BE           __end_ofi2_lcd_clear 1904           __end_ofi2_lcd_write 1888  
            _lcd_write_buffer 11F6      i2lcd_write_buffer@buffer 0014               ?_lcd_cursor_off 0001  
               _lcd_write_cmd 185C  
