Version 3.2 HI-TECH Software Intermediate Code
"10 C:/Program Files (x86)/Microchip/xc8/v1.30/include\stdarg.h
[v ___va_start `(*v ~T0 @X0 0 ef ]
[p i ___va_start ]
"7 C:/Program Files (x86)/Microchip/xc8/v1.30/include\ctype.h
[v _isdigit `(b ~T0 @X0 0 ef1`uc ]
"13 C:/Program Files (x86)/Microchip/xc8/v1.30/include\stdarg.h
[v ___va_arg `(*v ~T0 @X0 0 ev`*v ]
[p i ___va_arg ]
[; ;include\stdio.h: 8: typedef int ptrdiff_t;
[; ;include\stdio.h: 9: typedef unsigned size_t;
[; ;include\stdio.h: 10: typedef unsigned short wchar_t;
[; ;include\stdarg.h: 7: typedef void * va_list[1];
[; ;include\stdarg.h: 10: extern void * __va_start(void);
[; ;include\stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;include\stdio.h: 23: extern int errno;
[; ;include\stdio.h: 54: struct __prbuf
[; ;include\stdio.h: 55: {
[; ;include\stdio.h: 56: char * ptr;
[; ;include\stdio.h: 57: void (* func)(char);
[; ;include\stdio.h: 58: };
[; ;include\conio.h: 17: extern int errno;
[; ;include\conio.h: 20: extern void init_uart(void);
[; ;include\conio.h: 22: extern char getch(void);
[; ;include\conio.h: 23: extern char getche(void);
[; ;include\conio.h: 24: extern void putch(char);
[; ;include\conio.h: 25: extern void ungetch(char);
[; ;include\conio.h: 27: extern __bit kbhit(void);
[; ;include\conio.h: 31: extern char * cgets(char *);
[; ;include\conio.h: 32: extern void cputs(const char *);
[; ;include\stdio.h: 99: extern int cprintf(char *, ...);
[; ;include\stdio.h: 104: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;include\stdio.h: 194: extern char * gets(char *);
[; ;include\stdio.h: 195: extern int puts(const char *);
[; ;include\stdio.h: 196: extern int scanf(const char *, ...);
[; ;include\stdio.h: 197: extern int sscanf(const char *, const char *, ...);
[; ;include\stdio.h: 198: extern int vprintf(const char *, va_list);
[; ;include\stdio.h: 199: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;include\stdio.h: 200: extern int vscanf(const char *, va_list ap);
[; ;include\stdio.h: 201: extern int vsscanf(const char *, const char *, va_list);
[; ;include\stdio.h: 205: extern int sprintf(char *, const char *, ...);
[; ;include\stdio.h: 206: extern int printf(const char *, ...);
[; ;include\ctype.h: 4: extern __bit isalpha(char);
[; ;include\ctype.h: 5: extern __bit isupper(char);
[; ;include\ctype.h: 6: extern __bit islower(char);
[; ;include\ctype.h: 7: extern __bit isdigit(char);
[; ;include\ctype.h: 8: extern __bit isxdigit(char);
[; ;include\ctype.h: 9: extern __bit isspace(char);
[; ;include\ctype.h: 10: extern __bit ispunct(char);
[; ;include\ctype.h: 11: extern __bit isalnum(char);
[; ;include\ctype.h: 12: extern __bit isprint(char);
[; ;include\ctype.h: 13: extern __bit isgraph(char);
[; ;include\ctype.h: 14: extern __bit iscntrl(char);
[; ;include\ctype.h: 17: extern char toupper(char);
[; ;include\ctype.h: 18: extern char tolower(char);
[; ;include\stdlib.h: 27: typedef struct {
[; ;include\stdlib.h: 28: int rem;
[; ;include\stdlib.h: 29: int quot;
[; ;include\stdlib.h: 30: } div_t;
[; ;include\stdlib.h: 31: typedef struct {
[; ;include\stdlib.h: 32: unsigned rem;
[; ;include\stdlib.h: 33: unsigned quot;
[; ;include\stdlib.h: 34: } udiv_t;
[; ;include\stdlib.h: 35: typedef struct {
[; ;include\stdlib.h: 36: long quot;
[; ;include\stdlib.h: 37: long rem;
[; ;include\stdlib.h: 38: } ldiv_t;
[; ;include\stdlib.h: 39: typedef struct {
[; ;include\stdlib.h: 40: unsigned long quot;
[; ;include\stdlib.h: 41: unsigned long rem;
[; ;include\stdlib.h: 42: } uldiv_t;
[; ;include\stdlib.h: 65: extern double atof(const char *);
[; ;include\stdlib.h: 66: extern double strtod(const char *, const char **);
[; ;include\stdlib.h: 67: extern int atoi(const char *);
[; ;include\stdlib.h: 68: extern unsigned xtoi(const char *);
[; ;include\stdlib.h: 69: extern long atol(const char *);
[; ;include\stdlib.h: 70: extern long strtol(const char *, char **, int);
[; ;include\stdlib.h: 72: extern int rand(void);
[; ;include\stdlib.h: 73: extern void srand(unsigned int);
[; ;include\stdlib.h: 74: extern void * calloc(size_t, size_t);
[; ;include\stdlib.h: 75: extern div_t div(int numer, int denom);
[; ;include\stdlib.h: 76: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;include\stdlib.h: 77: extern ldiv_t ldiv(long numer, long denom);
[; ;include\stdlib.h: 78: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;include\stdlib.h: 79: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;include\stdlib.h: 80: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;include\stdlib.h: 81: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;include\stdlib.h: 82: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;include\stdlib.h: 87: extern void * malloc(size_t);
[; ;include\stdlib.h: 88: extern void free(void *);
[; ;include\stdlib.h: 89: extern void * realloc(void *, size_t);
[; ;include\stdlib.h: 91: extern void abort(void);
[; ;include\stdlib.h: 92: extern void exit(int);
[; ;include\stdlib.h: 93: extern int atexit(void (*)(void));
[; ;include\stdlib.h: 94: extern char * getenv(const char *);
[; ;include\stdlib.h: 95: extern char ** environ;
[; ;include\stdlib.h: 96: extern int system(char *);
[; ;include\stdlib.h: 97: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;include\stdlib.h: 98: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;include\stdlib.h: 99: extern int abs(int);
[; ;include\stdlib.h: 100: extern long labs(long);
[; ;include\stdlib.h: 103: extern char * itoa(char * buf, int val, int base);
[; ;include\stdlib.h: 104: extern char * utoa(char * buf, unsigned val, int base);
[; ;include\stdlib.h: 109: extern char * ltoa(char * buf, long val, int base);
[; ;include\stdlib.h: 110: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;include\stdlib.h: 112: extern char * ftoa(float f, int * status);
[; ;include\string.h: 22: extern void * memcpy(void *, const void *, size_t);
[; ;include\string.h: 23: extern void * memmove(void *, const void *, size_t);
[; ;include\string.h: 24: extern void * memset(void *, int, size_t);
[; ;include\string.h: 35: extern char * strcat(char *, const char *);
[; ;include\string.h: 36: extern char * strcpy(char *, const char *);
[; ;include\string.h: 37: extern char * strncat(char *, const char *, size_t);
[; ;include\string.h: 38: extern char * strncpy(char *, const char *, size_t);
[; ;include\string.h: 39: extern char * strdup(const char *);
[; ;include\string.h: 40: extern char * strtok(char *, const char *);
[; ;include\string.h: 43: extern int memcmp(const void *, const void *, size_t);
[; ;include\string.h: 44: extern int strcmp(const char *, const char *);
[; ;include\string.h: 45: extern int stricmp(const char *, const char *);
[; ;include\string.h: 46: extern int strncmp(const char *, const char *, size_t);
[; ;include\string.h: 47: extern int strnicmp(const char *, const char *, size_t);
[; ;include\string.h: 48: extern void * memchr(const void *, int, size_t);
[; ;include\string.h: 49: extern size_t strcspn(const char *, const char *);
[; ;include\string.h: 50: extern char * strpbrk(const char *, const char *);
[; ;include\string.h: 51: extern size_t strspn(const char *, const char *);
[; ;include\string.h: 52: extern char * strstr(const char *, const char *);
[; ;include\string.h: 53: extern char * stristr(const char *, const char *);
[; ;include\string.h: 54: extern char * strerror(int);
[; ;include\string.h: 55: extern size_t strlen(const char *);
[; ;include\string.h: 56: extern char * strchr(const char *, int);
[; ;include\string.h: 57: extern char * strichr(const char *, int);
[; ;include\string.h: 58: extern char * strrchr(const char *, int);
[; ;include\string.h: 59: extern char * strrichr(const char *, int);
[; ;include\conio.h: 17: extern int errno;
[; ;include\conio.h: 20: extern void init_uart(void);
[; ;include\conio.h: 22: extern char getch(void);
[; ;include\conio.h: 23: extern char getche(void);
[; ;include\conio.h: 24: extern void putch(char);
[; ;include\conio.h: 25: extern void ungetch(char);
[; ;include\conio.h: 27: extern __bit kbhit(void);
[; ;include\conio.h: 31: extern char * cgets(char *);
[; ;include\conio.h: 32: extern void cputs(const char *);
[; ;include\sys.h: 17: extern int errno;
[; ;include\sys.h: 30: extern int execl(char *, char *, ...);
[; ;include\sys.h: 31: extern int execv(char *, char **);
[; ;include\sys.h: 32: extern int execve(char *, char **, char **);
[; ;include\sys.h: 33: extern int execle(char *, char *, ...);
[; ;include\sys.h: 34: extern int execvp(char *, char **);
[; ;include\sys.h: 35: extern int execlp(char *, char *, ...);
[; ;include\sys.h: 36: extern int getpid(void);
[; ;include\sys.h: 37: extern char * mktemp(char *);
[; ;include\sys.h: 51: extern int spawnl(char *, char *, ...);
[; ;include\sys.h: 52: extern int spawnv(char *, char **);
[; ;include\sys.h: 53: extern int spawnle(char *, char *, ...);
[; ;include\sys.h: 54: extern int spawnve(char *, char **, char **);
[; ;include\sys.h: 55: extern int spawnlp(char *, char *, ...);
[; ;include\sys.h: 56: extern int spawnvp(char *, char **);
[; ;include\sys.h: 58: extern int chdir(char *);
[; ;include\sys.h: 59: extern int chdrv(char *);
[; ;include\sys.h: 60: extern int mkdir(char *);
[; ;include\sys.h: 61: extern int rmdir(char *);
[; ;include\sys.h: 62: extern char * getcwd(char *);
[; ;include\sys.h: 63: extern void persist_validate(void);
[; ;include\sys.h: 64: extern int persist_check(int);
[; ;include\sys.h: 65: extern char * getdrv(void);
[; ;include\sys.h: 66: extern char ** _getargs(char *, char *);
[; ;include\sys.h: 67: extern int _argc_;
[; ;include\sys.h: 78: extern void * sbrk(size_t);
[; ;include\sys.h: 79: extern void brk(void *);
[; ;include\sys.h: 85: extern int _pnum(unsigned long, signed char, signed char, unsigned char, unsigned char, struct __prbuf *, unsigned char);
[; ;include\sys.h: 86: extern int _fnum(double, short, short, short, struct __prbuf *, short);
[; ;include\math.h: 3: extern double fabs(double);
[; ;include\math.h: 4: extern double floor(double);
[; ;include\math.h: 5: extern double ceil(double);
[; ;include\math.h: 6: extern double modf(double, double *);
[; ;include\math.h: 7: extern double sqrt(double);
[; ;include\math.h: 8: extern double atof(const char *);
[; ;include\math.h: 9: extern double sin(double);
[; ;include\math.h: 10: extern double cos(double);
[; ;include\math.h: 11: extern double tan(double);
[; ;include\math.h: 12: extern double asin(double);
[; ;include\math.h: 13: extern double acos(double);
[; ;include\math.h: 14: extern double atan(double);
[; ;include\math.h: 15: extern double atan2(double, double);
[; ;include\math.h: 16: extern double log(double);
[; ;include\math.h: 17: extern double log10(double);
[; ;include\math.h: 18: extern double pow(double, double);
[; ;include\math.h: 19: extern double exp(double);
[; ;include\math.h: 20: extern double sinh(double);
[; ;include\math.h: 21: extern double cosh(double);
[; ;include\math.h: 22: extern double tanh(double);
[; ;include\math.h: 23: extern double eval_poly(double, const double *, int);
[; ;include\math.h: 24: extern double frexp(double, int *);
[; ;include\math.h: 25: extern double ldexp(double, int);
[; ;include\math.h: 26: extern double fmod(double, double);
[; ;include\math.h: 27: extern double trunc(double);
[; ;include\math.h: 28: extern double round(double);
"13 C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\doprnt.c
[p n 350 ]
"354
[v _dpowers `Cui ~T0 @X0 -> 0 `x s ]
[i _dpowers
:U ..
-> -> 1 `i `ui
-> -> 10 `i `ui
-> -> 100 `i `ui
-> -> 1000 `i `ui
-> -> 10000 `i `ui
..
]
[; ;doprnt.c: 354: const static unsigned int dpowers[] = {1, 10, 100, 1000, 10000,
[; ;doprnt.c: 359: };
"492
[v _sprintf `(i ~T0 @X0 1 e1v`*uc`*Cuc ]
"493
{
[; ;doprnt.c: 455: int
[; ;doprnt.c: 492: sprintf(char * sp, const char * f, ...)
[; ;doprnt.c: 493: {
[e :U _sprintf ]
"492
[v _sp `*uc ~T0 @X0 1 r1 ]
[v _f `*Cuc ~T0 @X0 1 r0 ]
"493
[f ]
"494
[v _ap `*v ~T0 @X0 -> -> 1 `i `ux a ]
"499
[v _c `c ~T0 @X0 1 a ]
"506
[v _prec `c ~T0 @X0 1 a ]
"508
[v _flag `uc ~T0 @X0 1 a ]
[s S7 `*Cuc 1 `ui 1 ]
[n S7 . _cp _len ]
[u S6 `ui 1 `S7 1 ]
[n S6 . _val _str ]
"533
[v __val `S6 ~T0 @X0 1 a ]
[; ;doprnt.c: 494: va_list ap;
[; ;doprnt.c: 499: signed char c;
[; ;doprnt.c: 506: signed char prec;
[; ;doprnt.c: 508: unsigned char flag;
[; ;doprnt.c: 527: union {
[; ;doprnt.c: 528: unsigned int _val;
[; ;doprnt.c: 529: struct {
[; ;doprnt.c: 530: const char * _cp;
[; ;doprnt.c: 531: unsigned _len;
[; ;doprnt.c: 532: } _str;
[; ;doprnt.c: 533: } _val;
[; ;doprnt.c: 542: *ap = __va_start();
"542
[e = *U &U _ap ( ___va_start ..  ]
[; ;doprnt.c: 545: while(c = *f++) {
"545
[e $U 9  ]
[e :U 10 ]
{
[; ;doprnt.c: 547: if(c != '%')
"547
[e $ ! != -> -> _c `i `ui -> 37 `ui 12  ]
[; ;doprnt.c: 549: {
"549
{
[; ;doprnt.c: 550: ((*sp++ = (c)));
"550
[e = *U ++ _sp * -> -> 1 `i `x -> -> # *U _sp `i `x -> _c `uc ]
[; ;doprnt.c: 551: continue;
"551
[e $U 9  ]
"552
}
[e :U 12 ]
[; ;doprnt.c: 552: }
[; ;doprnt.c: 557: flag = 0;
"557
[e = _flag -> -> 0 `i `uc ]
[; ;doprnt.c: 620: if(*f == '.') {
"620
[e $ ! == -> *U _f `ui -> 46 `ui 13  ]
{
[; ;doprnt.c: 621: flag |= 0x4000;
"621
[e =| _flag -> -> 16384 `i `uc ]
[; ;doprnt.c: 622: f++;
"622
[e ++ _f * -> -> 1 `i `x -> -> # *U _f `i `x ]
[; ;doprnt.c: 629: {
"629
{
[; ;doprnt.c: 630: prec = 0;
"630
[e = _prec -> -> 0 `i `c ]
[; ;doprnt.c: 631: while(isdigit((unsigned)*f))
"631
[e $U 14  ]
[e :U 15 ]
[; ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
"632
[e = _prec -> - -> + * -> _prec `i -> 10 `i -> *U ++ _f * -> -> 1 `i `x -> -> # *U _f `i `x `i `ui -> 48 `ui `c ]
[e :U 14 ]
"631
[e $ ( _isdigit (1 -> -> *U _f `ui `uc 15  ]
[e :U 16 ]
"633
}
"634
}
[; ;doprnt.c: 633: }
[; ;doprnt.c: 634: } else {
[e $U 17  ]
[e :U 13 ]
{
[; ;doprnt.c: 635: prec = 0;
"635
[e = _prec -> -> 0 `i `c ]
"639
}
[e :U 17 ]
[; ;doprnt.c: 639: }
[; ;doprnt.c: 644: switch(c = *f++) {
"644
[e $U 19  ]
{
[; ;doprnt.c: 646: case 0:
"646
[e :U 20 ]
[; ;doprnt.c: 647: goto alldone;
"647
[e $U 21  ]
[; ;doprnt.c: 759: dostring:
"759
[e :U 22 ]
[; ;doprnt.c: 762: if(prec && prec < _val._str._len)
"762
[e $ ! && != -> _prec `i -> -> -> 0 `i `c `i < -> -> _prec `i `ui . . __val 1 1 23  ]
[; ;doprnt.c: 763: _val._str._len = prec;
"763
[e = . . __val 1 1 -> -> _prec `i `ui ]
[e :U 23 ]
[; ;doprnt.c: 776: while(_val._str._len--)
"776
[e $U 24  ]
[e :U 25 ]
[; ;doprnt.c: 777: ((*sp++ = (*_val._str._cp++)));
"777
[e = *U ++ _sp * -> -> 1 `i `x -> -> # *U _sp `i `x *U ++ . . __val 1 0 * -> -> 1 `i `x -> -> # *U . . __val 1 0 `i `x ]
[e :U 24 ]
"776
[e $ != -- . . __val 1 1 -> -> 1 `i `ui -> -> 0 `i `ui 25  ]
[e :U 26 ]
[; ;doprnt.c: 783: continue;
"783
[e $U 9  ]
[; ;doprnt.c: 811: default:
"811
[e :U 27 ]
[; ;doprnt.c: 814: _val._str._cp = (char *)&c;
"814
[e = . . __val 1 0 -> -> &U _c `*uc `*Cuc ]
[; ;doprnt.c: 815: _val._str._len = 1;
"815
[e = . . __val 1 1 -> -> 1 `i `ui ]
[; ;doprnt.c: 816: goto dostring;
"816
[e $U 22  ]
[; ;doprnt.c: 826: case 'u':
"826
[e :U 28 ]
[; ;doprnt.c: 827: flag |= 0xC0;
"827
[e =| _flag -> -> 192 `i `uc ]
[; ;doprnt.c: 828: break;
"828
[e $U 18  ]
"831
}
[; ;doprnt.c: 831: }
[e $U 18  ]
"644
[e :U 19 ]
[e [\ = _c -> *U ++ _f * -> -> 1 `i `x -> -> # *U _f `i `x `c , $ -> -> 0 `i `c 20
 , $ -> -> 117 `ui `c 28
 27 ]
"831
[e :U 18 ]
[; ;doprnt.c: 1282: {
"1282
{
[; ;doprnt.c: 1295: _val._val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
"1295
[e = . __val 0 *U -> ( ___va_arg , (. -> *U -> &U _ap `**ui `*v -> -> 0 `i `ui `*ui ]
"1296
}
[; ;doprnt.c: 1296: }
[; ;doprnt.c: 1299: if(prec == 0 && _val._val == 0)
"1299
[e $ ! && == -> _prec `i -> 0 `i == . __val 0 -> -> 0 `i `ui 29  ]
[; ;doprnt.c: 1300: prec++;
"1300
[e ++ _prec -> -> 1 `i `c ]
[e :U 29 ]
[; ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
"1314
{
[e = _c -> -> 1 `i `c ]
[e $ != -> -> _c `i `ui / -> # _dpowers `ui -> # *U + &U _dpowers * -> -> -> 0 `i `ui `ux -> -> # *U &U _dpowers `ui `ux `ui 30  ]
[e $U 31  ]
"1315
[e :U 30 ]
[; ;doprnt.c: 1315: if(_val._val < dpowers[c])
[e $ ! < . __val 0 *U + &U _dpowers * -> -> _c `uc `ux -> -> # *U &U _dpowers `ui `ux 33  ]
[; ;doprnt.c: 1316: break;
"1316
[e $U 31  ]
[e :U 33 ]
"1314
[e ++ _c -> -> 1 `i `c ]
[e $ != -> -> _c `i `ui / -> # _dpowers `ui -> # *U + &U _dpowers * -> -> -> 0 `i `ui `ux -> -> # *U &U _dpowers `ui `ux `ui 30  ]
[e :U 31 ]
"1348
}
[; ;doprnt.c: 1348: if(c < prec)
[e $ ! < -> _c `i -> _prec `i 34  ]
[; ;doprnt.c: 1349: c = prec;
"1349
[e = _c _prec ]
[e $U 35  ]
"1350
[e :U 34 ]
[; ;doprnt.c: 1350: else if(prec < c)
[e $ ! < -> _prec `i -> _c `i 36  ]
[; ;doprnt.c: 1351: prec = c;
"1351
[e = _prec _c ]
[e :U 36 ]
"1431
[e :U 35 ]
[; ;doprnt.c: 1431: {
{
"1478
}
[; ;doprnt.c: 1478: }
[; ;doprnt.c: 1483: while(prec--) {
"1483
[e $U 37  ]
[e :U 38 ]
{
[; ;doprnt.c: 1487: {
"1487
{
[; ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
"1498
[e = _c -> + % / . __val 0 *U + &U _dpowers * -> -> _prec `uc `ux -> -> # *U &U _dpowers `ui `ux -> -> 10 `i `ui -> 48 `ui `c ]
"1532
}
[; ;doprnt.c: 1532: }
[; ;doprnt.c: 1533: ((*sp++ = (c)));
"1533
[e = *U ++ _sp * -> -> 1 `i `x -> -> # *U _sp `i `x -> _c `uc ]
"1534
}
[e :U 37 ]
"1483
[e $ != -> -- _prec -> -> 1 `i `c `i -> -> -> 0 `i `c `i 38  ]
[e :U 39 ]
"1542
}
[e :U 9 ]
"545
[e $ != -> = _c -> *U ++ _f * -> -> 1 `i `x -> -> # *U _f `i `x `c `i -> -> -> 0 `i `c `i 10  ]
[e :U 11 ]
[; ;doprnt.c: 1534: }
[; ;doprnt.c: 1542: }
[; ;doprnt.c: 1544: alldone:
"1544
[e :U 21 ]
[; ;doprnt.c: 1547: *sp = 0;
"1547
[e = *U _sp -> -> 0 `i `uc ]
[; ;doprnt.c: 1549: return 0;
"1549
[e ) -> 0 `i ]
[e $UE 8  ]
[; ;doprnt.c: 1550: }
"1550
[e :UE 8 ]
}
