

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Tue Mar 25 22:16:07 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	text39,global,reloc=2,class=CODE,delta=1
    50                           	psect	text40,global,reloc=2,class=CODE,delta=1
    51                           	psect	text41,global,reloc=2,class=CODE,delta=1
    52                           	psect	text42,global,reloc=2,class=CODE,delta=1
    53                           	psect	text43,global,reloc=2,class=CODE,delta=1
    54                           	psect	text44,global,reloc=2,class=CODE,delta=1
    55                           	psect	text45,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text48,global,reloc=2,class=CODE,delta=1
    60                           	psect	text49,global,reloc=2,class=CODE,delta=1
    61                           	psect	text50,global,reloc=2,class=CODE,delta=1
    62                           	psect	text51,global,reloc=2,class=CODE,delta=1
    63                           	psect	text52,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    66  0000                     
    67                           	psect	smallconst
    68  000800                     __psmallconst:
    69                           	opt stack 0
    70  000800  00                 	db	0
    71  000801                     _dpowers:
    72                           	opt stack 0
    73  000801  0001               	dw	1
    74  000803  0000               	dw	0
    75  000805  000A               	dw	10
    76  000807  0000               	dw	0
    77  000809  0064               	dw	100
    78  00080B  0000               	dw	0
    79  00080D  03E8               	dw	1000
    80  00080F  0000               	dw	0
    81  000811  2710               	dw	10000
    82  000813  0000               	dw	0
    83  000815  86A0               	dw	34464
    84  000817  0001               	dw	1
    85  000819  4240               	dw	16960
    86  00081B  000F               	dw	15
    87  00081D  9680               	dw	38528
    88  00081F  0098               	dw	152
    89  000821  E100               	dw	57600
    90  000823  05F5               	dw	1525
    91  000825  CA00               	dw	51712
    92  000827  3B9A               	dw	15258
    93  000829                     __end_of_dpowers:
    94                           	opt stack 0
    95  000829                     __npowers_:
    96                           	opt stack 0
    97  000829  00                 	db	0
    98  00082A  80                 	db	128
    99  00082B  3F                 	db	63
   100  00082C  CD                 	db	205
   101  00082D  CC                 	db	204
   102  00082E  3D                 	db	61
   103  00082F  D7                 	db	215
   104  000830  23                 	db	35
   105  000831  3C                 	db	60
   106  000832  12                 	db	18
   107  000833  83                 	db	131
   108  000834  3A                 	db	58
   109  000835  B7                 	db	183
   110  000836  D1                 	db	209
   111  000837  38                 	db	56
   112  000838  C6                 	db	198
   113  000839  27                 	db	39
   114  00083A  37                 	db	55
   115  00083B  38                 	db	56
   116  00083C  86                 	db	134
   117  00083D  35                 	db	53
   118  00083E  C0                 	db	192
   119  00083F  D6                 	db	214
   120  000840  33                 	db	51
   121  000841  CC                 	db	204
   122  000842  2B                 	db	43
   123  000843  32                 	db	50
   124  000844  70                 	db	112
   125  000845  89                 	db	137
   126  000846  30                 	db	48
   127  000847  E7                 	db	231
   128  000848  DB                 	db	219
   129  000849  2E                 	db	46
   130  00084A  E5                 	db	229
   131  00084B  3C                 	db	60
   132  00084C  1E                 	db	30
   133  00084D  42                 	db	66
   134  00084E  A2                 	db	162
   135  00084F  0D                 	db	13
   136  000850                     __end_of__npowers_:
   137                           	opt stack 0
   138  000850                     __powers_:
   139                           	opt stack 0
   140  000850  00                 	db	0
   141  000851  80                 	db	128
   142  000852  3F                 	db	63
   143  000853  00                 	db	0
   144  000854  20                 	db	32
   145  000855  41                 	db	65
   146  000856  00                 	db	0
   147  000857  C8                 	db	200
   148  000858  42                 	db	66
   149  000859  00                 	db	0
   150  00085A  7A                 	db	122
   151  00085B  44                 	db	68
   152  00085C  40                 	db	64
   153  00085D  1C                 	db	28
   154  00085E  46                 	db	70
   155  00085F  50                 	db	80
   156  000860  C3                 	db	195
   157  000861  47                 	db	71
   158  000862  24                 	db	36
   159  000863  74                 	db	116
   160  000864  49                 	db	73
   161  000865  97                 	db	151
   162  000866  18                 	db	24
   163  000867  4B                 	db	75
   164  000868  BC                 	db	188
   165  000869  BE                 	db	190
   166  00086A  4C                 	db	76
   167  00086B  6B                 	db	107
   168  00086C  6E                 	db	110
   169  00086D  4E                 	db	78
   170  00086E  03                 	db	3
   171  00086F  15                 	db	21
   172  000870  50                 	db	80
   173  000871  79                 	db	121
   174  000872  AD                 	db	173
   175  000873  60                 	db	96
   176  000874  F3                 	db	243
   177  000875  49                 	db	73
   178  000876  71                 	db	113
   179  000877                     __end_of__powers_:
   180                           	opt stack 0
   181  000877                     lcd_test@F5277:
   182                           	opt stack 0
   183  000877  54                 	db	84
   184  000878  45                 	db	69
   185  000879  53                 	db	83
   186  00087A  54                 	db	84
   187  00087B  45                 	db	69
   188  00087C  54                 	db	84
   189  00087D  45                 	db	69
   190  00087E  53                 	db	83
   191  00087F  54                 	db	84
   192  000880  45                 	db	69
   193  000881  54                 	db	84
   194  000882  45                 	db	69
   195  000883  53                 	db	83
   196  000884  54                 	db	84
   197  000885  45                 	db	69
   198  000886  2E                 	db	46
   199  000887                     __end_oflcd_test@F5277:
   200                           	opt stack 0
   201  0000                     _ADCON0	set	4034
   202  0000                     _ADCON0bits	set	4034
   203  0000                     _ADCON1	set	4033
   204  0000                     _ADCON2	set	4032
   205  0000                     _ADRESH	set	4036
   206  0000                     _ADRESL	set	4035
   207  0000                     _BAUDCON	set	4024
   208  0000                     _CMCON	set	4020
   209  0000                     _INTCON2bits	set	4081
   210  0000                     _INTCONbits	set	4082
   211  0000                     _PIE1	set	3997
   212  0000                     _PIE1bits	set	3997
   213  0000                     _PIR1bits	set	3998
   214  0000                     _PORTA	set	3968
   215  0000                     _PORTAbits	set	3968
   216  0000                     _PORTB	set	3969
   217  0000                     _PORTC	set	3970
   218  0000                     _PORTD	set	3971
   219  0000                     _PORTE	set	3972
   220  0000                     _RCONbits	set	4048
   221  0000                     _RCREG	set	4014
   222  0000                     _RCSTA	set	4011
   223  0000                     _RCSTAbits	set	4011
   224  0000                     _SPBRG	set	4015
   225  0000                     _SPBRGH	set	4016
   226  0000                     _TRISA	set	3986
   227  0000                     _TRISAbits	set	3986
   228  0000                     _TRISB	set	3987
   229  0000                     _TRISC	set	3988
   230  0000                     _TRISCbits	set	3988
   231  0000                     _TRISD	set	3989
   232  0000                     _TRISE	set	3990
   233  0000                     _TXREG	set	4013
   234  0000                     _TXSTA	set	4012
   235  0000                     _TXSTAbits	set	4012
   236  000887                     __stringdata:
   237                           	opt stack 0
   238  000887                     STR_2:
   239  000887  53                 	db	83	;'S'
   240  000888  74                 	db	116	;'t'
   241  000889  65                 	db	101	;'e'
   242  00088A  70                 	db	112	;'p'
   243  00088B  3A                 	db	58	;':'
   244  00088C  25                 	db	37
   245  00088D  2E                 	db	46
   246  00088E  34                 	db	52	;'4'
   247  00088F  75                 	db	117	;'u'
   248  000890  20                 	db	32
   249  000891  25                 	db	37
   250  000892  33                 	db	51	;'3'
   251  000893  2E                 	db	46
   252  000894  31                 	db	49	;'1'
   253  000895  66                 	db	102	;'f'
   254  000896  25                 	db	37
   255  000897  25                 	db	37
   256  000898  00                 	db	0
   257  000899                     STR_1:
   258  000899  49                 	db	73	;'I'
   259  00089A  4E                 	db	78	;'N'
   260  00089B  54                 	db	84	;'T'
   261  00089C  45                 	db	69	;'E'
   262  00089D  52                 	db	82	;'R'
   263  00089E  52                 	db	82	;'R'
   264  00089F  55                 	db	85	;'U'
   265  0008A0  50                 	db	80	;'P'
   266  0008A1  54                 	db	84	;'T'
   267  0008A2  20                 	db	32
   268  0008A3  49                 	db	73	;'I'
   269  0008A4  4E                 	db	78	;'N'
   270  0008A5  54                 	db	84	;'T'
   271  0008A6  30                 	db	48	;'0'
   272  0008A7  00                 	db	0
   273  0008A8                     STR_3:
   274  0008A8  56                 	db	86	;'V'
   275  0008A9  6F                 	db	111	;'o'
   276  0008AA  6C                 	db	108	;'l'
   277  0008AB  74                 	db	116	;'t'
   278  0008AC  73                 	db	115	;'s'
   279  0008AD  3A                 	db	58	;':'
   280  0008AE  25                 	db	37
   281  0008AF  31                 	db	49	;'1'
   282  0008B0  2E                 	db	46
   283  0008B1  37                 	db	55	;'7'
   284  0008B2  66                 	db	102	;'f'
   285  0008B3  56                 	db	86	;'V'
   286  0008B4  00                 	db	0
   287  0008B5                     __end_of__stringdata:
   288                           	opt stack 0
   289                           
   290                           ; #config settings
   291  0008B5  00                 	db	0	; dummy byte at the end
   292  0000                     
   293                           	psect	cinit
   294  003B60                     __pcinit:
   295                           	opt stack 0
   296  003B60                     start_initialization:
   297                           	opt stack 0
   298  003B60                     __initialization:
   299                           	opt stack 0
   300                           
   301                           ; Clear objects allocated to COMRAM (1 bytes)
   302  003B60  6A33               	clrf	__pbssCOMRAM& (0+255),c
   303  003B62                     end_of_initialization:
   304                           	opt stack 0
   305  003B62                     __end_of__initialization:
   306                           	opt stack 0
   307  003B62  0E00               	movlw	low (__Lmediumconst shr (0+16))
   308  003B64  6EF8               	movwf	tblptru,c
   309  003B66  0100               	movlb	0
   310  003B68  EF4A  F00E         	goto	_main	;jump to C main() function
   311                           tblptru	equ	0xFF8
   312                           
   313                           	psect	bssCOMRAM
   314  000033                     __pbssCOMRAM:
   315                           	opt stack 0
   316  000033                     _USART_Status:
   317                           	opt stack 0
   318  000033                     	ds	1
   319                           tblptru	equ	0xFF8
   320                           
   321                           	psect	cstackBANK0
   322  000060                     __pcstackBANK0:
   323                           	opt stack 0
   324  000060                     ??_lcd_write_buffer:
   325  000060                     ??_InitApp:
   326  000060                     ??__tdiv_to_l_:
   327  000060                     ??__div_to_l_:
   328  000060                     ??___ftpack:
   329  000060                     ??___ftge:
   330  000060                     ?___lldiv:
   331                           	opt stack 0
   332  000060                     ___awmod@counter:
   333                           	opt stack 0
   334  000060                     memset@p:
   335                           	opt stack 0
   336  000060                     ___lldiv@dividend:
   337                           	opt stack 0
   338  000060                     lcd_test@msgTest:
   339                           	opt stack 0
   340                           
   341                           ; 16 bytes @ 0x0
   342  000060                     	ds	1
   343  000061                     ___awmod@sign:
   344                           	opt stack 0
   345                           
   346                           ; 1 bytes @ 0x1
   347  000061                     	ds	1
   348  000062                     ?___awdiv:
   349                           	opt stack 0
   350  000062                     ___awdiv@dividend:
   351                           	opt stack 0
   352                           
   353                           ; 2 bytes @ 0x2
   354  000062                     	ds	1
   355  000063                     ?___ftadd:
   356                           	opt stack 0
   357  000063                     ?___lltoft:
   358                           	opt stack 0
   359  000063                     ?___lwtoft:
   360                           	opt stack 0
   361  000063                     _lcd_write_buffer$1753:
   362                           	opt stack 0
   363  000063                     ___lwtoft@c:
   364                           	opt stack 0
   365  000063                     ___ftadd@f1:
   366                           	opt stack 0
   367  000063                     __tdiv_to_l_@quot:
   368                           	opt stack 0
   369  000063                     ___lltoft@c:
   370                           	opt stack 0
   371                           
   372                           ; 4 bytes @ 0x3
   373  000063                     	ds	1
   374  000064                     ___awdiv@divisor:
   375                           	opt stack 0
   376  000064                     __div_to_l_@quot:
   377                           	opt stack 0
   378  000064                     ___lldiv@divisor:
   379                           	opt stack 0
   380                           
   381                           ; 4 bytes @ 0x4
   382  000064                     	ds	1
   383  000065                     lcd_write_buffer@pos:
   384                           	opt stack 0
   385                           
   386                           ; 2 bytes @ 0x5
   387  000065                     	ds	1
   388  000066                     ??___lwtoft:
   389  000066                     ___awdiv@counter:
   390                           	opt stack 0
   391  000066                     ___ftadd@f2:
   392                           	opt stack 0
   393                           
   394                           ; 3 bytes @ 0x6
   395  000066                     	ds	1
   396  000067                     ??___lltoft:
   397  000067                     ___awdiv@sign:
   398                           	opt stack 0
   399  000067                     __tdiv_to_l_@cntr:
   400                           	opt stack 0
   401                           
   402                           ; 1 bytes @ 0x7
   403  000067                     	ds	1
   404  000068                     ?___ftdiv:
   405                           	opt stack 0
   406  000068                     ?___llmod:
   407                           	opt stack 0
   408  000068                     __div_to_l_@cntr:
   409                           	opt stack 0
   410  000068                     __tdiv_to_l_@exp1:
   411                           	opt stack 0
   412  000068                     ___awdiv@quotient:
   413                           	opt stack 0
   414  000068                     ___ftdiv@f1:
   415                           	opt stack 0
   416  000068                     ___llmod@dividend:
   417                           	opt stack 0
   418                           
   419                           ; 4 bytes @ 0x8
   420  000068                     	ds	1
   421  000069                     ??___ftadd:
   422  000069                     __div_to_l_@exp1:
   423                           	opt stack 0
   424                           
   425                           ; 1 bytes @ 0x9
   426  000069                     	ds	1
   427  00006A                     ?___wmul:
   428                           	opt stack 0
   429  00006A                     ___wmul@multiplier:
   430                           	opt stack 0
   431                           
   432                           ; 2 bytes @ 0xA
   433  00006A                     	ds	1
   434  00006B                     ___ftdiv@f2:
   435                           	opt stack 0
   436                           
   437                           ; 3 bytes @ 0xB
   438  00006B                     	ds	1
   439  00006C                     ___ftadd@sign:
   440                           	opt stack 0
   441  00006C                     ___wmul@multiplicand:
   442                           	opt stack 0
   443  00006C                     ___llmod@divisor:
   444                           	opt stack 0
   445                           
   446                           ; 4 bytes @ 0xC
   447  00006C                     	ds	1
   448  00006D                     ___ftadd@exp2:
   449                           	opt stack 0
   450                           
   451                           ; 1 bytes @ 0xD
   452  00006D                     	ds	1
   453  00006E                     ??___ftdiv:
   454  00006E                     ___ftadd@exp1:
   455                           	opt stack 0
   456  00006E                     ___wmul@product:
   457                           	opt stack 0
   458                           
   459                           ; 2 bytes @ 0xE
   460  00006E                     	ds	1
   461  00006F                     ?___ftsub:
   462                           	opt stack 0
   463  00006F                     ___ftsub@f1:
   464                           	opt stack 0
   465                           
   466                           ; 3 bytes @ 0xF
   467  00006F                     	ds	1
   468  000070                     ??___llmod:
   469  000070                     lcd_test@ln:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x10
   473  000070                     	ds	1
   474  000071                     ___ftdiv@cntr:
   475                           	opt stack 0
   476  000071                     ___llmod@counter:
   477                           	opt stack 0
   478                           
   479                           ; 1 bytes @ 0x11
   480  000071                     	ds	1
   481  000072                     lcd_test@pos:
   482                           	opt stack 0
   483  000072                     ___ftdiv@f3:
   484                           	opt stack 0
   485  000072                     ___ftsub@f2:
   486                           	opt stack 0
   487                           
   488                           ; 3 bytes @ 0x12
   489  000072                     	ds	3
   490  000075                     ___ftdiv@exp:
   491                           	opt stack 0
   492  000075                     ___asftsub@f1p:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0x15
   496  000075                     	ds	1
   497  000076                     ___ftdiv@sign:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x16
   501  000076                     	ds	1
   502  000077                     ?___ftmul:
   503                           	opt stack 0
   504  000077                     ___asftsub@f2:
   505                           	opt stack 0
   506  000077                     ___ftmul@f1:
   507                           	opt stack 0
   508                           
   509                           ; 3 bytes @ 0x17
   510  000077                     	ds	3
   511  00007A                     ___ftmul@f2:
   512                           	opt stack 0
   513                           
   514                           ; 3 bytes @ 0x1A
   515  00007A                     	ds	3
   516  00007D                     ??___ftmul:
   517                           
   518                           ; 0 bytes @ 0x1D
   519  00007D                     	ds	3
   520  000080                     ___ftmul@exp:
   521                           	opt stack 0
   522                           
   523                           ; 1 bytes @ 0x20
   524  000080                     	ds	1
   525  000081                     ___ftmul@f3_as_product:
   526                           	opt stack 0
   527                           
   528                           ; 3 bytes @ 0x21
   529  000081                     	ds	3
   530  000084                     ___ftmul@cntr:
   531                           	opt stack 0
   532                           
   533                           ; 1 bytes @ 0x24
   534  000084                     	ds	1
   535  000085                     ___ftmul@sign:
   536                           	opt stack 0
   537                           
   538                           ; 1 bytes @ 0x25
   539  000085                     	ds	1
   540  000086                     ?_fround:
   541                           	opt stack 0
   542  000086                     ?_scale:
   543                           	opt stack 0
   544  000086                     ___asftmul@f1p:
   545                           	opt stack 0
   546                           
   547                           ; 2 bytes @ 0x26
   548  000086                     	ds	2
   549  000088                     ___asftmul@f2:
   550                           	opt stack 0
   551                           
   552                           ; 3 bytes @ 0x28
   553  000088                     	ds	1
   554  000089                     _fround$2468:
   555                           	opt stack 0
   556  000089                     _scale$2469:
   557                           	opt stack 0
   558                           
   559                           ; 3 bytes @ 0x29
   560  000089                     	ds	3
   561  00008C                     scale@scl:
   562                           	opt stack 0
   563  00008C                     _fround$2467:
   564                           	opt stack 0
   565                           
   566                           ; 3 bytes @ 0x2C
   567  00008C                     	ds	1
   568  00008D                     ?___fttol:
   569                           	opt stack 0
   570  00008D                     ___fttol@f1:
   571                           	opt stack 0
   572                           
   573                           ; 3 bytes @ 0x2D
   574  00008D                     	ds	2
   575  00008F                     fround@prec:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0x2F
   579  00008F                     	ds	1
   580  000090                     ___asftadd@f1p:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0x30
   584  000090                     	ds	1
   585  000091                     ??___fttol:
   586                           
   587                           ; 0 bytes @ 0x31
   588  000091                     	ds	1
   589  000092                     ___asftadd@f2:
   590                           	opt stack 0
   591                           
   592                           ; 3 bytes @ 0x32
   593  000092                     	ds	4
   594  000096                     ___fttol@sign1:
   595                           	opt stack 0
   596                           
   597                           ; 1 bytes @ 0x36
   598  000096                     	ds	1
   599  000097                     ___fttol@lval:
   600                           	opt stack 0
   601                           
   602                           ; 4 bytes @ 0x37
   603  000097                     	ds	4
   604  00009B                     ___fttol@exp1:
   605                           	opt stack 0
   606                           
   607                           ; 1 bytes @ 0x3B
   608  00009B                     	ds	1
   609  00009C                     ?_sprintf:
   610                           	opt stack 0
   611  00009C                     sprintf@sp:
   612                           	opt stack 0
   613                           
   614                           ; 2 bytes @ 0x3C
   615  00009C                     	ds	2
   616  00009E                     sprintf@f:
   617                           	opt stack 0
   618                           
   619                           ; 2 bytes @ 0x3E
   620  00009E                     	ds	7
   621  0000A5                     ??_sprintf:
   622                           
   623                           ; 0 bytes @ 0x45
   624  0000A5                     	ds	6
   625  0000AB                     _sprintf$2470:
   626                           	opt stack 0
   627                           
   628                           ; 3 bytes @ 0x4B
   629  0000AB                     	ds	3
   630  0000AE                     _sprintf$1820:
   631                           	opt stack 0
   632                           
   633                           ; 4 bytes @ 0x4E
   634  0000AE                     	ds	4
   635  0000B2                     sprintf@vd:
   636                           	opt stack 0
   637                           
   638                           ; 4 bytes @ 0x52
   639  0000B2                     	ds	4
   640  0000B6                     sprintf@vd_1822:
   641                           	opt stack 0
   642                           
   643                           ; 4 bytes @ 0x56
   644  0000B6                     	ds	4
   645  0000BA                     sprintf@ap:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0x5A
   649  0000BA                     	ds	2
   650  0000BC                     sprintf@integ:
   651                           	opt stack 0
   652                           
   653                           ; 3 bytes @ 0x5C
   654  0000BC                     	ds	3
   655  0000BF                     sprintf@flag:
   656                           	opt stack 0
   657                           
   658                           ; 2 bytes @ 0x5F
   659  0000BF                     	ds	2
   660  0000C1                     sprintf@exp:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x61
   664  0000C1                     	ds	2
   665  0000C3                     sprintf@width:
   666                           	opt stack 0
   667                           
   668                           ; 2 bytes @ 0x63
   669  0000C3                     	ds	2
   670  0000C5                     sprintf@fval:
   671                           	opt stack 0
   672                           
   673                           ; 3 bytes @ 0x65
   674  0000C5                     	ds	3
   675  0000C8                     sprintf@_val:
   676                           	opt stack 0
   677                           
   678                           ; 4 bytes @ 0x68
   679  0000C8                     	ds	4
   680  0000CC                     sprintf@prec:
   681                           	opt stack 0
   682                           
   683                           ; 2 bytes @ 0x6C
   684  0000CC                     	ds	2
   685  0000CE                     sprintf@c:
   686                           	opt stack 0
   687                           
   688                           ; 1 bytes @ 0x6E
   689  0000CE                     	ds	1
   690  0000CF                     ??_main:
   691                           
   692                           ; 0 bytes @ 0x6F
   693  0000CF                     	ds	1
   694  0000D0                     main@buffer:
   695                           	opt stack 0
   696                           
   697                           ; 16 bytes @ 0x70
   698  0000D0                     	ds	16
   699  0000E0                     main@adcValueOld:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0x80
   703  0000E0                     	ds	2
   704  0000E2                     _main$2466:
   705                           	opt stack 0
   706                           
   707                           ; 3 bytes @ 0x82
   708  0000E2                     	ds	3
   709  0000E5                     main@size:
   710                           	opt stack 0
   711                           
   712                           ; 2 bytes @ 0x85
   713  0000E5                     	ds	2
   714  0000E7                     main@adcValue:
   715                           	opt stack 0
   716                           
   717                           ; 2 bytes @ 0x87
   718  0000E7                     	ds	2
   719  0000E9                     main@count:
   720                           	opt stack 0
   721                           
   722                           ; 2 bytes @ 0x89
   723  0000E9                     	ds	2
   724                           tblptru	equ	0xFF8
   725                           
   726                           	psect	cstackCOMRAM
   727  000001                     __pcstackCOMRAM:
   728                           	opt stack 0
   729  000001                     ??_low_isr:
   730  000001                     
   731                           ; 1 bytes @ 0x0
   732  000001                     	ds	17
   733  000012                     ??i2_lcd_delay:
   734                           
   735                           ; 0 bytes @ 0x11
   736  000012                     	ds	1
   737  000013                     i2lcd_write@x:
   738                           	opt stack 0
   739  000013                     i2lcd_write_cmd@x:
   740                           	opt stack 0
   741                           
   742                           ; 1 bytes @ 0x12
   743  000013                     	ds	1
   744  000014                     i2lcd_write_buffer@buffer:
   745                           	opt stack 0
   746                           
   747                           ; 2 bytes @ 0x13
   748  000014                     	ds	2
   749  000016                     i2lcd_write_buffer@size:
   750                           	opt stack 0
   751                           
   752                           ; 1 bytes @ 0x15
   753  000016                     	ds	1
   754  000017                     ??i2_lcd_write_buffer:
   755                           
   756                           ; 0 bytes @ 0x16
   757  000017                     	ds	3
   758  00001A                     i2_lcd_write_buffer$1753:
   759                           	opt stack 0
   760                           
   761                           ; 2 bytes @ 0x19
   762  00001A                     	ds	2
   763  00001C                     i2lcd_write_buffer@pos:
   764                           	opt stack 0
   765                           
   766                           ; 2 bytes @ 0x1B
   767  00001C                     	ds	2
   768  00001E                     ??_high_isr:
   769                           
   770                           ; 0 bytes @ 0x1D
   771  00001E                     	ds	15
   772  00002D                     ??_lcd_delay:
   773  00002D                     ??_isdigit:
   774  00002D                     ??_SetChanADC:
   775  00002D                     ??___lldiv:
   776  00002D                     ?_strlen:
   777                           	opt stack 0
   778  00002D                     ?_ReadADC:
   779                           	opt stack 0
   780  00002D                     ?___awmod:
   781                           	opt stack 0
   782  00002D                     ?___ftpack:
   783                           	opt stack 0
   784  00002D                     ?___ftneg:
   785                           	opt stack 0
   786  00002D                     ?__tdiv_to_l_:
   787                           	opt stack 0
   788  00002D                     ?__div_to_l_:
   789                           	opt stack 0
   790  00002D                     OpenADC@config2:
   791                           	opt stack 0
   792  00002D                     WriteUSART@data:
   793                           	opt stack 0
   794  00002D                     OpenUSART@spbrg:
   795                           	opt stack 0
   796  00002D                     ___awmod@dividend:
   797                           	opt stack 0
   798  00002D                     memset@p1:
   799                           	opt stack 0
   800  00002D                     strlen@s:
   801                           	opt stack 0
   802  00002D                     __div_to_l_@f1:
   803                           	opt stack 0
   804  00002D                     ___ftpack@arg:
   805                           	opt stack 0
   806  00002D                     __tdiv_to_l_@f1:
   807                           	opt stack 0
   808  00002D                     ___ftge@ff1:
   809                           	opt stack 0
   810  00002D                     ___ftneg@f1:
   811                           	opt stack 0
   812                           
   813                           ; 3 bytes @ 0x2C
   814  00002D                     	ds	1
   815  00002E                     ??_lcd_init:
   816  00002E                     OpenADC@portconfig:
   817                           	opt stack 0
   818  00002E                     SetChanADC@channel:
   819                           	opt stack 0
   820  00002E                     lcd_write@x:
   821                           	opt stack 0
   822  00002E                     lcd_write_cmd@x:
   823                           	opt stack 0
   824  00002E                     _isdigit$2095:
   825                           	opt stack 0
   826  00002E                     ___lldiv@quotient:
   827                           	opt stack 0
   828                           
   829                           ; 4 bytes @ 0x2D
   830  00002E                     	ds	1
   831  00002F                     ??_strlen:
   832  00002F                     ??_OpenADC:
   833  00002F                     ??_OpenUSART:
   834  00002F                     lcd_pos@coluna:
   835                           	opt stack 0
   836  00002F                     isdigit@c:
   837                           	opt stack 0
   838  00002F                     lcd_write_buffer@buffer:
   839                           	opt stack 0
   840  00002F                     ___awmod@divisor:
   841                           	opt stack 0
   842  00002F                     memset@c:
   843                           	opt stack 0
   844                           
   845                           ; 2 bytes @ 0x2E
   846  00002F                     	ds	1
   847  000030                     ??_lcd_pos:
   848  000030                     ___ftpack@exp:
   849                           	opt stack 0
   850  000030                     __div_to_l_@f2:
   851                           	opt stack 0
   852  000030                     __tdiv_to_l_@f2:
   853                           	opt stack 0
   854  000030                     ___ftge@ff2:
   855                           	opt stack 0
   856                           
   857                           ; 3 bytes @ 0x2F
   858  000030                     	ds	1
   859  000031                     ??___awmod:
   860  000031                     OpenADC@config:
   861                           	opt stack 0
   862  000031                     lcd_write_buffer@size:
   863                           	opt stack 0
   864  000031                     lcd_pos@linha:
   865                           	opt stack 0
   866  000031                     ___ftpack@sign:
   867                           	opt stack 0
   868  000031                     memset@n:
   869                           	opt stack 0
   870  000031                     strlen@cp:
   871                           	opt stack 0
   872                           
   873                           ; 2 bytes @ 0x30
   874  000031                     	ds	1
   875  000032                     ??_lcd_test:
   876  000032                     ??___awdiv:
   877  000032                     OpenUSART@config:
   878                           	opt stack 0
   879  000032                     ___lldiv@counter:
   880                           	opt stack 0
   881  000032                     ___lltoft@exp:
   882                           	opt stack 0
   883                           
   884                           ; 1 bytes @ 0x31
   885  000032                     	ds	1
   886  000033                     tblptru	equ	0xFF8
   887                           
   888                           ; 0 bytes @ 0x32
   889 ;;
   890 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   891 ;;
   892 ;; *************** function _main *****************
   893 ;; Defined at:
   894 ;;		line 10 in file "main.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;  buffer         16  112[BANK0 ] unsigned char [16]
   899 ;;  count           2  137[BANK0 ] int 
   900 ;;  adcValue        2  135[BANK0 ] unsigned int 
   901 ;;  size            2  133[BANK0 ] int 
   902 ;;  adcValueOld     2  128[BANK0 ] unsigned int 
   903 ;; Return value:  Size  Location     Type
   904 ;;		None               void
   905 ;; Registers used:
   906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   912 ;;      Params:         0       0       0       0       0       0       0       0       0
   913 ;;      Locals:         0      27       0       0       0       0       0       0       0
   914 ;;      Temps:          0       1       0       0       0       0       0       0       0
   915 ;;      Totals:         0      28       0       0       0       0       0       0       0
   916 ;;Total ram usage:       28 bytes
   917 ;; Hardware stack levels required when called:   10
   918 ;; This function calls:
   919 ;;		_BusyADC
   920 ;;		_ConfigureOscillator
   921 ;;		_ConvertADC
   922 ;;		_InitApp
   923 ;;		_ReadADC
   924 ;;		_WriteUSART
   925 ;;		___ftdiv
   926 ;;		___ftmul
   927 ;;		___lwtoft
   928 ;;		_lcd_clear
   929 ;;		_lcd_cursor_off
   930 ;;		_lcd_enable
   931 ;;		_lcd_init
   932 ;;		_lcd_pos
   933 ;;		_lcd_test
   934 ;;		_lcd_write_buffer
   935 ;;		_memset
   936 ;;		_sprintf
   937 ;;		_strlen
   938 ;; This function is called by:
   939 ;;		Startup code after reset
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           	psect	text0
   944  001C94                     __ptext0:
   945                           	opt stack 0
   946  001C94                     _main:
   947                           	opt stack 21
   948                           
   949                           ;main.c: 11: int count;
   950                           ;main.c: 12: int size;
   951                           ;main.c: 13: unsigned int adcValue = 0;
   952                           
   953                           ;incstack = 0
   954  001C94  0E00               	movlw	0
   955  001C96  0100               	movlb	0	; () banked
   956  001C98  0100               	movlb	0	; () banked
   957  001C9A  6FE8               	movwf	(main@adcValue+1)& (0+255),b
   958  001C9C  0E00               	movlw	0
   959  001C9E  0100               	movlb	0	; () banked
   960  001CA0  6FE7               	movwf	main@adcValue& (0+255),b
   961                           
   962                           ;main.c: 14: unsigned int adcValueOld = 0;
   963  001CA2  0E00               	movlw	0
   964  001CA4  0100               	movlb	0	; () banked
   965  001CA6  0100               	movlb	0	; () banked
   966  001CA8  6FE1               	movwf	(main@adcValueOld+1)& (0+255),b
   967  001CAA  0E00               	movlw	0
   968  001CAC  0100               	movlb	0	; () banked
   969  001CAE  6FE0               	movwf	main@adcValueOld& (0+255),b
   970                           
   971                           ; BSR set to: 0
   972                           ;main.c: 15: char buffer[16];
   973                           ;main.c: 17: ConfigureOscillator();
   974  001CB0  ECCF  F01D         	call	_ConfigureOscillator	;wreg free
   975                           
   976                           ;main.c: 18: InitApp();
   977  001CB4  ECFF  F01A         	call	_InitApp	;wreg free
   978                           
   979                           ;main.c: 20: lcd_init();
   980  001CB8  EC19  F01C         	call	_lcd_init	;wreg free
   981                           
   982                           ;main.c: 21: lcd_enable();
   983  001CBC  ECA9  F01D         	call	_lcd_enable	;wreg free
   984                           
   985                           ;main.c: 22: lcd_cursor_off();
   986  001CC0  ECC1  F01D         	call	_lcd_cursor_off	;wreg free
   987                           
   988                           ;main.c: 23: lcd_test();
   989  001CC4  ECC8  F019         	call	_lcd_test	;wreg free
   990                           
   991                           ;main.c: 24: lcd_pos(2, 1);
   992  001CC8  0100               	movlb	0	; () banked
   993  001CCA  6FCF               	movwf	??_main& (0+255),b
   994  001CCC  0E01               	movlw	1
   995  001CCE  6E2F               	movwf	lcd_pos@coluna,c
   996  001CD0  0100               	movlb	0	; () banked
   997  001CD2  51CF               	movf	??_main& (0+255),w,b
   998  001CD4  0E02               	movlw	2
   999  001CD6  ECDC  F01C         	call	_lcd_pos
  1000  001CDA                     l5352:
  1001                           
  1002                           ;main.c: 26: ConvertADC();
  1003  001CDA  ECCD  F01D         	call	_ConvertADC	;wreg free
  1004  001CDE                     l5354:
  1005  001CDE  ECB6  F01D         	call	_BusyADC	;wreg free
  1006  001CE2  0900               	iorlw	0
  1007  001CE4  A4D8               	btfss	status,2,c
  1008  001CE6  D7FB               	goto	l5354
  1009                           
  1010                           ;main.c: 28: adcValue = ReadADC();
  1011  001CE8  ECBC  F01D         	call	_ReadADC	;wreg free
  1012  001CEC  C02D  F0E7         	movff	?_ReadADC,main@adcValue
  1013  001CF0  C02E  F0E8         	movff	?_ReadADC+1,main@adcValue+1
  1014                           
  1015                           ;main.c: 29: if (adcValue != adcValueOld) {
  1016  001CF4  0100               	movlb	0	; () banked
  1017  001CF6  0100               	movlb	0	; () banked
  1018  001CF8  51E1               	movf	(main@adcValueOld+1)& (0+255),w,b
  1019  001CFA  0100               	movlb	0	; () banked
  1020  001CFC  0100               	movlb	0	; () banked
  1021  001CFE  19E8               	xorwf	(main@adcValue+1)& (0+255),w,b
  1022  001D00  E106               	bnz	u4075
  1023  001D02  0100               	movlb	0	; () banked
  1024  001D04  0100               	movlb	0	; () banked
  1025  001D06  51E0               	movf	main@adcValueOld& (0+255),w,b
  1026  001D08  0100               	movlb	0	; () banked
  1027  001D0A  0100               	movlb	0	; () banked
  1028  001D0C  19E7               	xorwf	main@adcValue& (0+255),w,b
  1029  001D0E                     u4075:
  1030  001D0E  B4D8               	btfsc	status,2,c
  1031  001D10  D17C               	goto	l5412
  1032                           
  1033                           ; BSR set to: 0
  1034                           ;main.c: 30: lcd_clear();
  1035  001D12  ECC5  F01D         	call	_lcd_clear	;wreg free
  1036                           
  1037                           ;main.c: 32: lcd_pos(1, 1);
  1038  001D16  0100               	movlb	0	; () banked
  1039  001D18  6FCF               	movwf	??_main& (0+255),b
  1040  001D1A  0E01               	movlw	1
  1041  001D1C  6E2F               	movwf	lcd_pos@coluna,c
  1042  001D1E  0100               	movlb	0	; () banked
  1043  001D20  51CF               	movf	??_main& (0+255),w,b
  1044  001D22  0E01               	movlw	1
  1045  001D24  ECDC  F01C         	call	_lcd_pos
  1046                           
  1047                           ;main.c: 33: memset(&buffer[0], 0, sizeof (buffer));
  1048  001D28  0100               	movlb	0	; () banked
  1049  001D2A  0E00               	movlw	high main@buffer
  1050  001D2C  6E2E               	movwf	memset@p1+1,c
  1051  001D2E  0100               	movlb	0	; () banked
  1052  001D30  0ED0               	movlw	low main@buffer
  1053  001D32  6E2D               	movwf	memset@p1,c
  1054  001D34  0E00               	movlw	0
  1055  001D36  6E30               	movwf	memset@c+1,c
  1056  001D38  0E00               	movlw	0
  1057  001D3A  6E2F               	movwf	memset@c,c
  1058  001D3C  0E00               	movlw	0
  1059  001D3E  6E32               	movwf	memset@n+1,c
  1060  001D40  0E10               	movlw	16
  1061  001D42  6E31               	movwf	memset@n,c
  1062  001D44  EC15  F01D         	call	_memset	;wreg free
  1063                           
  1064                           ;main.c: 34: sprintf(&buffer[0], "Step:%.4u %3.1f%%", adcValue, ((float) adcValue / 1023
      +                          ) * 100);
  1065  001D48  0EC0               	movlw	192
  1066  001D4A  0100               	movlb	0	; () banked
  1067  001D4C  0100               	movlb	0	; () banked
  1068  001D4E  6F6B               	movwf	___ftdiv@f2& (0+255),b
  1069  001D50  0E7F               	movlw	127
  1070  001D52  0100               	movlb	0	; () banked
  1071  001D54  0100               	movlb	0	; () banked
  1072  001D56  6F6C               	movwf	(___ftdiv@f2+1)& (0+255),b
  1073  001D58  0E44               	movlw	68
  1074  001D5A  0100               	movlb	0	; () banked
  1075  001D5C  0100               	movlb	0	; () banked
  1076  001D5E  6F6D               	movwf	(___ftdiv@f2+2)& (0+255),b
  1077  001D60  C0E7  F063         	movff	main@adcValue,___lwtoft@c
  1078  001D64  C0E8  F064         	movff	main@adcValue+1,___lwtoft@c+1
  1079  001D68  ECF9  F01C         	call	___lwtoft	;wreg free
  1080  001D6C  C063  F068         	movff	?___lwtoft,___ftdiv@f1
  1081  001D70  C064  F069         	movff	?___lwtoft+1,___ftdiv@f1+1
  1082  001D74  C065  F06A         	movff	?___lwtoft+2,___ftdiv@f1+2
  1083  001D78  EC00  F015         	call	___ftdiv	;wreg free
  1084  001D7C  C068  F077         	movff	?___ftdiv,___ftmul@f1
  1085  001D80  C069  F078         	movff	?___ftdiv+1,___ftmul@f1+1
  1086  001D84  C06A  F079         	movff	?___ftdiv+2,___ftmul@f1+2
  1087  001D88  0E00               	movlw	0
  1088  001D8A  0100               	movlb	0	; () banked
  1089  001D8C  0100               	movlb	0	; () banked
  1090  001D8E  6F7A               	movwf	___ftmul@f2& (0+255),b
  1091  001D90  0EC8               	movlw	200
  1092  001D92  0100               	movlb	0	; () banked
  1093  001D94  0100               	movlb	0	; () banked
  1094  001D96  6F7B               	movwf	(___ftmul@f2+1)& (0+255),b
  1095  001D98  0E42               	movlw	66
  1096  001D9A  0100               	movlb	0	; () banked
  1097  001D9C  0100               	movlb	0	; () banked
  1098  001D9E  6F7C               	movwf	(___ftmul@f2+2)& (0+255),b
  1099  001DA0  EC49  F013         	call	___ftmul	;wreg free
  1100  001DA4  C077  F0E2         	movff	?___ftmul,_main$2466
  1101  001DA8  C078  F0E3         	movff	?___ftmul+1,_main$2466+1
  1102  001DAC  C079  F0E4         	movff	?___ftmul+2,_main$2466+2
  1103                           
  1104                           ;main.c: 34: sprintf(&buffer[0], "Step:%.4u %3.1f%%", adcValue, ((float) adcValue / 1023
      +                          ) * 100);
  1105  001DB0  0100               	movlb	0	; () banked
  1106  001DB2  0E00               	movlw	high main@buffer
  1107  001DB4  0100               	movlb	0	; () banked
  1108  001DB6  0100               	movlb	0	; () banked
  1109  001DB8  6F9D               	movwf	(sprintf@sp+1)& (0+255),b
  1110  001DBA  0100               	movlb	0	; () banked
  1111  001DBC  0ED0               	movlw	low main@buffer
  1112  001DBE  0100               	movlb	0	; () banked
  1113  001DC0  0100               	movlb	0	; () banked
  1114  001DC2  6F9C               	movwf	sprintf@sp& (0+255),b
  1115  001DC4  0E08               	movlw	high STR_2
  1116  001DC6  0100               	movlb	0	; () banked
  1117  001DC8  0100               	movlb	0	; () banked
  1118  001DCA  6F9F               	movwf	(sprintf@f+1)& (0+255),b
  1119  001DCC  0E87               	movlw	low STR_2
  1120  001DCE  0100               	movlb	0	; () banked
  1121  001DD0  0100               	movlb	0	; () banked
  1122  001DD2  6F9E               	movwf	sprintf@f& (0+255),b
  1123  001DD4  C0E7  F0A0         	movff	main@adcValue,?_sprintf+4
  1124  001DD8  C0E8  F0A1         	movff	main@adcValue+1,?_sprintf+5
  1125  001DDC  C0E2  F0A2         	movff	_main$2466,?_sprintf+6
  1126  001DE0  C0E3  F0A3         	movff	_main$2466+1,?_sprintf+7
  1127  001DE4  C0E4  F0A4         	movff	_main$2466+2,?_sprintf+8
  1128  001DE8  EC5B  F004         	call	_sprintf	;wreg free
  1129                           
  1130                           ;main.c: 35: size = (strlen(buffer) > sizeof(buffer)) ? sizeof(buffer) : strlen(buffer);
  1131  001DEC  0100               	movlb	0	; () banked
  1132  001DEE  0E00               	movlw	high main@buffer
  1133  001DF0  6E2E               	movwf	strlen@s+1,c
  1134  001DF2  0100               	movlb	0	; () banked
  1135  001DF4  0ED0               	movlw	low main@buffer
  1136  001DF6  6E2D               	movwf	strlen@s,c
  1137  001DF8  ECBF  F01C         	call	_strlen	;wreg free
  1138  001DFC  0E11               	movlw	17
  1139  001DFE  5C2D               	subwf	?_strlen,w,c
  1140  001E00  0E00               	movlw	0
  1141  001E02  582E               	subwfb	?_strlen+1,w,c
  1142  001E04  B0D8               	btfsc	status,0,c
  1143  001E06  D00D               	goto	l5374
  1144  001E08  0100               	movlb	0	; () banked
  1145  001E0A  0E00               	movlw	high main@buffer
  1146  001E0C  6E2E               	movwf	strlen@s+1,c
  1147  001E0E  0100               	movlb	0	; () banked
  1148  001E10  0ED0               	movlw	low main@buffer
  1149  001E12  6E2D               	movwf	strlen@s,c
  1150  001E14  ECBF  F01C         	call	_strlen	;wreg free
  1151  001E18  C02D  F0E5         	movff	?_strlen,main@size
  1152  001E1C  C02E  F0E6         	movff	?_strlen+1,main@size+1
  1153  001E20  D007               	goto	l5376
  1154  001E22                     l5374:
  1155  001E22  0E00               	movlw	0
  1156  001E24  0100               	movlb	0	; () banked
  1157  001E26  0100               	movlb	0	; () banked
  1158  001E28  6FE6               	movwf	(main@size+1)& (0+255),b
  1159  001E2A  0E10               	movlw	16
  1160  001E2C  0100               	movlb	0	; () banked
  1161  001E2E  6FE5               	movwf	main@size& (0+255),b
  1162  001E30                     l5376:
  1163                           
  1164                           ;main.c: 36: lcd_write_buffer(buffer, size);
  1165  001E30  0100               	movlb	0	; () banked
  1166  001E32  0E00               	movlw	high main@buffer
  1167  001E34  6E30               	movwf	lcd_write_buffer@buffer+1,c
  1168  001E36  0100               	movlb	0	; () banked
  1169  001E38  0ED0               	movlw	low main@buffer
  1170  001E3A  6E2F               	movwf	lcd_write_buffer@buffer,c
  1171  001E3C  C0E5  F031         	movff	main@size,lcd_write_buffer@size
  1172  001E40  EC13  F019         	call	_lcd_write_buffer	;wreg free
  1173                           
  1174                           ;main.c: 37: for(count = 0; count < size; count++){
  1175  001E44  0E00               	movlw	0
  1176  001E46  0100               	movlb	0	; () banked
  1177  001E48  0100               	movlb	0	; () banked
  1178  001E4A  6FEA               	movwf	(main@count+1)& (0+255),b
  1179  001E4C  0E00               	movlw	0
  1180  001E4E  0100               	movlb	0	; () banked
  1181  001E50  6FE9               	movwf	main@count& (0+255),b
  1182  001E52  D015               	goto	l5384
  1183  001E54                     l241:
  1184  001E54  A2AC               	btfss	4012,1,c	;volatile
  1185  001E56  D7FE               	goto	l241
  1186                           
  1187                           ;main.c: 39: WriteUSART((char)buffer[count]);
  1188  001E58  0100               	movlb	0	; () banked
  1189  001E5A  0ED0               	movlw	low main@buffer
  1190  001E5C  0100               	movlb	0	; () banked
  1191  001E5E  0100               	movlb	0	; () banked
  1192  001E60  25E9               	addwf	main@count& (0+255),w,b
  1193  001E62  6ED9               	movwf	fsr2l,c
  1194  001E64  0100               	movlb	0	; () banked
  1195  001E66  0E00               	movlw	high main@buffer
  1196  001E68  0100               	movlb	0	; () banked
  1197  001E6A  0100               	movlb	0	; () banked
  1198  001E6C  21EA               	addwfc	(main@count+1)& (0+255),w,b
  1199  001E6E  6EDA               	movwf	fsr2h,c
  1200  001E70  50DF               	movf	indf2,w,c
  1201  001E72  EC8F  F01D         	call	_WriteUSART
  1202  001E76  0100               	movlb	0	; () banked
  1203  001E78  0100               	movlb	0	; () banked
  1204  001E7A  4BE9               	infsnz	main@count& (0+255),f,b
  1205  001E7C  2BEA               	incf	(main@count+1)& (0+255),f,b
  1206  001E7E                     l5384:
  1207                           
  1208                           ; BSR set to: 0
  1209  001E7E  0100               	movlb	0	; () banked
  1210  001E80  0100               	movlb	0	; () banked
  1211  001E82  51EA               	movf	(main@count+1)& (0+255),w,b
  1212  001E84  0A80               	xorlw	128
  1213  001E86  0100               	movlb	0	; () banked
  1214  001E88  6FCF               	movwf	??_main& (0+255),b
  1215  001E8A  0100               	movlb	0	; () banked
  1216  001E8C  51E5               	movf	main@size& (0+255),w,b
  1217  001E8E  0100               	movlb	0	; () banked
  1218  001E90  0100               	movlb	0	; () banked
  1219  001E92  5DE9               	subwf	main@count& (0+255),w,b
  1220  001E94  0100               	movlb	0	; () banked
  1221  001E96  0100               	movlb	0	; () banked
  1222  001E98  51E6               	movf	(main@size+1)& (0+255),w,b
  1223  001E9A  0A80               	xorlw	128
  1224  001E9C  0100               	movlb	0	; () banked
  1225  001E9E  59CF               	subwfb	??_main& (0+255),w,b
  1226  001EA0  A0D8               	btfss	status,0,c
  1227  001EA2  D7D8               	goto	l241
  1228                           
  1229                           ; BSR set to: 0
  1230                           ;main.c: 40: }
  1231                           ;main.c: 42: lcd_pos(2, 1);
  1232                           
  1233                           ; BSR set to: 0
  1234  001EA4  0100               	movlb	0	; () banked
  1235  001EA6  6FCF               	movwf	??_main& (0+255),b
  1236  001EA8  0E01               	movlw	1
  1237  001EAA  6E2F               	movwf	lcd_pos@coluna,c
  1238  001EAC  0100               	movlb	0	; () banked
  1239  001EAE  51CF               	movf	??_main& (0+255),w,b
  1240  001EB0  0E02               	movlw	2
  1241  001EB2  ECDC  F01C         	call	_lcd_pos
  1242                           
  1243                           ;main.c: 43: memset(&buffer[0], 0, sizeof (buffer));
  1244  001EB6  0100               	movlb	0	; () banked
  1245  001EB8  0E00               	movlw	high main@buffer
  1246  001EBA  6E2E               	movwf	memset@p1+1,c
  1247  001EBC  0100               	movlb	0	; () banked
  1248  001EBE  0ED0               	movlw	low main@buffer
  1249  001EC0  6E2D               	movwf	memset@p1,c
  1250  001EC2  0E00               	movlw	0
  1251  001EC4  6E30               	movwf	memset@c+1,c
  1252  001EC6  0E00               	movlw	0
  1253  001EC8  6E2F               	movwf	memset@c,c
  1254  001ECA  0E00               	movlw	0
  1255  001ECC  6E32               	movwf	memset@n+1,c
  1256  001ECE  0E10               	movlw	16
  1257  001ED0  6E31               	movwf	memset@n,c
  1258  001ED2  EC15  F01D         	call	_memset	;wreg free
  1259                           
  1260                           ;main.c: 44: sprintf(&buffer[0], "Volts:%1.7fV", (float)adcValue * ((float)5 /1023));
  1261  001ED6  C0E7  F063         	movff	main@adcValue,___lwtoft@c
  1262  001EDA  C0E8  F064         	movff	main@adcValue+1,___lwtoft@c+1
  1263  001EDE  ECF9  F01C         	call	___lwtoft	;wreg free
  1264  001EE2  C063  F077         	movff	?___lwtoft,___ftmul@f1
  1265  001EE6  C064  F078         	movff	?___lwtoft+1,___ftmul@f1+1
  1266  001EEA  C065  F079         	movff	?___lwtoft+2,___ftmul@f1+2
  1267  001EEE  0E28               	movlw	40
  1268  001EF0  0100               	movlb	0	; () banked
  1269  001EF2  0100               	movlb	0	; () banked
  1270  001EF4  6F7A               	movwf	___ftmul@f2& (0+255),b
  1271  001EF6  0EA0               	movlw	160
  1272  001EF8  0100               	movlb	0	; () banked
  1273  001EFA  0100               	movlb	0	; () banked
  1274  001EFC  6F7B               	movwf	(___ftmul@f2+1)& (0+255),b
  1275  001EFE  0E3B               	movlw	59
  1276  001F00  0100               	movlb	0	; () banked
  1277  001F02  0100               	movlb	0	; () banked
  1278  001F04  6F7C               	movwf	(___ftmul@f2+2)& (0+255),b
  1279  001F06  EC49  F013         	call	___ftmul	;wreg free
  1280  001F0A  C077  F0E2         	movff	?___ftmul,_main$2466
  1281  001F0E  C078  F0E3         	movff	?___ftmul+1,_main$2466+1
  1282  001F12  C079  F0E4         	movff	?___ftmul+2,_main$2466+2
  1283                           
  1284                           ;main.c: 44: sprintf(&buffer[0], "Volts:%1.7fV", (float)adcValue * ((float)5 /1023));
  1285  001F16  0100               	movlb	0	; () banked
  1286  001F18  0E00               	movlw	high main@buffer
  1287  001F1A  0100               	movlb	0	; () banked
  1288  001F1C  0100               	movlb	0	; () banked
  1289  001F1E  6F9D               	movwf	(sprintf@sp+1)& (0+255),b
  1290  001F20  0100               	movlb	0	; () banked
  1291  001F22  0ED0               	movlw	low main@buffer
  1292  001F24  0100               	movlb	0	; () banked
  1293  001F26  0100               	movlb	0	; () banked
  1294  001F28  6F9C               	movwf	sprintf@sp& (0+255),b
  1295  001F2A  0E08               	movlw	high STR_3
  1296  001F2C  0100               	movlb	0	; () banked
  1297  001F2E  0100               	movlb	0	; () banked
  1298  001F30  6F9F               	movwf	(sprintf@f+1)& (0+255),b
  1299  001F32  0EA8               	movlw	low STR_3
  1300  001F34  0100               	movlb	0	; () banked
  1301  001F36  0100               	movlb	0	; () banked
  1302  001F38  6F9E               	movwf	sprintf@f& (0+255),b
  1303  001F3A  C0E2  F0A0         	movff	_main$2466,?_sprintf+4
  1304  001F3E  C0E3  F0A1         	movff	_main$2466+1,?_sprintf+5
  1305  001F42  C0E4  F0A2         	movff	_main$2466+2,?_sprintf+6
  1306  001F46  EC5B  F004         	call	_sprintf	;wreg free
  1307                           
  1308                           ;main.c: 45: size = (strlen(buffer) > sizeof(buffer)) ? sizeof(buffer) : strlen(buffer);
  1309  001F4A  0100               	movlb	0	; () banked
  1310  001F4C  0E00               	movlw	high main@buffer
  1311  001F4E  6E2E               	movwf	strlen@s+1,c
  1312  001F50  0100               	movlb	0	; () banked
  1313  001F52  0ED0               	movlw	low main@buffer
  1314  001F54  6E2D               	movwf	strlen@s,c
  1315  001F56  ECBF  F01C         	call	_strlen	;wreg free
  1316  001F5A  0E11               	movlw	17
  1317  001F5C  5C2D               	subwf	?_strlen,w,c
  1318  001F5E  0E00               	movlw	0
  1319  001F60  582E               	subwfb	?_strlen+1,w,c
  1320  001F62  B0D8               	btfsc	status,0,c
  1321  001F64  D00D               	goto	l5398
  1322  001F66  0100               	movlb	0	; () banked
  1323  001F68  0E00               	movlw	high main@buffer
  1324  001F6A  6E2E               	movwf	strlen@s+1,c
  1325  001F6C  0100               	movlb	0	; () banked
  1326  001F6E  0ED0               	movlw	low main@buffer
  1327  001F70  6E2D               	movwf	strlen@s,c
  1328  001F72  ECBF  F01C         	call	_strlen	;wreg free
  1329  001F76  C02D  F0E5         	movff	?_strlen,main@size
  1330  001F7A  C02E  F0E6         	movff	?_strlen+1,main@size+1
  1331  001F7E  D007               	goto	l5400
  1332  001F80                     l5398:
  1333  001F80  0E00               	movlw	0
  1334  001F82  0100               	movlb	0	; () banked
  1335  001F84  0100               	movlb	0	; () banked
  1336  001F86  6FE6               	movwf	(main@size+1)& (0+255),b
  1337  001F88  0E10               	movlw	16
  1338  001F8A  0100               	movlb	0	; () banked
  1339  001F8C  6FE5               	movwf	main@size& (0+255),b
  1340  001F8E                     l5400:
  1341                           
  1342                           ;main.c: 46: lcd_write_buffer(buffer, size);
  1343  001F8E  0100               	movlb	0	; () banked
  1344  001F90  0E00               	movlw	high main@buffer
  1345  001F92  6E30               	movwf	lcd_write_buffer@buffer+1,c
  1346  001F94  0100               	movlb	0	; () banked
  1347  001F96  0ED0               	movlw	low main@buffer
  1348  001F98  6E2F               	movwf	lcd_write_buffer@buffer,c
  1349  001F9A  C0E5  F031         	movff	main@size,lcd_write_buffer@size
  1350  001F9E  EC13  F019         	call	_lcd_write_buffer	;wreg free
  1351                           
  1352                           ;main.c: 48: adcValueOld = adcValue;
  1353  001FA2  C0E7  F0E0         	movff	main@adcValue,main@adcValueOld
  1354  001FA6  C0E8  F0E1         	movff	main@adcValue+1,main@adcValueOld+1
  1355                           
  1356                           ;main.c: 49: for(count = 0; count < size; count++){
  1357  001FAA  0E00               	movlw	0
  1358  001FAC  0100               	movlb	0	; () banked
  1359  001FAE  0100               	movlb	0	; () banked
  1360  001FB0  6FEA               	movwf	(main@count+1)& (0+255),b
  1361  001FB2  0E00               	movlw	0
  1362  001FB4  0100               	movlb	0	; () banked
  1363  001FB6  6FE9               	movwf	main@count& (0+255),b
  1364  001FB8  D015               	goto	l5410
  1365  001FBA                     l251:
  1366  001FBA  A2AC               	btfss	4012,1,c	;volatile
  1367  001FBC  D7FE               	goto	l251
  1368                           
  1369                           ;main.c: 51: WriteUSART((char)buffer[count]);
  1370  001FBE  0100               	movlb	0	; () banked
  1371  001FC0  0ED0               	movlw	low main@buffer
  1372  001FC2  0100               	movlb	0	; () banked
  1373  001FC4  0100               	movlb	0	; () banked
  1374  001FC6  25E9               	addwf	main@count& (0+255),w,b
  1375  001FC8  6ED9               	movwf	fsr2l,c
  1376  001FCA  0100               	movlb	0	; () banked
  1377  001FCC  0E00               	movlw	high main@buffer
  1378  001FCE  0100               	movlb	0	; () banked
  1379  001FD0  0100               	movlb	0	; () banked
  1380  001FD2  21EA               	addwfc	(main@count+1)& (0+255),w,b
  1381  001FD4  6EDA               	movwf	fsr2h,c
  1382  001FD6  50DF               	movf	indf2,w,c
  1383  001FD8  EC8F  F01D         	call	_WriteUSART
  1384  001FDC  0100               	movlb	0	; () banked
  1385  001FDE  0100               	movlb	0	; () banked
  1386  001FE0  4BE9               	infsnz	main@count& (0+255),f,b
  1387  001FE2  2BEA               	incf	(main@count+1)& (0+255),f,b
  1388  001FE4                     l5410:
  1389                           
  1390                           ; BSR set to: 0
  1391  001FE4  0100               	movlb	0	; () banked
  1392  001FE6  0100               	movlb	0	; () banked
  1393  001FE8  51EA               	movf	(main@count+1)& (0+255),w,b
  1394  001FEA  0A80               	xorlw	128
  1395  001FEC  0100               	movlb	0	; () banked
  1396  001FEE  6FCF               	movwf	??_main& (0+255),b
  1397  001FF0  0100               	movlb	0	; () banked
  1398  001FF2  51E5               	movf	main@size& (0+255),w,b
  1399  001FF4  0100               	movlb	0	; () banked
  1400  001FF6  0100               	movlb	0	; () banked
  1401  001FF8  5DE9               	subwf	main@count& (0+255),w,b
  1402  001FFA  0100               	movlb	0	; () banked
  1403  001FFC  0100               	movlb	0	; () banked
  1404  001FFE  51E6               	movf	(main@size+1)& (0+255),w,b
  1405  002000  0A80               	xorlw	128
  1406  002002  0100               	movlb	0	; () banked
  1407  002004  59CF               	subwfb	??_main& (0+255),w,b
  1408  002006  A0D8               	btfss	status,0,c
  1409  002008  D7D8               	goto	l251
  1410  00200A                     l5412:
  1411                           
  1412                           ; BSR set to: 0
  1413                           ;main.c: 52: }
  1414                           ;main.c: 53: }
  1415                           ;main.c: 54: for (count = 0; count < 40; count++) {
  1416  00200A  0E00               	movlw	0
  1417  00200C  0100               	movlb	0	; () banked
  1418  00200E  0100               	movlb	0	; () banked
  1419  002010  6FEA               	movwf	(main@count+1)& (0+255),b
  1420  002012  0E00               	movlw	0
  1421  002014  0100               	movlb	0	; () banked
  1422  002016  6FE9               	movwf	main@count& (0+255),b
  1423  002018                     
  1424                           ; BSR set to: 0
  1425  002018  0100               	movlb	0	; () banked
  1426  00201A  0100               	movlb	0	; () banked
  1427  00201C  51EA               	movf	(main@count+1)& (0+255),w,b
  1428  00201E  0A80               	xorlw	128
  1429  002020  0F80               	addlw	-128
  1430  002022  0E28               	movlw	40
  1431  002024  B4D8               	btfsc	status,2,c
  1432  002026  5DE9               	subwf	main@count& (0+255),w,b
  1433  002028  B0D8               	btfsc	status,0,c
  1434  00202A  D657               	goto	l5352
  1435                           
  1436                           ; BSR set to: 0
  1437                           ;main.c: 55: _delay((unsigned long)((10)*(48000000L/4000.0)));
  1438                           
  1439                           ; BSR set to: 0
  1440                           
  1441                           ; BSR set to: 0
  1442  00202C  0E9C               	movlw	156
  1443  00202E  0100               	movlb	0	; () banked
  1444  002030  6FCF               	movwf	??_main& (0+255),b
  1445  002032  0ED7               	movlw	215
  1446  002034                     u4927:
  1447  002034  2EE8               	decfsz	wreg,f,c
  1448  002036  D7FE               	goto	u4927
  1449  002038  2FCF               	decfsz	??_main& (0+255),f,b
  1450  00203A  D7FC               	goto	u4927
  1451  00203C  F000               	nop	
  1452  00203E  0100               	movlb	0	; () banked
  1453  002040  0100               	movlb	0	; () banked
  1454  002042  4BE9               	infsnz	main@count& (0+255),f,b
  1455  002044  2BEA               	incf	(main@count+1)& (0+255),f,b
  1456  002046  D7E8               	goto	L1
  1457  002048                     __end_of_main:
  1458                           	opt stack 0
  1459                           tblptru	equ	0xFF8
  1460                           wreg	equ	0xFE8
  1461                           indf2	equ	0xFDF
  1462                           fsr2h	equ	0xFDA
  1463                           fsr2l	equ	0xFD9
  1464                           status	equ	0xFD8
  1465                           
  1466 ;; *************** function _strlen *****************
  1467 ;; Defined at:
  1468 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\strlen.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;  s               2   44[COMRAM] PTR const unsigned char 
  1471 ;;		 -> main@buffer(16), 
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;  cp              2   48[COMRAM] PTR const unsigned char 
  1474 ;;		 -> main@buffer(16), 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  2   44[COMRAM] unsigned int 
  1477 ;; Registers used:
  1478 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1484 ;;      Params:         2       0       0       0       0       0       0       0       0
  1485 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1486 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1487 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1488 ;;Total ram usage:        6 bytes
  1489 ;; Hardware stack levels used:    1
  1490 ;; Hardware stack levels required when called:    5
  1491 ;; This function calls:
  1492 ;;		Nothing
  1493 ;; This function is called by:
  1494 ;;		_main
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           	psect	text1
  1499  00397E                     __ptext1:
  1500                           	opt stack 0
  1501  00397E                     _strlen:
  1502                           	opt stack 25
  1503                           
  1504                           ; BSR set to: 0
  1505                           ;incstack = 0
  1506  00397E  C02E  F032         	movff	strlen@s+1,strlen@cp+1
  1507  003982  C02D  F031         	movff	strlen@s,strlen@cp
  1508  003986  D002               	goto	l4508
  1509  003988                     l4506:
  1510  003988  4A31               	infsnz	strlen@cp,f,c
  1511  00398A  2A32               	incf	strlen@cp+1,f,c
  1512  00398C                     l4508:
  1513  00398C  C031  FFD9         	movff	strlen@cp,fsr2l
  1514  003990  C032  FFDA         	movff	strlen@cp+1,fsr2h
  1515  003994  50DF               	movf	indf2,w,c
  1516  003996  A4D8               	btfss	status,2,c
  1517  003998  D7F7               	goto	l4506
  1518  00399A  C02D  F02F         	movff	strlen@s,??_strlen
  1519  00399E  C02E  F030         	movff	strlen@s+1,??_strlen+1
  1520  0039A2  1E2F               	comf	??_strlen,f,c
  1521  0039A4  1E30               	comf	??_strlen+1,f,c
  1522  0039A6  4A2F               	infsnz	??_strlen,f,c
  1523  0039A8  2A30               	incf	??_strlen+1,f,c
  1524  0039AA  5031               	movf	strlen@cp,w,c
  1525  0039AC  242F               	addwf	??_strlen,w,c
  1526  0039AE  6E2D               	movwf	?_strlen,c
  1527  0039B0  5032               	movf	strlen@cp+1,w,c
  1528  0039B2  2030               	addwfc	??_strlen+1,w,c
  1529  0039B4  6E2E               	movwf	?_strlen+1,c
  1530  0039B6  0012               	return	
  1531  0039B8                     __end_of_strlen:
  1532                           	opt stack 0
  1533                           tblptru	equ	0xFF8
  1534                           wreg	equ	0xFE8
  1535                           indf2	equ	0xFDF
  1536                           fsr2h	equ	0xFDA
  1537                           fsr2l	equ	0xFD9
  1538                           status	equ	0xFD8
  1539                           
  1540 ;; *************** function _sprintf *****************
  1541 ;; Defined at:
  1542 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\doprnt.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;  sp              2   60[BANK0 ] PTR unsigned char 
  1545 ;;		 -> main@buffer(16), 
  1546 ;;  f               2   62[BANK0 ] PTR const unsigned char 
  1547 ;;		 -> STR_3(13), STR_2(18), 
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;  vd              4   82[BANK0 ] unsigned long 
  1550 ;;  vd              4   86[BANK0 ] unsigned long 
  1551 ;;  _val            4  104[BANK0 ] struct .
  1552 ;;  fval            3  101[BANK0 ] struct .
  1553 ;;  integ           3   92[BANK0 ] struct .
  1554 ;;  ival            3    0        struct .
  1555 ;;  prec            2  108[BANK0 ] int 
  1556 ;;  width           2   99[BANK0 ] int 
  1557 ;;  exp             2   97[BANK0 ] int 
  1558 ;;  flag            2   95[BANK0 ] unsigned short 
  1559 ;;  ap              2   90[BANK0 ] PTR void [1]
  1560 ;;		 -> ?_sprintf(2), 
  1561 ;;  c               1  110[BANK0 ] char 
  1562 ;;  d               1    0        unsigned char 
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  2   60[BANK0 ] int 
  1565 ;; Registers used:
  1566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1572 ;;      Params:         0       9       0       0       0       0       0       0       0
  1573 ;;      Locals:         0      36       0       0       0       0       0       0       0
  1574 ;;      Temps:          0       6       0       0       0       0       0       0       0
  1575 ;;      Totals:         0      51       0       0       0       0       0       0       0
  1576 ;;Total ram usage:       51 bytes
  1577 ;; Hardware stack levels used:    1
  1578 ;; Hardware stack levels required when called:    9
  1579 ;; This function calls:
  1580 ;;		___asftadd
  1581 ;;		___asftmul
  1582 ;;		___asftsub
  1583 ;;		___awdiv
  1584 ;;		___ftge
  1585 ;;		___ftmul
  1586 ;;		___ftneg
  1587 ;;		___fttol
  1588 ;;		___lldiv
  1589 ;;		___llmod
  1590 ;;		___lltoft
  1591 ;;		___wmul
  1592 ;;		__div_to_l_
  1593 ;;		__tdiv_to_l_
  1594 ;;		_fround
  1595 ;;		_isdigit
  1596 ;;		_scale
  1597 ;; This function is called by:
  1598 ;;		_main
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           	psect	text2
  1603  0008B6                     __ptext2:
  1604                           	opt stack 0
  1605  0008B6                     _sprintf:
  1606                           	opt stack 21
  1607                           
  1608                           ;doprnt.c: 494: va_list ap;
  1609                           ;doprnt.c: 499: signed char c;
  1610                           ;doprnt.c: 501: int width;
  1611                           ;doprnt.c: 504: int prec;
  1612                           ;doprnt.c: 508: unsigned short flag;
  1613                           ;doprnt.c: 515: char d;
  1614                           ;doprnt.c: 516: double fval, integ;
  1615                           ;doprnt.c: 517: int exp;
  1616                           ;doprnt.c: 518: double ival;
  1617                           ;doprnt.c: 519: union {
  1618                           ;doprnt.c: 520: unsigned long _val;
  1619                           ;doprnt.c: 521: struct {
  1620                           ;doprnt.c: 522: const char * _cp;
  1621                           ;doprnt.c: 523: unsigned _len;
  1622                           ;doprnt.c: 524: } _str;
  1623                           ;doprnt.c: 525: } _val;
  1624                           ;doprnt.c: 542: *ap = __va_start();
  1625                           
  1626                           ;incstack = 0
  1627  0008B6  0100               	movlb	0	; () banked
  1628  0008B8  0E00               	movlw	high (?_sprintf+4)
  1629  0008BA  0100               	movlb	0	; () banked
  1630  0008BC  0100               	movlb	0	; () banked
  1631  0008BE  6FBB               	movwf	(sprintf@ap+1)& (0+255),b
  1632  0008C0  0100               	movlb	0	; () banked
  1633  0008C2  0EA0               	movlw	low (?_sprintf+4)
  1634  0008C4  0100               	movlb	0	; () banked
  1635  0008C6  0100               	movlb	0	; () banked
  1636  0008C8  6FBA               	movwf	sprintf@ap& (0+255),b
  1637                           
  1638                           ;doprnt.c: 545: while(c = *f++) {
  1639  0008CA  EF7C  F00B         	goto	l5740
  1640  0008CE                     l5424:
  1641                           
  1642                           ; BSR set to: 0
  1643                           ;doprnt.c: 547: if(c != '%')
  1644  0008CE  0100               	movlb	0	; () banked
  1645  0008D0  0100               	movlb	0	; () banked
  1646  0008D2  51CE               	movf	sprintf@c& (0+255),w,b
  1647  0008D4  0A25               	xorlw	37
  1648  0008D6  B4D8               	btfsc	status,2,c
  1649  0008D8  D00D               	goto	l5430
  1650                           
  1651                           ; BSR set to: 0
  1652                           ;doprnt.c: 549: {
  1653                           ;doprnt.c: 550: ((*sp++ = (c)));
  1654  0008DA  C09C  FFD9         	movff	sprintf@sp,fsr2l
  1655  0008DE  C09D  FFDA         	movff	sprintf@sp+1,fsr2h
  1656  0008E2  0100               	movlb	0	; () banked
  1657  0008E4  C0CE  FFDF         	movff	sprintf@c,indf2
  1658                           
  1659                           ; BSR set to: 0
  1660  0008E8  0100               	movlb	0	; () banked
  1661  0008EA  0100               	movlb	0	; () banked
  1662  0008EC  4B9C               	infsnz	sprintf@sp& (0+255),f,b
  1663  0008EE  2B9D               	incf	(sprintf@sp+1)& (0+255),f,b
  1664                           
  1665                           ;doprnt.c: 551: continue;
  1666  0008F0  EF7C  F00B         	goto	l5740
  1667  0008F4                     l5430:
  1668                           
  1669                           ; BSR set to: 0
  1670                           ;doprnt.c: 552: }
  1671                           ;doprnt.c: 555: width = 0;
  1672  0008F4  0E00               	movlw	0
  1673  0008F6  0100               	movlb	0	; () banked
  1674  0008F8  0100               	movlb	0	; () banked
  1675  0008FA  6FC4               	movwf	(sprintf@width+1)& (0+255),b
  1676  0008FC  0E00               	movlw	0
  1677  0008FE  0100               	movlb	0	; () banked
  1678  000900  6FC3               	movwf	sprintf@width& (0+255),b
  1679                           
  1680                           ;doprnt.c: 557: flag = 0;
  1681  000902  0E00               	movlw	0
  1682  000904  0100               	movlb	0	; () banked
  1683  000906  0100               	movlb	0	; () banked
  1684  000908  6FC0               	movwf	(sprintf@flag+1)& (0+255),b
  1685  00090A  0E00               	movlw	0
  1686  00090C  0100               	movlb	0	; () banked
  1687  00090E  6FBF               	movwf	sprintf@flag& (0+255),b
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  1691  000910  0100               	movlb	0	; () banked
  1692  000912  C09E  FFF6         	movff	sprintf@f,tblptrl
  1693  000916  0100               	movlb	0	; () banked
  1694  000918  C09F  FFF7         	movff	sprintf@f+1,tblptrh
  1695  00091C  0008               	tblrd		*
  1696  00091E  50F5               	movf	tablat,w,c
  1697  000920  EC2F  F01D         	call	_isdigit
  1698  000924  A0D8               	btfss	status,0,c
  1699  000926  D04C               	goto	l5444
  1700                           
  1701                           ;doprnt.c: 607: width = 0;
  1702  000928  0E00               	movlw	0
  1703  00092A  0100               	movlb	0	; () banked
  1704  00092C  0100               	movlb	0	; () banked
  1705  00092E  6FC4               	movwf	(sprintf@width+1)& (0+255),b
  1706  000930  0E00               	movlw	0
  1707  000932  0100               	movlb	0	; () banked
  1708  000934  6FC3               	movwf	sprintf@width& (0+255),b
  1709  000936                     l5436:
  1710                           
  1711                           ;doprnt.c: 609: width *= 10;
  1712  000936  C0C3  F06A         	movff	sprintf@width,___wmul@multiplier
  1713  00093A  C0C4  F06B         	movff	sprintf@width+1,___wmul@multiplier+1
  1714  00093E  0E00               	movlw	0
  1715  000940  0100               	movlb	0	; () banked
  1716  000942  0100               	movlb	0	; () banked
  1717  000944  6F6D               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1718  000946  0E0A               	movlw	10
  1719  000948  0100               	movlb	0	; () banked
  1720  00094A  6F6C               	movwf	___wmul@multiplicand& (0+255),b
  1721  00094C  ECB8  F01B         	call	___wmul	;wreg free
  1722  000950  0100               	movlb	0	; () banked
  1723  000952  C06A  F0C3         	movff	?___wmul,sprintf@width
  1724  000956  0100               	movlb	0	; () banked
  1725  000958  C06B  F0C4         	movff	?___wmul+1,sprintf@width+1
  1726                           
  1727                           ; BSR set to: 0
  1728                           ;doprnt.c: 610: width += *f++ - '0';
  1729  00095C  0ED0               	movlw	208
  1730  00095E  0100               	movlb	0	; () banked
  1731  000960  6FA5               	movwf	??_sprintf& (0+255),b
  1732  000962  0EFF               	movlw	255
  1733  000964  6FA6               	movwf	(??_sprintf+1)& (0+255),b
  1734  000966  0100               	movlb	0	; () banked
  1735  000968  C09E  FFF6         	movff	sprintf@f,tblptrl
  1736  00096C  0100               	movlb	0	; () banked
  1737  00096E  C09F  FFF7         	movff	sprintf@f+1,tblptrh
  1738  000972  0008               	tblrd		*
  1739  000974  50F5               	movf	tablat,w,c
  1740  000976  0100               	movlb	0	; () banked
  1741  000978  6FA7               	movwf	(??_sprintf+2)& (0+255),b
  1742  00097A  6BA8               	clrf	(??_sprintf+3)& (0+255),b
  1743  00097C  0100               	movlb	0	; () banked
  1744  00097E  51A5               	movf	??_sprintf& (0+255),w,b
  1745  000980  0100               	movlb	0	; () banked
  1746  000982  27A7               	addwf	(??_sprintf+2)& (0+255),f,b
  1747  000984  0100               	movlb	0	; () banked
  1748  000986  51A6               	movf	(??_sprintf+1)& (0+255),w,b
  1749  000988  0100               	movlb	0	; () banked
  1750  00098A  23A8               	addwfc	(??_sprintf+3)& (0+255),f,b
  1751  00098C  0100               	movlb	0	; () banked
  1752  00098E  51A7               	movf	(??_sprintf+2)& (0+255),w,b
  1753  000990  0100               	movlb	0	; () banked
  1754  000992  0100               	movlb	0	; () banked
  1755  000994  27C3               	addwf	sprintf@width& (0+255),f,b
  1756  000996  0100               	movlb	0	; () banked
  1757  000998  51A8               	movf	(??_sprintf+3)& (0+255),w,b
  1758  00099A  0100               	movlb	0	; () banked
  1759  00099C  0100               	movlb	0	; () banked
  1760  00099E  23C4               	addwfc	(sprintf@width+1)& (0+255),f,b
  1761                           
  1762                           ; BSR set to: 0
  1763  0009A0  0100               	movlb	0	; () banked
  1764  0009A2  0100               	movlb	0	; () banked
  1765  0009A4  4B9E               	infsnz	sprintf@f& (0+255),f,b
  1766  0009A6  2B9F               	incf	(sprintf@f+1)& (0+255),f,b
  1767                           
  1768                           ; BSR set to: 0
  1769                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  1770  0009A8  0100               	movlb	0	; () banked
  1771  0009AA  C09E  FFF6         	movff	sprintf@f,tblptrl
  1772  0009AE  0100               	movlb	0	; () banked
  1773  0009B0  C09F  FFF7         	movff	sprintf@f+1,tblptrh
  1774  0009B4  0008               	tblrd		*
  1775  0009B6  50F5               	movf	tablat,w,c
  1776  0009B8  EC2F  F01D         	call	_isdigit
  1777  0009BC  B0D8               	btfsc	status,0,c
  1778  0009BE  D7BB               	goto	l5436
  1779  0009C0                     l5444:
  1780                           
  1781                           ;doprnt.c: 617: }
  1782                           ;doprnt.c: 620: if(*f == '.') {
  1783  0009C0  0100               	movlb	0	; () banked
  1784  0009C2  C09E  FFF6         	movff	sprintf@f,tblptrl
  1785  0009C6  0100               	movlb	0	; () banked
  1786  0009C8  C09F  FFF7         	movff	sprintf@f+1,tblptrh
  1787  0009CC  0008               	tblrd		*
  1788  0009CE  50F5               	movf	tablat,w,c
  1789  0009D0  0A2E               	xorlw	46
  1790  0009D2  A4D8               	btfss	status,2,c
  1791  0009D4  D048               	goto	l5456
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;doprnt.c: 621: flag |= 0x4000;
  1795  0009D6  0100               	movlb	0	; () banked
  1796  0009D8  0100               	movlb	0	; () banked
  1797  0009DA  8DC0               	bsf	(sprintf@flag+1)& (0+255),6,b
  1798                           
  1799                           ;doprnt.c: 622: f++;
  1800  0009DC  0100               	movlb	0	; () banked
  1801  0009DE  0100               	movlb	0	; () banked
  1802  0009E0  4B9E               	infsnz	sprintf@f& (0+255),f,b
  1803  0009E2  2B9F               	incf	(sprintf@f+1)& (0+255),f,b
  1804                           
  1805                           ; BSR set to: 0
  1806                           ;doprnt.c: 629: {
  1807                           ;doprnt.c: 630: prec = 0;
  1808  0009E4  0E00               	movlw	0
  1809  0009E6  0100               	movlb	0	; () banked
  1810  0009E8  0100               	movlb	0	; () banked
  1811  0009EA  6FCD               	movwf	(sprintf@prec+1)& (0+255),b
  1812  0009EC  0E00               	movlw	0
  1813  0009EE  0100               	movlb	0	; () banked
  1814  0009F0  6FCC               	movwf	sprintf@prec& (0+255),b
  1815                           
  1816                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
  1817  0009F2  D02C               	goto	l5454
  1818  0009F4                     l5450:
  1819                           
  1820                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
  1821  0009F4  C0CC  F06A         	movff	sprintf@prec,___wmul@multiplier
  1822  0009F8  C0CD  F06B         	movff	sprintf@prec+1,___wmul@multiplier+1
  1823  0009FC  0E00               	movlw	0
  1824  0009FE  0100               	movlb	0	; () banked
  1825  000A00  0100               	movlb	0	; () banked
  1826  000A02  6F6D               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1827  000A04  0E0A               	movlw	10
  1828  000A06  0100               	movlb	0	; () banked
  1829  000A08  6F6C               	movwf	___wmul@multiplicand& (0+255),b
  1830  000A0A  ECB8  F01B         	call	___wmul	;wreg free
  1831  000A0E  0100               	movlb	0	; () banked
  1832  000A10  C09E  FFF6         	movff	sprintf@f,tblptrl
  1833  000A14  0100               	movlb	0	; () banked
  1834  000A16  C09F  FFF7         	movff	sprintf@f+1,tblptrh
  1835  000A1A  0008               	tblrd		*
  1836  000A1C  50F5               	movf	tablat,w,c
  1837  000A1E  0100               	movlb	0	; () banked
  1838  000A20  0100               	movlb	0	; () banked
  1839  000A22  276A               	addwf	?___wmul& (0+255),f,b
  1840  000A24  0E00               	movlw	0
  1841  000A26  0100               	movlb	0	; () banked
  1842  000A28  236B               	addwfc	(?___wmul+1)& (0+255),f,b
  1843  000A2A  0ED0               	movlw	208
  1844  000A2C  0100               	movlb	0	; () banked
  1845  000A2E  0100               	movlb	0	; () banked
  1846  000A30  256A               	addwf	?___wmul& (0+255),w,b
  1847  000A32  0100               	movlb	0	; () banked
  1848  000A34  0100               	movlb	0	; () banked
  1849  000A36  6FCC               	movwf	sprintf@prec& (0+255),b
  1850  000A38  0EFF               	movlw	255
  1851  000A3A  0100               	movlb	0	; () banked
  1852  000A3C  0100               	movlb	0	; () banked
  1853  000A3E  216B               	addwfc	(?___wmul+1)& (0+255),w,b
  1854  000A40  0100               	movlb	0	; () banked
  1855  000A42  6FCD               	movwf	(sprintf@prec+1)& (0+255),b
  1856                           
  1857                           ; BSR set to: 0
  1858  000A44  0100               	movlb	0	; () banked
  1859  000A46  0100               	movlb	0	; () banked
  1860  000A48  4B9E               	infsnz	sprintf@f& (0+255),f,b
  1861  000A4A  2B9F               	incf	(sprintf@f+1)& (0+255),f,b
  1862  000A4C                     l5454:
  1863                           
  1864                           ; BSR set to: 0
  1865  000A4C  0100               	movlb	0	; () banked
  1866  000A4E  C09E  FFF6         	movff	sprintf@f,tblptrl
  1867  000A52  0100               	movlb	0	; () banked
  1868  000A54  C09F  FFF7         	movff	sprintf@f+1,tblptrh
  1869  000A58  0008               	tblrd		*
  1870  000A5A  50F5               	movf	tablat,w,c
  1871  000A5C  EC2F  F01D         	call	_isdigit
  1872  000A60  A0D8               	btfss	status,0,c
  1873  000A62  D096               	goto	l5496
  1874  000A64  D7C7               	goto	l5450
  1875  000A66                     l5456:
  1876                           
  1877                           ;doprnt.c: 635: prec = 0;
  1878  000A66  0E00               	movlw	0
  1879  000A68  0100               	movlb	0	; () banked
  1880  000A6A  0100               	movlb	0	; () banked
  1881  000A6C  6FCD               	movwf	(sprintf@prec+1)& (0+255),b
  1882  000A6E  0E00               	movlw	0
  1883  000A70  0100               	movlb	0	; () banked
  1884  000A72  6FCC               	movwf	sprintf@prec& (0+255),b
  1885                           
  1886                           ; BSR set to: 0
  1887                           ;doprnt.c: 637: flag |= 0x1000;
  1888  000A74  0100               	movlb	0	; () banked
  1889  000A76  0100               	movlb	0	; () banked
  1890  000A78  89C0               	bsf	(sprintf@flag+1)& (0+255),4,b
  1891  000A7A  D08A               	goto	l5496
  1892  000A7C                     l5460:
  1893                           
  1894                           ; BSR set to: 0
  1895                           ;doprnt.c: 672: flag |= 0x400;
  1896  000A7C  0100               	movlb	0	; () banked
  1897  000A7E  0100               	movlb	0	; () banked
  1898  000A80  85C0               	bsf	(sprintf@flag+1)& (0+255),2,b
  1899                           
  1900                           ;doprnt.c: 673: break;
  1901  000A82  D0A1               	goto	l5498
  1902  000A84                     l5462:
  1903                           
  1904                           ; BSR set to: 0
  1905                           ;doprnt.c: 762: if(prec && prec < _val._str._len)
  1906  000A84  0100               	movlb	0	; () banked
  1907  000A86  0100               	movlb	0	; () banked
  1908  000A88  51CD               	movf	(sprintf@prec+1)& (0+255),w,b
  1909  000A8A  11CC               	iorwf	sprintf@prec& (0+255),w,b
  1910  000A8C  B4D8               	btfsc	status,2,c
  1911  000A8E  D012               	goto	l5468
  1912                           
  1913                           ; BSR set to: 0
  1914  000A90  0100               	movlb	0	; () banked
  1915  000A92  0100               	movlb	0	; () banked
  1916  000A94  51CA               	movf	(sprintf@_val+2)& (0+255),w,b
  1917  000A96  0100               	movlb	0	; () banked
  1918  000A98  0100               	movlb	0	; () banked
  1919  000A9A  5DCC               	subwf	sprintf@prec& (0+255),w,b
  1920  000A9C  0100               	movlb	0	; () banked
  1921  000A9E  0100               	movlb	0	; () banked
  1922  000AA0  51CB               	movf	(sprintf@_val+3)& (0+255),w,b
  1923  000AA2  0100               	movlb	0	; () banked
  1924  000AA4  0100               	movlb	0	; () banked
  1925  000AA6  59CD               	subwfb	(sprintf@prec+1)& (0+255),w,b
  1926  000AA8  B0D8               	btfsc	status,0,c
  1927  000AAA  D004               	goto	l5468
  1928                           
  1929                           ; BSR set to: 0
  1930                           ;doprnt.c: 763: _val._str._len = prec;
  1931  000AAC  C0CC  F0CA         	movff	sprintf@prec,sprintf@_val+2
  1932  000AB0  C0CD  F0CB         	movff	sprintf@prec+1,sprintf@_val+3
  1933  000AB4                     l5468:
  1934                           
  1935                           ; BSR set to: 0
  1936                           ;doprnt.c: 766: if(width > _val._str._len)
  1937  000AB4  0100               	movlb	0	; () banked
  1938  000AB6  0100               	movlb	0	; () banked
  1939  000AB8  51C3               	movf	sprintf@width& (0+255),w,b
  1940  000ABA  0100               	movlb	0	; () banked
  1941  000ABC  0100               	movlb	0	; () banked
  1942  000ABE  5DCA               	subwf	(sprintf@_val+2)& (0+255),w,b
  1943  000AC0  0100               	movlb	0	; () banked
  1944  000AC2  0100               	movlb	0	; () banked
  1945  000AC4  51C4               	movf	(sprintf@width+1)& (0+255),w,b
  1946  000AC6  0100               	movlb	0	; () banked
  1947  000AC8  0100               	movlb	0	; () banked
  1948  000ACA  59CB               	subwfb	(sprintf@_val+3)& (0+255),w,b
  1949  000ACC  B0D8               	btfsc	status,0,c
  1950  000ACE  D00C               	goto	l5472
  1951                           
  1952                           ; BSR set to: 0
  1953                           ;doprnt.c: 767: width -= _val._str._len;
  1954  000AD0  0100               	movlb	0	; () banked
  1955  000AD2  EE20  F0CA         	lfsr	2,sprintf@_val+2
  1956  000AD6  50DE               	movf	postinc2,w,c
  1957  000AD8  0100               	movlb	0	; () banked
  1958  000ADA  0100               	movlb	0	; () banked
  1959  000ADC  5FC3               	subwf	sprintf@width& (0+255),f,b
  1960  000ADE  50DD               	movf	postdec2,w,c
  1961  000AE0  0100               	movlb	0	; () banked
  1962  000AE2  0100               	movlb	0	; () banked
  1963  000AE4  5BC4               	subwfb	(sprintf@width+1)& (0+255),f,b
  1964  000AE6  D012               	goto	l5478
  1965  000AE8                     l5472:
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;doprnt.c: 768: else
  1969                           ;doprnt.c: 769: width = 0;
  1970  000AE8  0E00               	movlw	0
  1971  000AEA  0100               	movlb	0	; () banked
  1972  000AEC  0100               	movlb	0	; () banked
  1973  000AEE  6FC4               	movwf	(sprintf@width+1)& (0+255),b
  1974  000AF0  0E00               	movlw	0
  1975  000AF2  0100               	movlb	0	; () banked
  1976  000AF4  6FC3               	movwf	sprintf@width& (0+255),b
  1977  000AF6  D00A               	goto	l5478
  1978  000AF8                     l5474:
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;doprnt.c: 774: ((*sp++ = (' ')));
  1982  000AF8  C09C  FFD9         	movff	sprintf@sp,fsr2l
  1983  000AFC  C09D  FFDA         	movff	sprintf@sp+1,fsr2h
  1984  000B00  0E20               	movlw	32
  1985  000B02  6EDF               	movwf	indf2,c
  1986                           
  1987                           ; BSR set to: 0
  1988  000B04  0100               	movlb	0	; () banked
  1989  000B06  0100               	movlb	0	; () banked
  1990  000B08  4B9C               	infsnz	sprintf@sp& (0+255),f,b
  1991  000B0A  2B9D               	incf	(sprintf@sp+1)& (0+255),f,b
  1992  000B0C                     l5478:
  1993                           
  1994                           ; BSR set to: 0
  1995  000B0C  0100               	movlb	0	; () banked
  1996  000B0E  0100               	movlb	0	; () banked
  1997  000B10  07C3               	decf	sprintf@width& (0+255),f,b
  1998  000B12  A0D8               	btfss	status,0,c
  1999  000B14  07C4               	decf	(sprintf@width+1)& (0+255),f,b
  2000  000B16  0100               	movlb	0	; () banked
  2001  000B18  29C3               	incf	sprintf@width& (0+255),w,b
  2002  000B1A  B4D8               	btfsc	status,2,c
  2003  000B1C  29C4               	incf	(sprintf@width+1)& (0+255),w,b
  2004  000B1E  B4D8               	btfsc	status,2,c
  2005  000B20  D013               	goto	l5486
  2006  000B22  D7EA               	goto	l5474
  2007  000B24                     l5480:
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;doprnt.c: 777: ((*sp++ = (*_val._str._cp++)));
  2011  000B24  C0C8  FFD9         	movff	sprintf@_val,fsr2l
  2012  000B28  C0C9  FFDA         	movff	sprintf@_val+1,fsr2h
  2013  000B2C  C09C  FFE1         	movff	sprintf@sp,fsr1l
  2014  000B30  C09D  FFE2         	movff	sprintf@sp+1,fsr1h
  2015  000B34  CFDF FFE7          	movff	indf2,indf1
  2016                           
  2017                           ; BSR set to: 0
  2018  000B38  0100               	movlb	0	; () banked
  2019  000B3A  0100               	movlb	0	; () banked
  2020  000B3C  4BC8               	infsnz	sprintf@_val& (0+255),f,b
  2021  000B3E  2BC9               	incf	(sprintf@_val+1)& (0+255),f,b
  2022                           
  2023                           ; BSR set to: 0
  2024  000B40  0100               	movlb	0	; () banked
  2025  000B42  0100               	movlb	0	; () banked
  2026  000B44  4B9C               	infsnz	sprintf@sp& (0+255),f,b
  2027  000B46  2B9D               	incf	(sprintf@sp+1)& (0+255),f,b
  2028  000B48                     l5486:
  2029                           
  2030                           ; BSR set to: 0
  2031  000B48  0100               	movlb	0	; () banked
  2032  000B4A  0100               	movlb	0	; () banked
  2033  000B4C  07CA               	decf	(sprintf@_val+2)& (0+255),f,b
  2034  000B4E  A0D8               	btfss	status,0,c
  2035  000B50  07CB               	decf	(sprintf@_val+3)& (0+255),f,b
  2036  000B52  0100               	movlb	0	; () banked
  2037  000B54  29CA               	incf	(sprintf@_val+2)& (0+255),w,b
  2038  000B56  B4D8               	btfsc	status,2,c
  2039  000B58  29CB               	incf	(sprintf@_val+3)& (0+255),w,b
  2040  000B5A  B4D8               	btfsc	status,2,c
  2041  000B5C  EF7C  F00B         	goto	l5740
  2042  000B60  D7E1               	goto	l5480
  2043  000B62                     l5488:
  2044                           
  2045                           ; BSR set to: 0
  2046                           ;doprnt.c: 814: _val._str._cp = (char *)&c;
  2047  000B62  0100               	movlb	0	; () banked
  2048  000B64  0E00               	movlw	high sprintf@c
  2049  000B66  0100               	movlb	0	; () banked
  2050  000B68  0100               	movlb	0	; () banked
  2051  000B6A  6FC9               	movwf	(sprintf@_val+1)& (0+255),b
  2052  000B6C  0100               	movlb	0	; () banked
  2053  000B6E  0ECE               	movlw	low sprintf@c
  2054  000B70  0100               	movlb	0	; () banked
  2055  000B72  0100               	movlb	0	; () banked
  2056  000B74  6FC8               	movwf	sprintf@_val& (0+255),b
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;doprnt.c: 815: _val._str._len = 1;
  2060  000B76  0E00               	movlw	0
  2061  000B78  0100               	movlb	0	; () banked
  2062  000B7A  0100               	movlb	0	; () banked
  2063  000B7C  6FCB               	movwf	(sprintf@_val+3)& (0+255),b
  2064  000B7E  0E01               	movlw	1
  2065  000B80  0100               	movlb	0	; () banked
  2066  000B82  6FCA               	movwf	(sprintf@_val+2)& (0+255),b
  2067                           
  2068                           ;doprnt.c: 816: goto dostring;
  2069  000B84  D77F               	goto	l5462
  2070  000B86                     l5492:
  2071                           
  2072                           ; BSR set to: 0
  2073                           ;doprnt.c: 827: flag |= 0xC0;
  2074  000B86  0EC0               	movlw	192
  2075  000B88  0100               	movlb	0	; () banked
  2076  000B8A  0100               	movlb	0	; () banked
  2077  000B8C  13BF               	iorwf	sprintf@flag& (0+255),f,b
  2078                           
  2079                           ;doprnt.c: 828: break;
  2080  000B8E  D01B               	goto	l5498
  2081  000B90                     l5496:
  2082  000B90  0100               	movlb	0	; () banked
  2083  000B92  C09E  FFF6         	movff	sprintf@f,tblptrl
  2084  000B96  0100               	movlb	0	; () banked
  2085  000B98  C09F  FFF7         	movff	sprintf@f+1,tblptrh
  2086  000B9C  0100               	movlb	0	; () banked
  2087  000B9E  0100               	movlb	0	; () banked
  2088  000BA0  4B9E               	infsnz	sprintf@f& (0+255),f,b
  2089  000BA2  2B9F               	incf	(sprintf@f+1)& (0+255),f,b
  2090  000BA4  0008               	tblrd		*
  2091  000BA6  0100               	movlb	0	; () banked
  2092  000BA8  CFF5 F0CE          	movff	tablat,sprintf@c
  2093  000BAC  0100               	movlb	0	; () banked
  2094  000BAE  51CE               	movf	sprintf@c& (0+255),w,b
  2095                           
  2096                           ; Switch size 1, requested type "space"
  2097                           ; Number of cases is 3, Range of values is 0 to 117
  2098                           ; switch strategies available:
  2099                           ; Name         Instructions Cycles
  2100                           ; simple_byte           10     6 (average)
  2101                           ;	Chosen strategy is simple_byte
  2102  000BB0  0A00               	xorlw	0	; case 0
  2103  000BB2  B4D8               	btfsc	status,2,c
  2104  000BB4  EF8E  F00B         	goto	l5742
  2105  000BB8  0A66               	xorlw	102	; case 102
  2106  000BBA  B4D8               	btfsc	status,2,c
  2107  000BBC  D75F               	goto	l5460
  2108  000BBE  0A13               	xorlw	19	; case 117
  2109  000BC0  B4D8               	btfsc	status,2,c
  2110  000BC2  D7E1               	goto	l5492
  2111  000BC4  D7CE               	goto	l5488
  2112  000BC6                     l5498:
  2113                           
  2114                           ; BSR set to: 0
  2115                           ;doprnt.c: 834: if(flag & (0x700)) {
  2116  000BC6  0E07               	movlw	7
  2117  000BC8  0100               	movlb	0	; () banked
  2118  000BCA  0100               	movlb	0	; () banked
  2119  000BCC  15C0               	andwf	(sprintf@flag+1)& (0+255),w,b
  2120  000BCE  B4D8               	btfsc	status,2,c
  2121  000BD0  D3F4               	goto	l5666
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;doprnt.c: 836: if(flag & 0x1000)
  2125  000BD2  0100               	movlb	0	; () banked
  2126  000BD4  0100               	movlb	0	; () banked
  2127  000BD6  A9C0               	btfss	(sprintf@flag+1)& (0+255),4,b
  2128  000BD8  D007               	goto	l5504
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;doprnt.c: 838: prec = 6;
  2132  000BDA  0E00               	movlw	0
  2133  000BDC  0100               	movlb	0	; () banked
  2134  000BDE  0100               	movlb	0	; () banked
  2135  000BE0  6FCD               	movwf	(sprintf@prec+1)& (0+255),b
  2136  000BE2  0E06               	movlw	6
  2137  000BE4  0100               	movlb	0	; () banked
  2138  000BE6  6FCC               	movwf	sprintf@prec& (0+255),b
  2139  000BE8                     l5504:
  2140                           
  2141                           ; BSR set to: 0
  2142                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2143  000BE8  C0BA  FFD9         	movff	sprintf@ap,fsr2l
  2144  000BEC  C0BB  FFDA         	movff	sprintf@ap+1,fsr2h
  2145  000BF0  0100               	movlb	0	; () banked
  2146  000BF2  CFDE F0C5          	movff	postinc2,sprintf@fval
  2147  000BF6  0100               	movlb	0	; () banked
  2148  000BF8  CFDE F0C6          	movff	postinc2,sprintf@fval+1
  2149  000BFC  0100               	movlb	0	; () banked
  2150  000BFE  CFDD F0C7          	movff	postdec2,sprintf@fval+2
  2151                           
  2152                           ; BSR set to: 0
  2153  000C02  0E03               	movlw	3
  2154  000C04  0100               	movlb	0	; () banked
  2155  000C06  0100               	movlb	0	; () banked
  2156  000C08  27BA               	addwf	sprintf@ap& (0+255),f,b
  2157  000C0A  0E00               	movlw	0
  2158  000C0C  0100               	movlb	0	; () banked
  2159  000C0E  23BB               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;doprnt.c: 840: if(fval < 0.0) {
  2163  000C10  0100               	movlb	0	; () banked
  2164  000C12  0100               	movlb	0	; () banked
  2165  000C14  51C7               	movf	(sprintf@fval+2)& (0+255),w,b
  2166  000C16  0A80               	xorlw	128
  2167  000C18  0F80               	addlw	128
  2168  000C1A  E107               	bnz	u4285
  2169  000C1C  0E00               	movlw	0
  2170  000C1E  0100               	movlb	0	; () banked
  2171  000C20  5DC6               	subwf	(sprintf@fval+1)& (0+255),w,b
  2172  000C22  E103               	bnz	u4285
  2173  000C24  0E00               	movlw	0
  2174  000C26  0100               	movlb	0	; () banked
  2175  000C28  5DC5               	subwf	sprintf@fval& (0+255),w,b
  2176  000C2A                     u4285:
  2177  000C2A  B0D8               	btfsc	status,0,c
  2178  000C2C  D012               	goto	l5514
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;doprnt.c: 841: fval = -fval;
  2182  000C2E  C0C5  F02D         	movff	sprintf@fval,___ftneg@f1
  2183  000C32  C0C6  F02E         	movff	sprintf@fval+1,___ftneg@f1+1
  2184  000C36  C0C7  F02F         	movff	sprintf@fval+2,___ftneg@f1+2
  2185  000C3A  EC44  F01D         	call	___ftneg	;wreg free
  2186  000C3E  C02D  F0C5         	movff	?___ftneg,sprintf@fval
  2187  000C42  C02E  F0C6         	movff	?___ftneg+1,sprintf@fval+1
  2188  000C46  C02F  F0C7         	movff	?___ftneg+2,sprintf@fval+2
  2189                           
  2190                           ;doprnt.c: 842: flag |= 0x03;
  2191  000C4A  0E03               	movlw	3
  2192  000C4C  0100               	movlb	0	; () banked
  2193  000C4E  0100               	movlb	0	; () banked
  2194  000C50  13BF               	iorwf	sprintf@flag& (0+255),f,b
  2195  000C52                     l5514:
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;doprnt.c: 843: }
  2199                           ;doprnt.c: 844: exp = 0;
  2200  000C52  0E00               	movlw	0
  2201  000C54  0100               	movlb	0	; () banked
  2202  000C56  0100               	movlb	0	; () banked
  2203  000C58  6FC2               	movwf	(sprintf@exp+1)& (0+255),b
  2204  000C5A  0E00               	movlw	0
  2205  000C5C  0100               	movlb	0	; () banked
  2206  000C5E  6FC1               	movwf	sprintf@exp& (0+255),b
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;doprnt.c: 845: if( fval!=0) {
  2210  000C60  0E7F               	movlw	127
  2211  000C62  0100               	movlb	0	; () banked
  2212  000C64  0100               	movlb	0	; () banked
  2213  000C66  15C7               	andwf	(sprintf@fval+2)& (0+255),w,b
  2214  000C68  0100               	movlb	0	; () banked
  2215  000C6A  11C6               	iorwf	(sprintf@fval+1)& (0+255),w,b
  2216  000C6C  0100               	movlb	0	; () banked
  2217  000C6E  11C5               	iorwf	sprintf@fval& (0+255),w,b
  2218  000C70  B4D8               	btfsc	status,2,c
  2219  000C72  D0AB               	goto	l5542
  2220                           
  2221                           ; BSR set to: 0
  2222                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2223  000C74  0E82               	movlw	130
  2224  000C76  0100               	movlb	0	; () banked
  2225  000C78  6FA5               	movwf	??_sprintf& (0+255),b
  2226  000C7A  0EFF               	movlw	255
  2227  000C7C  6FA6               	movwf	(??_sprintf+1)& (0+255),b
  2228  000C7E  0100               	movlb	0	; () banked
  2229  000C80  C0C5  F0A7         	movff	sprintf@fval,??_sprintf+2
  2230  000C84  0100               	movlb	0	; () banked
  2231  000C86  C0C6  F0A8         	movff	sprintf@fval+1,??_sprintf+3
  2232  000C8A  0100               	movlb	0	; () banked
  2233  000C8C  C0C7  F0A9         	movff	sprintf@fval+2,??_sprintf+4
  2234  000C90  0100               	movlb	0	; () banked
  2235  000C92  C0C8  F0AA         	movff	sprintf@fval+3,??_sprintf+5
  2236  000C96  0E10               	movlw	16
  2237  000C98  D006               	goto	u4300
  2238  000C9A                     u4305:
  2239  000C9A  0100               	movlb	0	; () banked
  2240  000C9C  90D8               	bcf	status,0,c
  2241  000C9E  33AA               	rrcf	(??_sprintf+5)& (0+255),f,b
  2242  000CA0  33A9               	rrcf	(??_sprintf+4)& (0+255),f,b
  2243  000CA2  33A8               	rrcf	(??_sprintf+3)& (0+255),f,b
  2244  000CA4  33A7               	rrcf	(??_sprintf+2)& (0+255),f,b
  2245  000CA6                     u4300:
  2246  000CA6  2EE8               	decfsz	wreg,f,c
  2247  000CA8  D7F8               	goto	u4305
  2248  000CAA  0100               	movlb	0	; () banked
  2249  000CAC  51A7               	movf	(??_sprintf+2)& (0+255),w,b
  2250  000CAE  0100               	movlb	0	; () banked
  2251  000CB0  25A5               	addwf	??_sprintf& (0+255),w,b
  2252  000CB2  0100               	movlb	0	; () banked
  2253  000CB4  0100               	movlb	0	; () banked
  2254  000CB6  6FC1               	movwf	sprintf@exp& (0+255),b
  2255  000CB8  0100               	movlb	0	; () banked
  2256  000CBA  0100               	movlb	0	; () banked
  2257  000CBC  0E00               	movlw	0
  2258  000CBE  21A6               	addwfc	(??_sprintf+1)& (0+255),w,b
  2259  000CC0  6FC2               	movwf	(sprintf@exp+1)& (0+255),b
  2260                           
  2261                           ; BSR set to: 0
  2262                           ;doprnt.c: 847: exp--;
  2263  000CC2  0100               	movlb	0	; () banked
  2264  000CC4  0100               	movlb	0	; () banked
  2265  000CC6  07C1               	decf	sprintf@exp& (0+255),f,b
  2266  000CC8  A0D8               	btfss	status,0,c
  2267  000CCA  07C2               	decf	(sprintf@exp+1)& (0+255),f,b
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;doprnt.c: 848: exp *= 3;
  2271  000CCC  C0C1  F06A         	movff	sprintf@exp,___wmul@multiplier
  2272  000CD0  C0C2  F06B         	movff	sprintf@exp+1,___wmul@multiplier+1
  2273  000CD4  0E00               	movlw	0
  2274  000CD6  0100               	movlb	0	; () banked
  2275  000CD8  0100               	movlb	0	; () banked
  2276  000CDA  6F6D               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2277  000CDC  0E03               	movlw	3
  2278  000CDE  0100               	movlb	0	; () banked
  2279  000CE0  6F6C               	movwf	___wmul@multiplicand& (0+255),b
  2280  000CE2  ECB8  F01B         	call	___wmul	;wreg free
  2281  000CE6  0100               	movlb	0	; () banked
  2282  000CE8  C06A  F0C1         	movff	?___wmul,sprintf@exp
  2283  000CEC  0100               	movlb	0	; () banked
  2284  000CEE  C06B  F0C2         	movff	?___wmul+1,sprintf@exp+1
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;doprnt.c: 849: exp /= 10;
  2288  000CF2  C0C1  F062         	movff	sprintf@exp,___awdiv@dividend
  2289  000CF6  C0C2  F063         	movff	sprintf@exp+1,___awdiv@dividend+1
  2290  000CFA  0E00               	movlw	0
  2291  000CFC  0100               	movlb	0	; () banked
  2292  000CFE  0100               	movlb	0	; () banked
  2293  000D00  6F65               	movwf	(___awdiv@divisor+1)& (0+255),b
  2294  000D02  0E0A               	movlw	10
  2295  000D04  0100               	movlb	0	; () banked
  2296  000D06  6F64               	movwf	___awdiv@divisor& (0+255),b
  2297  000D08  EC46  F017         	call	___awdiv	;wreg free
  2298  000D0C  0100               	movlb	0	; () banked
  2299  000D0E  C062  F0C1         	movff	?___awdiv,sprintf@exp
  2300  000D12  0100               	movlb	0	; () banked
  2301  000D14  C063  F0C2         	movff	?___awdiv+1,sprintf@exp+1
  2302                           
  2303                           ; BSR set to: 0
  2304                           ;doprnt.c: 850: if(exp < 0)
  2305  000D18  0100               	movlb	0	; () banked
  2306  000D1A  0100               	movlb	0	; () banked
  2307  000D1C  51C2               	movf	(sprintf@exp+1)& (0+255),w,b
  2308  000D1E  0A80               	xorlw	128
  2309  000D20  6EF3               	movwf	prodl,c
  2310  000D22  0E80               	movlw	128
  2311  000D24  5CF3               	subwf	prodl,w,c
  2312  000D26  0E00               	movlw	0
  2313  000D28  B4D8               	btfsc	status,2,c
  2314  000D2A  5DC1               	subwf	sprintf@exp& (0+255),w,b
  2315  000D2C  B0D8               	btfsc	status,0,c
  2316  000D2E  D005               	goto	l5530
  2317                           
  2318                           ; BSR set to: 0
  2319                           ;doprnt.c: 851: exp--;
  2320  000D30  0100               	movlb	0	; () banked
  2321  000D32  0100               	movlb	0	; () banked
  2322  000D34  07C1               	decf	sprintf@exp& (0+255),f,b
  2323  000D36  A0D8               	btfss	status,0,c
  2324  000D38  07C2               	decf	(sprintf@exp+1)& (0+255),f,b
  2325  000D3A                     l5530:
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;doprnt.c: 855: integ = scale(-exp);
  2329  000D3A  0100               	movlb	0	; () banked
  2330  000D3C  0100               	movlb	0	; () banked
  2331  000D3E  51C1               	movf	sprintf@exp& (0+255),w,b
  2332  000D40  0800               	sublw	0
  2333  000D42  EC95  F00B         	call	_scale
  2334  000D46  C086  F0BC         	movff	?_scale,sprintf@integ
  2335  000D4A  C087  F0BD         	movff	?_scale+1,sprintf@integ+1
  2336  000D4E  C088  F0BE         	movff	?_scale+2,sprintf@integ+2
  2337                           
  2338                           ;doprnt.c: 856: integ *= fval;
  2339  000D52  0100               	movlb	0	; () banked
  2340  000D54  0E00               	movlw	high sprintf@integ
  2341  000D56  0100               	movlb	0	; () banked
  2342  000D58  0100               	movlb	0	; () banked
  2343  000D5A  6F87               	movwf	(___asftmul@f1p+1)& (0+255),b
  2344  000D5C  0100               	movlb	0	; () banked
  2345  000D5E  0EBC               	movlw	low sprintf@integ
  2346  000D60  0100               	movlb	0	; () banked
  2347  000D62  0100               	movlb	0	; () banked
  2348  000D64  6F86               	movwf	___asftmul@f1p& (0+255),b
  2349  000D66  C0C5  F088         	movff	sprintf@fval,___asftmul@f2
  2350  000D6A  C0C6  F089         	movff	sprintf@fval+1,___asftmul@f2+1
  2351  000D6E  C0C7  F08A         	movff	sprintf@fval+2,___asftmul@f2+2
  2352  000D72  EC7D  F01C         	call	___asftmul	;wreg free
  2353                           
  2354                           ;doprnt.c: 857: if(integ < 1.0)
  2355  000D76  C0BC  F02D         	movff	sprintf@integ,___ftge@ff1
  2356  000D7A  C0BD  F02E         	movff	sprintf@integ+1,___ftge@ff1+1
  2357  000D7E  C0BE  F02F         	movff	sprintf@integ+2,___ftge@ff1+2
  2358  000D82  0E00               	movlw	0
  2359  000D84  6E30               	movwf	___ftge@ff2,c
  2360  000D86  0E80               	movlw	128
  2361  000D88  6E31               	movwf	___ftge@ff2+1,c
  2362  000D8A  0E3F               	movlw	63
  2363  000D8C  6E32               	movwf	___ftge@ff2+2,c
  2364  000D8E  EC19  F01A         	call	___ftge	;wreg free
  2365  000D92  B0D8               	btfsc	status,0,c
  2366  000D94  D006               	goto	l5538
  2367                           
  2368                           ;doprnt.c: 858: exp--;
  2369  000D96  0100               	movlb	0	; () banked
  2370  000D98  0100               	movlb	0	; () banked
  2371  000D9A  07C1               	decf	sprintf@exp& (0+255),f,b
  2372  000D9C  A0D8               	btfss	status,0,c
  2373  000D9E  07C2               	decf	(sprintf@exp+1)& (0+255),f,b
  2374  000DA0  D014               	goto	l5542
  2375  000DA2                     l5538:
  2376                           
  2377                           ;doprnt.c: 859: else if(integ >= 10.0)
  2378  000DA2  C0BC  F02D         	movff	sprintf@integ,___ftge@ff1
  2379  000DA6  C0BD  F02E         	movff	sprintf@integ+1,___ftge@ff1+1
  2380  000DAA  C0BE  F02F         	movff	sprintf@integ+2,___ftge@ff1+2
  2381  000DAE  0E00               	movlw	0
  2382  000DB0  6E30               	movwf	___ftge@ff2,c
  2383  000DB2  0E20               	movlw	32
  2384  000DB4  6E31               	movwf	___ftge@ff2+1,c
  2385  000DB6  0E41               	movlw	65
  2386  000DB8  6E32               	movwf	___ftge@ff2+2,c
  2387  000DBA  EC19  F01A         	call	___ftge	;wreg free
  2388  000DBE  A0D8               	btfss	status,0,c
  2389  000DC0  D004               	goto	l5542
  2390                           
  2391                           ;doprnt.c: 860: exp++;
  2392  000DC2  0100               	movlb	0	; () banked
  2393  000DC4  0100               	movlb	0	; () banked
  2394  000DC6  4BC1               	infsnz	sprintf@exp& (0+255),f,b
  2395  000DC8  2BC2               	incf	(sprintf@exp+1)& (0+255),f,b
  2396  000DCA                     l5542:
  2397                           
  2398                           ;doprnt.c: 861: }
  2399                           ;doprnt.c: 1121: if(prec <= 12)
  2400  000DCA  0100               	movlb	0	; () banked
  2401  000DCC  0100               	movlb	0	; () banked
  2402  000DCE  51CD               	movf	(sprintf@prec+1)& (0+255),w,b
  2403  000DD0  0A80               	xorlw	128
  2404  000DD2  6EF3               	movwf	prodl,c
  2405  000DD4  0E80               	movlw	128
  2406  000DD6  5CF3               	subwf	prodl,w,c
  2407  000DD8  0E0D               	movlw	13
  2408  000DDA  B4D8               	btfsc	status,2,c
  2409  000DDC  5DCC               	subwf	sprintf@prec& (0+255),w,b
  2410  000DDE  B0D8               	btfsc	status,0,c
  2411  000DE0  D017               	goto	l5546
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;doprnt.c: 1122: fval += fround(prec);
  2415  000DE2  0100               	movlb	0	; () banked
  2416  000DE4  0E00               	movlw	high sprintf@fval
  2417  000DE6  0100               	movlb	0	; () banked
  2418  000DE8  0100               	movlb	0	; () banked
  2419  000DEA  6F91               	movwf	(___asftadd@f1p+1)& (0+255),b
  2420  000DEC  0100               	movlb	0	; () banked
  2421  000DEE  0EC5               	movlw	low sprintf@fval
  2422  000DF0  0100               	movlb	0	; () banked
  2423  000DF2  0100               	movlb	0	; () banked
  2424  000DF4  6F90               	movwf	___asftadd@f1p& (0+255),b
  2425  000DF6  0100               	movlb	0	; () banked
  2426  000DF8  0100               	movlb	0	; () banked
  2427  000DFA  51CC               	movf	sprintf@prec& (0+255),w,b
  2428  000DFC  ECBA  F011         	call	_fround
  2429  000E00  C086  F092         	movff	?_fround,___asftadd@f2
  2430  000E04  C087  F093         	movff	?_fround+1,___asftadd@f2+1
  2431  000E08  C088  F094         	movff	?_fround+2,___asftadd@f2+2
  2432  000E0C  EC9E  F01C         	call	___asftadd	;wreg free
  2433  000E10                     l5546:
  2434                           
  2435                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2436  000E10  0100               	movlb	0	; () banked
  2437  000E12  0100               	movlb	0	; () banked
  2438  000E14  51C2               	movf	(sprintf@exp+1)& (0+255),w,b
  2439  000E16  0A80               	xorlw	128
  2440  000E18  6EF3               	movwf	prodl,c
  2441  000E1A  0E80               	movlw	128
  2442  000E1C  5CF3               	subwf	prodl,w,c
  2443  000E1E  0E0A               	movlw	10
  2444  000E20  B4D8               	btfsc	status,2,c
  2445  000E22  5DC1               	subwf	sprintf@exp& (0+255),w,b
  2446  000E24  B0D8               	btfsc	status,0,c
  2447  000E26  D02B               	goto	l5554
  2448                           
  2449                           ; BSR set to: 0
  2450  000E28  0E7F               	movlw	127
  2451  000E2A  0100               	movlb	0	; () banked
  2452  000E2C  0100               	movlb	0	; () banked
  2453  000E2E  15C7               	andwf	(sprintf@fval+2)& (0+255),w,b
  2454  000E30  0100               	movlb	0	; () banked
  2455  000E32  11C6               	iorwf	(sprintf@fval+1)& (0+255),w,b
  2456  000E34  0100               	movlb	0	; () banked
  2457  000E36  11C5               	iorwf	sprintf@fval& (0+255),w,b
  2458  000E38  B4D8               	btfsc	status,2,c
  2459  000E3A  D071               	goto	l5570
  2460                           
  2461                           ; BSR set to: 0
  2462  000E3C  C0C5  F08D         	movff	sprintf@fval,___fttol@f1
  2463  000E40  C0C6  F08E         	movff	sprintf@fval+1,___fttol@f1+1
  2464  000E44  C0C7  F08F         	movff	sprintf@fval+2,___fttol@f1+2
  2465  000E48  EC8D  F016         	call	___fttol	;wreg free
  2466  000E4C  C08D  F0A5         	movff	?___fttol,??_sprintf
  2467  000E50  C08E  F0A6         	movff	?___fttol+1,??_sprintf+1
  2468  000E54  C08F  F0A7         	movff	?___fttol+2,??_sprintf+2
  2469  000E58  C090  F0A8         	movff	?___fttol+3,??_sprintf+3
  2470  000E5C  0100               	movlb	0	; () banked
  2471  000E5E  51A8               	movf	(??_sprintf+3)& (0+255),w,b
  2472  000E60  11A5               	iorwf	??_sprintf& (0+255),w,b
  2473  000E62  11A6               	iorwf	(??_sprintf+1)& (0+255),w,b
  2474  000E64  11A7               	iorwf	(??_sprintf+2)& (0+255),w,b
  2475  000E66  A4D8               	btfss	status,2,c
  2476  000E68  D05A               	goto	l5570
  2477                           
  2478                           ; BSR set to: 0
  2479  000E6A  0100               	movlb	0	; () banked
  2480  000E6C  0100               	movlb	0	; () banked
  2481  000E6E  51C2               	movf	(sprintf@exp+1)& (0+255),w,b
  2482  000E70  0A80               	xorlw	128
  2483  000E72  0F80               	addlw	-128
  2484  000E74  0E02               	movlw	2
  2485  000E76  B4D8               	btfsc	status,2,c
  2486  000E78  5DC1               	subwf	sprintf@exp& (0+255),w,b
  2487  000E7A  A0D8               	btfss	status,0,c
  2488  000E7C  D050               	goto	l5570
  2489  000E7E                     l5554:
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;doprnt.c: 1129: if(integ < 4.294967296){
  2493  000E7E  C0BC  F02D         	movff	sprintf@integ,___ftge@ff1
  2494  000E82  C0BD  F02E         	movff	sprintf@integ+1,___ftge@ff1+1
  2495  000E86  C0BE  F02F         	movff	sprintf@integ+2,___ftge@ff1+2
  2496  000E8A  0E70               	movlw	112
  2497  000E8C  6E30               	movwf	___ftge@ff2,c
  2498  000E8E  0E89               	movlw	137
  2499  000E90  6E31               	movwf	___ftge@ff2+1,c
  2500  000E92  0E40               	movlw	64
  2501  000E94  6E32               	movwf	___ftge@ff2+2,c
  2502  000E96  EC19  F01A         	call	___ftge	;wreg free
  2503  000E9A  B0D8               	btfsc	status,0,c
  2504  000E9C  D003               	goto	l5558
  2505                           
  2506                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2507  000E9E  0100               	movlb	0	; () banked
  2508  000EA0  0EF7               	movlw	247
  2509  000EA2  D002               	goto	L2
  2510  000EA4                     l5558:
  2511                           
  2512                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2513  000EA4  0100               	movlb	0	; () banked
  2514  000EA6  0EF8               	movlw	248
  2515  000EA8                     L2:
  2516  000EA8  0100               	movlb	0	; () banked
  2517  000EAA  27C1               	addwf	sprintf@exp& (0+255),f,b
  2518  000EAC  0EFF               	movlw	255
  2519  000EAE  0100               	movlb	0	; () banked
  2520  000EB0  23C2               	addwfc	(sprintf@exp+1)& (0+255),f,b
  2521                           
  2522                           ; BSR set to: 0
  2523                           ;doprnt.c: 1133: }
  2524                           ;doprnt.c: 1134: integ = scale(exp);
  2525                           
  2526                           ; BSR set to: 0
  2527  000EB2  0100               	movlb	0	; () banked
  2528  000EB4  0100               	movlb	0	; () banked
  2529  000EB6  51C1               	movf	sprintf@exp& (0+255),w,b
  2530  000EB8  EC95  F00B         	call	_scale
  2531  000EBC  C086  F0BC         	movff	?_scale,sprintf@integ
  2532  000EC0  C087  F0BD         	movff	?_scale+1,sprintf@integ+1
  2533  000EC4  C088  F0BE         	movff	?_scale+2,sprintf@integ+2
  2534                           
  2535                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
  2536  000EC8  C0C5  F02D         	movff	sprintf@fval,__tdiv_to_l_@f1
  2537  000ECC  C0C6  F02E         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  2538  000ED0  C0C7  F02F         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  2539  000ED4  C0BC  F030         	movff	sprintf@integ,__tdiv_to_l_@f2
  2540  000ED8  C0BD  F031         	movff	sprintf@integ+1,__tdiv_to_l_@f2+1
  2541  000EDC  C0BE  F032         	movff	sprintf@integ+2,__tdiv_to_l_@f2+2
  2542  000EE0  ECCD  F015         	call	__tdiv_to_l_	;wreg free
  2543  000EE4  C02D  F0AE         	movff	?__tdiv_to_l_,_sprintf$1820
  2544  000EE8  C02E  F0AF         	movff	?__tdiv_to_l_+1,_sprintf$1820+1
  2545  000EEC  C02F  F0B0         	movff	?__tdiv_to_l_+2,_sprintf$1820+2
  2546  000EF0  C030  F0B1         	movff	?__tdiv_to_l_+3,_sprintf$1820+3
  2547  000EF4  C0AE  F0C8         	movff	_sprintf$1820,sprintf@_val
  2548  000EF8  C0AF  F0C9         	movff	_sprintf$1820+1,sprintf@_val+1
  2549  000EFC  C0B0  F0CA         	movff	_sprintf$1820+2,sprintf@_val+2
  2550  000F00  C0B1  F0CB         	movff	_sprintf$1820+3,sprintf@_val+3
  2551                           
  2552                           ;doprnt.c: 1138: fval = 0.0;
  2553  000F04  0E00               	movlw	0
  2554  000F06  0100               	movlb	0	; () banked
  2555  000F08  0100               	movlb	0	; () banked
  2556  000F0A  6FC5               	movwf	sprintf@fval& (0+255),b
  2557  000F0C  0E00               	movlw	0
  2558  000F0E  0100               	movlb	0	; () banked
  2559  000F10  0100               	movlb	0	; () banked
  2560  000F12  6FC6               	movwf	(sprintf@fval+1)& (0+255),b
  2561  000F14  0E00               	movlw	0
  2562  000F16  0100               	movlb	0	; () banked
  2563  000F18  0100               	movlb	0	; () banked
  2564  000F1A  6FC7               	movwf	(sprintf@fval+2)& (0+255),b
  2565                           
  2566                           ;doprnt.c: 1139: } else {
  2567  000F1C  D033               	goto	l5576
  2568  000F1E                     l5570:
  2569                           
  2570                           ; BSR set to: 0
  2571                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
  2572  000F1E  C0C5  F08D         	movff	sprintf@fval,___fttol@f1
  2573  000F22  C0C6  F08E         	movff	sprintf@fval+1,___fttol@f1+1
  2574  000F26  C0C7  F08F         	movff	sprintf@fval+2,___fttol@f1+2
  2575  000F2A  EC8D  F016         	call	___fttol	;wreg free
  2576  000F2E  C08D  F0C8         	movff	?___fttol,sprintf@_val
  2577  000F32  C08E  F0C9         	movff	?___fttol+1,sprintf@_val+1
  2578  000F36  C08F  F0CA         	movff	?___fttol+2,sprintf@_val+2
  2579  000F3A  C090  F0CB         	movff	?___fttol+3,sprintf@_val+3
  2580                           
  2581                           ;doprnt.c: 1141: fval -= (double)_val._val;
  2582  000F3E  0100               	movlb	0	; () banked
  2583  000F40  0E00               	movlw	high sprintf@fval
  2584  000F42  0100               	movlb	0	; () banked
  2585  000F44  0100               	movlb	0	; () banked
  2586  000F46  6F76               	movwf	(___asftsub@f1p+1)& (0+255),b
  2587  000F48  0100               	movlb	0	; () banked
  2588  000F4A  0EC5               	movlw	low sprintf@fval
  2589  000F4C  0100               	movlb	0	; () banked
  2590  000F4E  0100               	movlb	0	; () banked
  2591  000F50  6F75               	movwf	___asftsub@f1p& (0+255),b
  2592  000F52  C0C8  F063         	movff	sprintf@_val,___lltoft@c
  2593  000F56  C0C9  F064         	movff	sprintf@_val+1,___lltoft@c+1
  2594  000F5A  C0CA  F065         	movff	sprintf@_val+2,___lltoft@c+2
  2595  000F5E  C0CB  F066         	movff	sprintf@_val+3,___lltoft@c+3
  2596  000F62  ECB7  F01A         	call	___lltoft	;wreg free
  2597  000F66  C063  F077         	movff	?___lltoft,___asftsub@f2
  2598  000F6A  C064  F078         	movff	?___lltoft+1,___asftsub@f2+1
  2599  000F6E  C065  F079         	movff	?___lltoft+2,___asftsub@f2+2
  2600  000F72  EC3B  F01C         	call	___asftsub	;wreg free
  2601                           
  2602                           ;doprnt.c: 1142: exp = 0;
  2603  000F76  0E00               	movlw	0
  2604  000F78  0100               	movlb	0	; () banked
  2605  000F7A  0100               	movlb	0	; () banked
  2606  000F7C  6FC2               	movwf	(sprintf@exp+1)& (0+255),b
  2607  000F7E  0E00               	movlw	0
  2608  000F80  0100               	movlb	0	; () banked
  2609  000F82  6FC1               	movwf	sprintf@exp& (0+255),b
  2610  000F84                     l5576:
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;doprnt.c: 1143: }
  2614                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2615  000F84  0100               	movlb	0	; () banked
  2616  000F86  6FA5               	movwf	??_sprintf& (0+255),b
  2617  000F88  0E01               	movlw	1
  2618  000F8A  0100               	movlb	0	; () banked
  2619  000F8C  0100               	movlb	0	; () banked
  2620  000F8E  6FCE               	movwf	sprintf@c& (0+255),b
  2621  000F90  0100               	movlb	0	; () banked
  2622  000F92  51A5               	movf	??_sprintf& (0+255),w,b
  2623  000F94                     
  2624                           ; BSR set to: 0
  2625  000F94  0100               	movlb	0	; () banked
  2626  000F96  0100               	movlb	0	; () banked
  2627  000F98  51CE               	movf	sprintf@c& (0+255),w,b
  2628  000F9A  0A0A               	xorlw	10
  2629  000F9C  B4D8               	btfsc	status,2,c
  2630  000F9E  D021               	goto	l5590
  2631                           
  2632                           ; BSR set to: 0
  2633                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
  2634                           
  2635                           ; BSR set to: 0
  2636                           
  2637                           ; BSR set to: 0
  2638  000FA0  0100               	movlb	0	; () banked
  2639  000FA2  0100               	movlb	0	; () banked
  2640  000FA4  51CE               	movf	sprintf@c& (0+255),w,b
  2641  000FA6  0D04               	mullw	4
  2642  000FA8  0E01               	movlw	low _dpowers
  2643  000FAA  24F3               	addwf	prodl,w,c
  2644  000FAC  6EF6               	movwf	tblptrl,c
  2645  000FAE  0E08               	movlw	high _dpowers
  2646  000FB0  20F4               	addwfc	prodh,w,c
  2647  000FB2  6EF7               	movwf	tblptrh,c
  2648  000FB4  0009               	tblrd		*+
  2649  000FB6  50F5               	movf	tablat,w,c
  2650  000FB8  0100               	movlb	0	; () banked
  2651  000FBA  0100               	movlb	0	; () banked
  2652  000FBC  5DC8               	subwf	sprintf@_val& (0+255),w,b
  2653  000FBE  0009               	tblrd		*+
  2654  000FC0  50F5               	movf	tablat,w,c
  2655  000FC2  0100               	movlb	0	; () banked
  2656  000FC4  59C9               	subwfb	(sprintf@_val+1)& (0+255),w,b
  2657  000FC6  0009               	tblrd		*+
  2658  000FC8  50F5               	movf	tablat,w,c
  2659  000FCA  0100               	movlb	0	; () banked
  2660  000FCC  59CA               	subwfb	(sprintf@_val+2)& (0+255),w,b
  2661  000FCE  0009               	tblrd		*+
  2662  000FD0  50F5               	movf	tablat,w,c
  2663  000FD2  0100               	movlb	0	; () banked
  2664  000FD4  59CB               	subwfb	(sprintf@_val+3)& (0+255),w,b
  2665  000FD6  A0D8               	btfss	status,0,c
  2666  000FD8  D004               	goto	l5590
  2667                           
  2668                           ; BSR set to: 0
  2669                           
  2670                           ; BSR set to: 0
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;doprnt.c: 1147: break;
  2674  000FDA  0100               	movlb	0	; () banked
  2675  000FDC  0100               	movlb	0	; () banked
  2676  000FDE  2BCE               	incf	sprintf@c& (0+255),f,b
  2677  000FE0  D7D9               	goto	L3
  2678  000FE2                     l5590:
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;doprnt.c: 1151: width -= prec + c + exp;
  2682  000FE2  0100               	movlb	0	; () banked
  2683  000FE4  C0CE  F0A5         	movff	sprintf@c,??_sprintf
  2684  000FE8  0100               	movlb	0	; () banked
  2685  000FEA  6BA6               	clrf	(??_sprintf+1)& (0+255),b
  2686  000FEC  BFA5               	btfsc	??_sprintf& (0+255),7,b
  2687  000FEE  07A6               	decf	(??_sprintf+1)& (0+255),f,b
  2688  000FF0  0100               	movlb	0	; () banked
  2689  000FF2  0100               	movlb	0	; () banked
  2690  000FF4  51CC               	movf	sprintf@prec& (0+255),w,b
  2691  000FF6  0100               	movlb	0	; () banked
  2692  000FF8  27A5               	addwf	??_sprintf& (0+255),f,b
  2693  000FFA  0100               	movlb	0	; () banked
  2694  000FFC  0100               	movlb	0	; () banked
  2695  000FFE  51CD               	movf	(sprintf@prec+1)& (0+255),w,b
  2696  001000  0100               	movlb	0	; () banked
  2697  001002  23A6               	addwfc	(??_sprintf+1)& (0+255),f,b
  2698  001004  0100               	movlb	0	; () banked
  2699  001006  0100               	movlb	0	; () banked
  2700  001008  51C1               	movf	sprintf@exp& (0+255),w,b
  2701  00100A  0100               	movlb	0	; () banked
  2702  00100C  27A5               	addwf	??_sprintf& (0+255),f,b
  2703  00100E  0100               	movlb	0	; () banked
  2704  001010  0100               	movlb	0	; () banked
  2705  001012  51C2               	movf	(sprintf@exp+1)& (0+255),w,b
  2706  001014  0100               	movlb	0	; () banked
  2707  001016  23A6               	addwfc	(??_sprintf+1)& (0+255),f,b
  2708  001018  0100               	movlb	0	; () banked
  2709  00101A  51A5               	movf	??_sprintf& (0+255),w,b
  2710  00101C  0100               	movlb	0	; () banked
  2711  00101E  0100               	movlb	0	; () banked
  2712  001020  5FC3               	subwf	sprintf@width& (0+255),f,b
  2713  001022  0100               	movlb	0	; () banked
  2714  001024  51A6               	movf	(??_sprintf+1)& (0+255),w,b
  2715  001026  0100               	movlb	0	; () banked
  2716  001028  0100               	movlb	0	; () banked
  2717  00102A  5BC4               	subwfb	(sprintf@width+1)& (0+255),f,b
  2718                           
  2719                           ;doprnt.c: 1152: if(
  2720                           ;doprnt.c: 1156: prec)
  2721  00102C  0100               	movlb	0	; () banked
  2722  00102E  0100               	movlb	0	; () banked
  2723  001030  51CD               	movf	(sprintf@prec+1)& (0+255),w,b
  2724  001032  11CC               	iorwf	sprintf@prec& (0+255),w,b
  2725  001034  B4D8               	btfsc	status,2,c
  2726  001036  D005               	goto	l5594
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;doprnt.c: 1157: width--;
  2730  001038  0100               	movlb	0	; () banked
  2731  00103A  0100               	movlb	0	; () banked
  2732  00103C  07C3               	decf	sprintf@width& (0+255),f,b
  2733  00103E  A0D8               	btfss	status,0,c
  2734  001040  07C4               	decf	(sprintf@width+1)& (0+255),f,b
  2735  001042                     l5594:
  2736                           
  2737                           ; BSR set to: 0
  2738                           ;doprnt.c: 1158: if(flag & 0x03)
  2739  001042  0E03               	movlw	3
  2740  001044  0100               	movlb	0	; () banked
  2741  001046  0100               	movlb	0	; () banked
  2742  001048  15BF               	andwf	sprintf@flag& (0+255),w,b
  2743  00104A  0100               	movlb	0	; () banked
  2744  00104C  6FA5               	movwf	??_sprintf& (0+255),b
  2745  00104E  0E00               	movlw	0
  2746  001050  0100               	movlb	0	; () banked
  2747  001052  0100               	movlb	0	; () banked
  2748  001054  15C0               	andwf	(sprintf@flag+1)& (0+255),w,b
  2749  001056  0100               	movlb	0	; () banked
  2750  001058  6FA6               	movwf	(??_sprintf+1)& (0+255),b
  2751  00105A  0100               	movlb	0	; () banked
  2752  00105C  51A6               	movf	(??_sprintf+1)& (0+255),w,b
  2753  00105E  11A5               	iorwf	??_sprintf& (0+255),w,b
  2754  001060  B4D8               	btfsc	status,2,c
  2755  001062  D010               	goto	l5604
  2756  001064  D00A               	goto	L4
  2757  001066                     l5598:
  2758                           
  2759                           ; BSR set to: 0
  2760                           ;doprnt.c: 1190: ((*sp++ = (' ')));
  2761  001066  C09C  FFD9         	movff	sprintf@sp,fsr2l
  2762  00106A  C09D  FFDA         	movff	sprintf@sp+1,fsr2h
  2763  00106E  0E20               	movlw	32
  2764  001070  6EDF               	movwf	indf2,c
  2765                           
  2766                           ; BSR set to: 0
  2767  001072  0100               	movlb	0	; () banked
  2768  001074  0100               	movlb	0	; () banked
  2769  001076  4B9C               	infsnz	sprintf@sp& (0+255),f,b
  2770  001078  2B9D               	incf	(sprintf@sp+1)& (0+255),f,b
  2771  00107A                     L4:
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;doprnt.c: 1191: width--;
  2775  00107A  0100               	movlb	0	; () banked
  2776  00107C  0100               	movlb	0	; () banked
  2777  00107E  07C3               	decf	sprintf@width& (0+255),f,b
  2778  001080  A0D8               	btfss	status,0,c
  2779  001082  07C4               	decf	(sprintf@width+1)& (0+255),f,b
  2780  001084                     l5604:
  2781                           
  2782                           ; BSR set to: 0
  2783  001084  0100               	movlb	0	; () banked
  2784  001086  0100               	movlb	0	; () banked
  2785  001088  51C4               	movf	(sprintf@width+1)& (0+255),w,b
  2786  00108A  0A80               	xorlw	128
  2787  00108C  6EF3               	movwf	prodl,c
  2788  00108E  0E80               	movlw	128
  2789  001090  5CF3               	subwf	prodl,w,c
  2790  001092  0E01               	movlw	1
  2791  001094  B4D8               	btfsc	status,2,c
  2792  001096  5DC3               	subwf	sprintf@width& (0+255),w,b
  2793  001098  B0D8               	btfsc	status,0,c
  2794  00109A  D7E5               	goto	l5598
  2795                           
  2796                           ; BSR set to: 0
  2797                           ;doprnt.c: 1192: }
  2798                           ;doprnt.c: 1197: if(flag & 0x03)
  2799                           
  2800                           ; BSR set to: 0
  2801  00109C  0E03               	movlw	3
  2802  00109E  0100               	movlb	0	; () banked
  2803  0010A0  0100               	movlb	0	; () banked
  2804  0010A2  15BF               	andwf	sprintf@flag& (0+255),w,b
  2805  0010A4  0100               	movlb	0	; () banked
  2806  0010A6  6FA5               	movwf	??_sprintf& (0+255),b
  2807  0010A8  0E00               	movlw	0
  2808  0010AA  0100               	movlb	0	; () banked
  2809  0010AC  0100               	movlb	0	; () banked
  2810  0010AE  15C0               	andwf	(sprintf@flag+1)& (0+255),w,b
  2811  0010B0  0100               	movlb	0	; () banked
  2812  0010B2  6FA6               	movwf	(??_sprintf+1)& (0+255),b
  2813  0010B4  0100               	movlb	0	; () banked
  2814  0010B6  51A6               	movf	(??_sprintf+1)& (0+255),w,b
  2815  0010B8  11A5               	iorwf	??_sprintf& (0+255),w,b
  2816  0010BA  B4D8               	btfsc	status,2,c
  2817  0010BC  D05E               	goto	l5620
  2818                           
  2819                           ; BSR set to: 0
  2820                           ;doprnt.c: 1199: ((*sp++ = ('-')));
  2821  0010BE  C09C  FFD9         	movff	sprintf@sp,fsr2l
  2822  0010C2  C09D  FFDA         	movff	sprintf@sp+1,fsr2h
  2823  0010C6  0E2D               	movlw	45
  2824  0010C8  D053               	goto	L5
  2825  0010CA                     l5612:
  2826                           
  2827                           ; BSR set to: 0
  2828                           ;doprnt.c: 1209: {
  2829                           ;doprnt.c: 1210: unsigned long vd = _val._val/dpowers[c];
  2830  0010CA  C0C8  F060         	movff	sprintf@_val,___lldiv@dividend
  2831  0010CE  C0C9  F061         	movff	sprintf@_val+1,___lldiv@dividend+1
  2832  0010D2  C0CA  F062         	movff	sprintf@_val+2,___lldiv@dividend+2
  2833  0010D6  C0CB  F063         	movff	sprintf@_val+3,___lldiv@dividend+3
  2834  0010DA  0100               	movlb	0	; () banked
  2835  0010DC  0100               	movlb	0	; () banked
  2836  0010DE  51CE               	movf	sprintf@c& (0+255),w,b
  2837  0010E0  0D04               	mullw	4
  2838  0010E2  0E01               	movlw	low _dpowers
  2839  0010E4  24F3               	addwf	prodl,w,c
  2840  0010E6  6EF6               	movwf	tblptrl,c
  2841  0010E8  0E08               	movlw	high _dpowers
  2842  0010EA  20F4               	addwfc	prodh,w,c
  2843  0010EC  6EF7               	movwf	tblptrh,c
  2844  0010EE  0009               	tblrd		*+
  2845  0010F0  0100               	movlb	0	; () banked
  2846  0010F2  CFF5 F064          	movff	tablat,___lldiv@divisor
  2847  0010F6  0009               	tblrd		*+
  2848  0010F8  0100               	movlb	0	; () banked
  2849  0010FA  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  2850  0010FE  0009               	tblrd		*+
  2851  001100  0100               	movlb	0	; () banked
  2852  001102  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  2853  001106  000A               	tblrd		*-
  2854  001108  0100               	movlb	0	; () banked
  2855  00110A  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  2856  00110E  ECDB  F017         	call	___lldiv	;wreg free
  2857  001112  C060  F0B2         	movff	?___lldiv,sprintf@vd
  2858  001116  C061  F0B3         	movff	?___lldiv+1,sprintf@vd+1
  2859  00111A  C062  F0B4         	movff	?___lldiv+2,sprintf@vd+2
  2860  00111E  C063  F0B5         	movff	?___lldiv+3,sprintf@vd+3
  2861                           
  2862                           ;doprnt.c: 1211: vd %= 10;
  2863  001122  C0B2  F068         	movff	sprintf@vd,___llmod@dividend
  2864  001126  C0B3  F069         	movff	sprintf@vd+1,___llmod@dividend+1
  2865  00112A  C0B4  F06A         	movff	sprintf@vd+2,___llmod@dividend+2
  2866  00112E  C0B5  F06B         	movff	sprintf@vd+3,___llmod@dividend+3
  2867  001132  0E0A               	movlw	10
  2868  001134  0100               	movlb	0	; () banked
  2869  001136  0100               	movlb	0	; () banked
  2870  001138  6F6C               	movwf	___llmod@divisor& (0+255),b
  2871  00113A  0E00               	movlw	0
  2872  00113C  0100               	movlb	0	; () banked
  2873  00113E  6F6D               	movwf	(___llmod@divisor+1)& (0+255),b
  2874  001140  0E00               	movlw	0
  2875  001142  0100               	movlb	0	; () banked
  2876  001144  6F6E               	movwf	(___llmod@divisor+2)& (0+255),b
  2877  001146  0E00               	movlw	0
  2878  001148  0100               	movlb	0	; () banked
  2879  00114A  6F6F               	movwf	(___llmod@divisor+3)& (0+255),b
  2880  00114C  EC4C  F018         	call	___llmod	;wreg free
  2881  001150  C068  F0B2         	movff	?___llmod,sprintf@vd
  2882  001154  C069  F0B3         	movff	?___llmod+1,sprintf@vd+1
  2883  001158  C06A  F0B4         	movff	?___llmod+2,sprintf@vd+2
  2884  00115C  C06B  F0B5         	movff	?___llmod+3,sprintf@vd+3
  2885                           
  2886                           ;doprnt.c: 1212: ((*sp++ = ('0' + vd)));
  2887  001160  0100               	movlb	0	; () banked
  2888  001162  0100               	movlb	0	; () banked
  2889  001164  51B2               	movf	sprintf@vd& (0+255),w,b
  2890  001166  0F30               	addlw	48
  2891  001168  C09C  FFD9         	movff	sprintf@sp,fsr2l
  2892  00116C  C09D  FFDA         	movff	sprintf@sp+1,fsr2h
  2893  001170                     L5:
  2894  001170  6EDF               	movwf	indf2,c
  2895                           
  2896                           ; BSR set to: 0
  2897  001172  0100               	movlb	0	; () banked
  2898  001174  0100               	movlb	0	; () banked
  2899  001176  4B9C               	infsnz	sprintf@sp& (0+255),f,b
  2900  001178  2B9D               	incf	(sprintf@sp+1)& (0+255),f,b
  2901  00117A                     l5620:
  2902                           
  2903                           ; BSR set to: 0
  2904  00117A  0100               	movlb	0	; () banked
  2905  00117C  0100               	movlb	0	; () banked
  2906  00117E  07CE               	decf	sprintf@c& (0+255),f,b
  2907  001180  0100               	movlb	0	; () banked
  2908  001182  29CE               	incf	sprintf@c& (0+255),w,b
  2909  001184  B4D8               	btfsc	status,2,c
  2910  001186  D010               	goto	l5628
  2911  001188  D7A0               	goto	l5612
  2912  00118A                     l5622:
  2913                           
  2914                           ; BSR set to: 0
  2915                           ;doprnt.c: 1217: ((*sp++ = ('0')));
  2916  00118A  C09C  FFD9         	movff	sprintf@sp,fsr2l
  2917  00118E  C09D  FFDA         	movff	sprintf@sp+1,fsr2h
  2918  001192  0E30               	movlw	48
  2919  001194  6EDF               	movwf	indf2,c
  2920                           
  2921                           ; BSR set to: 0
  2922  001196  0100               	movlb	0	; () banked
  2923  001198  0100               	movlb	0	; () banked
  2924  00119A  4B9C               	infsnz	sprintf@sp& (0+255),f,b
  2925  00119C  2B9D               	incf	(sprintf@sp+1)& (0+255),f,b
  2926                           
  2927                           ; BSR set to: 0
  2928                           ;doprnt.c: 1218: exp--;
  2929  00119E  0100               	movlb	0	; () banked
  2930  0011A0  0100               	movlb	0	; () banked
  2931  0011A2  07C1               	decf	sprintf@exp& (0+255),f,b
  2932  0011A4  A0D8               	btfss	status,0,c
  2933  0011A6  07C2               	decf	(sprintf@exp+1)& (0+255),f,b
  2934  0011A8                     l5628:
  2935                           
  2936                           ; BSR set to: 0
  2937  0011A8  0100               	movlb	0	; () banked
  2938  0011AA  0100               	movlb	0	; () banked
  2939  0011AC  51C2               	movf	(sprintf@exp+1)& (0+255),w,b
  2940  0011AE  0A80               	xorlw	128
  2941  0011B0  6EF3               	movwf	prodl,c
  2942  0011B2  0E80               	movlw	128
  2943  0011B4  5CF3               	subwf	prodl,w,c
  2944  0011B6  0E01               	movlw	1
  2945  0011B8  B4D8               	btfsc	status,2,c
  2946  0011BA  5DC1               	subwf	sprintf@exp& (0+255),w,b
  2947  0011BC  B0D8               	btfsc	status,0,c
  2948  0011BE  D7E5               	goto	l5622
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;doprnt.c: 1219: }
  2952                           ;doprnt.c: 1220: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2953                           
  2954                           ; BSR set to: 0
  2955  0011C0  0100               	movlb	0	; () banked
  2956  0011C2  0100               	movlb	0	; () banked
  2957  0011C4  51CD               	movf	(sprintf@prec+1)& (0+255),w,b
  2958  0011C6  0A80               	xorlw	128
  2959  0011C8  0F80               	addlw	-128
  2960  0011CA  0E09               	movlw	9
  2961  0011CC  B4D8               	btfsc	status,2,c
  2962  0011CE  5DCC               	subwf	sprintf@prec& (0+255),w,b
  2963  0011D0  A0D8               	btfss	status,0,c
  2964  0011D2  D009               	goto	l467
  2965                           
  2966                           ; BSR set to: 0
  2967                           ;doprnt.c: 1221: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2968  0011D4  0100               	movlb	0	; () banked
  2969  0011D6  6FA5               	movwf	??_sprintf& (0+255),b
  2970  0011D8  0E08               	movlw	8
  2971  0011DA  0100               	movlb	0	; () banked
  2972  0011DC  0100               	movlb	0	; () banked
  2973  0011DE  6FCE               	movwf	sprintf@c& (0+255),b
  2974  0011E0  0100               	movlb	0	; () banked
  2975  0011E2  51A5               	movf	??_sprintf& (0+255),w,b
  2976  0011E4  D002               	goto	l5634
  2977  0011E6                     l467:
  2978                           
  2979                           ; BSR set to: 0
  2980                           ;doprnt.c: 1222: else
  2981                           ;doprnt.c: 1223: c = prec;
  2982  0011E6  C0CC  F0CE         	movff	sprintf@prec,sprintf@c
  2983  0011EA                     l5634:
  2984                           
  2985                           ; BSR set to: 0
  2986                           ;doprnt.c: 1224: prec -= c;
  2987  0011EA  0100               	movlb	0	; () banked
  2988  0011EC  0100               	movlb	0	; () banked
  2989  0011EE  51CE               	movf	sprintf@c& (0+255),w,b
  2990  0011F0  0100               	movlb	0	; () banked
  2991  0011F2  0100               	movlb	0	; () banked
  2992  0011F4  5FCC               	subwf	sprintf@prec& (0+255),f,b
  2993  0011F6  0E00               	movlw	0
  2994  0011F8  0100               	movlb	0	; () banked
  2995  0011FA  BFCE               	btfsc	sprintf@c& (0+255),7,b
  2996  0011FC  0EFF               	movlw	255
  2997  0011FE  0100               	movlb	0	; () banked
  2998  001200  0100               	movlb	0	; () banked
  2999  001202  5BCD               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3000                           
  3001                           ; BSR set to: 0
  3002                           ;doprnt.c: 1228: if(c)
  3003  001204  0100               	movlb	0	; () banked
  3004  001206  0100               	movlb	0	; () banked
  3005  001208  51CE               	movf	sprintf@c& (0+255),w,b
  3006  00120A  B4D8               	btfsc	status,2,c
  3007  00120C  D00A               	goto	l5642
  3008                           
  3009                           ; BSR set to: 0
  3010                           ;doprnt.c: 1230: ((*sp++ = ('.')));
  3011  00120E  C09C  FFD9         	movff	sprintf@sp,fsr2l
  3012  001212  C09D  FFDA         	movff	sprintf@sp+1,fsr2h
  3013  001216  0E2E               	movlw	46
  3014  001218  6EDF               	movwf	indf2,c
  3015                           
  3016                           ; BSR set to: 0
  3017  00121A  0100               	movlb	0	; () banked
  3018  00121C  0100               	movlb	0	; () banked
  3019  00121E  4B9C               	infsnz	sprintf@sp& (0+255),f,b
  3020  001220  2B9D               	incf	(sprintf@sp+1)& (0+255),f,b
  3021  001222                     l5642:
  3022                           
  3023                           ; BSR set to: 0
  3024                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
  3025  001222  0100               	movlb	0	; () banked
  3026  001224  0100               	movlb	0	; () banked
  3027  001226  51CE               	movf	sprintf@c& (0+255),w,b
  3028  001228  EC95  F00B         	call	_scale
  3029  00122C  C086  F0AB         	movff	?_scale,_sprintf$2470
  3030  001230  C087  F0AC         	movff	?_scale+1,_sprintf$2470+1
  3031  001234  C088  F0AD         	movff	?_scale+2,_sprintf$2470+2
  3032                           
  3033                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
  3034  001238  C0C5  F07A         	movff	sprintf@fval,___ftmul@f2
  3035  00123C  C0C6  F07B         	movff	sprintf@fval+1,___ftmul@f2+1
  3036  001240  C0C7  F07C         	movff	sprintf@fval+2,___ftmul@f2+2
  3037  001244  C0AB  F077         	movff	_sprintf$2470,___ftmul@f1
  3038  001248  C0AC  F078         	movff	_sprintf$2470+1,___ftmul@f1+1
  3039  00124C  C0AD  F079         	movff	_sprintf$2470+2,___ftmul@f1+2
  3040  001250  EC49  F013         	call	___ftmul	;wreg free
  3041  001254  C077  F08D         	movff	?___ftmul,___fttol@f1
  3042  001258  C078  F08E         	movff	?___ftmul+1,___fttol@f1+1
  3043  00125C  C079  F08F         	movff	?___ftmul+2,___fttol@f1+2
  3044  001260  EC8D  F016         	call	___fttol	;wreg free
  3045  001264  C08D  F0C8         	movff	?___fttol,sprintf@_val
  3046  001268  C08E  F0C9         	movff	?___fttol+1,sprintf@_val+1
  3047  00126C  C08F  F0CA         	movff	?___fttol+2,sprintf@_val+2
  3048  001270  C090  F0CB         	movff	?___fttol+3,sprintf@_val+3
  3049                           
  3050                           ;doprnt.c: 1237: while(c--) {
  3051  001274  D084               	goto	l5656
  3052  001276                     l5646:
  3053                           
  3054                           ;doprnt.c: 1238: unsigned long vd = _val._val/dpowers[c];
  3055  001276  C0C8  F060         	movff	sprintf@_val,___lldiv@dividend
  3056  00127A  C0C9  F061         	movff	sprintf@_val+1,___lldiv@dividend+1
  3057  00127E  C0CA  F062         	movff	sprintf@_val+2,___lldiv@dividend+2
  3058  001282  C0CB  F063         	movff	sprintf@_val+3,___lldiv@dividend+3
  3059  001286  0100               	movlb	0	; () banked
  3060  001288  0100               	movlb	0	; () banked
  3061  00128A  51CE               	movf	sprintf@c& (0+255),w,b
  3062  00128C  0D04               	mullw	4
  3063  00128E  0E01               	movlw	low _dpowers
  3064  001290  24F3               	addwf	prodl,w,c
  3065  001292  6EF6               	movwf	tblptrl,c
  3066  001294  0E08               	movlw	high _dpowers
  3067  001296  20F4               	addwfc	prodh,w,c
  3068  001298  6EF7               	movwf	tblptrh,c
  3069  00129A  0009               	tblrd		*+
  3070  00129C  0100               	movlb	0	; () banked
  3071  00129E  CFF5 F064          	movff	tablat,___lldiv@divisor
  3072  0012A2  0009               	tblrd		*+
  3073  0012A4  0100               	movlb	0	; () banked
  3074  0012A6  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  3075  0012AA  0009               	tblrd		*+
  3076  0012AC  0100               	movlb	0	; () banked
  3077  0012AE  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  3078  0012B2  000A               	tblrd		*-
  3079  0012B4  0100               	movlb	0	; () banked
  3080  0012B6  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  3081  0012BA  ECDB  F017         	call	___lldiv	;wreg free
  3082  0012BE  C060  F0B6         	movff	?___lldiv,sprintf@vd_1822
  3083  0012C2  C061  F0B7         	movff	?___lldiv+1,sprintf@vd_1822+1
  3084  0012C6  C062  F0B8         	movff	?___lldiv+2,sprintf@vd_1822+2
  3085  0012CA  C063  F0B9         	movff	?___lldiv+3,sprintf@vd_1822+3
  3086                           
  3087                           ;doprnt.c: 1239: vd %= 10;
  3088  0012CE  C0B6  F068         	movff	sprintf@vd_1822,___llmod@dividend
  3089  0012D2  C0B7  F069         	movff	sprintf@vd_1822+1,___llmod@dividend+1
  3090  0012D6  C0B8  F06A         	movff	sprintf@vd_1822+2,___llmod@dividend+2
  3091  0012DA  C0B9  F06B         	movff	sprintf@vd_1822+3,___llmod@dividend+3
  3092  0012DE  0E0A               	movlw	10
  3093  0012E0  0100               	movlb	0	; () banked
  3094  0012E2  0100               	movlb	0	; () banked
  3095  0012E4  6F6C               	movwf	___llmod@divisor& (0+255),b
  3096  0012E6  0E00               	movlw	0
  3097  0012E8  0100               	movlb	0	; () banked
  3098  0012EA  6F6D               	movwf	(___llmod@divisor+1)& (0+255),b
  3099  0012EC  0E00               	movlw	0
  3100  0012EE  0100               	movlb	0	; () banked
  3101  0012F0  6F6E               	movwf	(___llmod@divisor+2)& (0+255),b
  3102  0012F2  0E00               	movlw	0
  3103  0012F4  0100               	movlb	0	; () banked
  3104  0012F6  6F6F               	movwf	(___llmod@divisor+3)& (0+255),b
  3105  0012F8  EC4C  F018         	call	___llmod	;wreg free
  3106  0012FC  C068  F0B6         	movff	?___llmod,sprintf@vd_1822
  3107  001300  C069  F0B7         	movff	?___llmod+1,sprintf@vd_1822+1
  3108  001304  C06A  F0B8         	movff	?___llmod+2,sprintf@vd_1822+2
  3109  001308  C06B  F0B9         	movff	?___llmod+3,sprintf@vd_1822+3
  3110                           
  3111                           ;doprnt.c: 1240: ((*sp++ = ('0' + vd)));
  3112  00130C  0100               	movlb	0	; () banked
  3113  00130E  0100               	movlb	0	; () banked
  3114  001310  51B6               	movf	sprintf@vd_1822& (0+255),w,b
  3115  001312  0F30               	addlw	48
  3116  001314  C09C  FFD9         	movff	sprintf@sp,fsr2l
  3117  001318  C09D  FFDA         	movff	sprintf@sp+1,fsr2h
  3118  00131C  6EDF               	movwf	indf2,c
  3119                           
  3120                           ; BSR set to: 0
  3121  00131E  0100               	movlb	0	; () banked
  3122  001320  0100               	movlb	0	; () banked
  3123  001322  4B9C               	infsnz	sprintf@sp& (0+255),f,b
  3124  001324  2B9D               	incf	(sprintf@sp+1)& (0+255),f,b
  3125                           
  3126                           ; BSR set to: 0
  3127                           ;doprnt.c: 1241: _val._val %= dpowers[c];
  3128  001326  C0C8  F068         	movff	sprintf@_val,___llmod@dividend
  3129  00132A  C0C9  F069         	movff	sprintf@_val+1,___llmod@dividend+1
  3130  00132E  C0CA  F06A         	movff	sprintf@_val+2,___llmod@dividend+2
  3131  001332  C0CB  F06B         	movff	sprintf@_val+3,___llmod@dividend+3
  3132  001336  0100               	movlb	0	; () banked
  3133  001338  0100               	movlb	0	; () banked
  3134  00133A  51CE               	movf	sprintf@c& (0+255),w,b
  3135  00133C  0D04               	mullw	4
  3136  00133E  0E01               	movlw	low _dpowers
  3137  001340  24F3               	addwf	prodl,w,c
  3138  001342  6EF6               	movwf	tblptrl,c
  3139  001344  0E08               	movlw	high _dpowers
  3140  001346  20F4               	addwfc	prodh,w,c
  3141  001348  6EF7               	movwf	tblptrh,c
  3142  00134A  0009               	tblrd		*+
  3143  00134C  0100               	movlb	0	; () banked
  3144  00134E  CFF5 F06C          	movff	tablat,___llmod@divisor
  3145  001352  0009               	tblrd		*+
  3146  001354  0100               	movlb	0	; () banked
  3147  001356  CFF5 F06D          	movff	tablat,___llmod@divisor+1
  3148  00135A  0009               	tblrd		*+
  3149  00135C  0100               	movlb	0	; () banked
  3150  00135E  CFF5 F06E          	movff	tablat,___llmod@divisor+2
  3151  001362  000A               	tblrd		*-
  3152  001364  0100               	movlb	0	; () banked
  3153  001366  CFF5 F06F          	movff	tablat,___llmod@divisor+3
  3154  00136A  EC4C  F018         	call	___llmod	;wreg free
  3155  00136E  C068  F0C8         	movff	?___llmod,sprintf@_val
  3156  001372  C069  F0C9         	movff	?___llmod+1,sprintf@_val+1
  3157  001376  C06A  F0CA         	movff	?___llmod+2,sprintf@_val+2
  3158  00137A  C06B  F0CB         	movff	?___llmod+3,sprintf@_val+3
  3159  00137E                     l5656:
  3160  00137E  0100               	movlb	0	; () banked
  3161  001380  0100               	movlb	0	; () banked
  3162  001382  07CE               	decf	sprintf@c& (0+255),f,b
  3163  001384  0100               	movlb	0	; () banked
  3164  001386  29CE               	incf	sprintf@c& (0+255),w,b
  3165  001388  B4D8               	btfsc	status,2,c
  3166  00138A  D010               	goto	l5664
  3167  00138C  D774               	goto	l5646
  3168  00138E                     l5658:
  3169                           
  3170                           ; BSR set to: 0
  3171                           ;doprnt.c: 1245: ((*sp++ = ('0')));
  3172  00138E  C09C  FFD9         	movff	sprintf@sp,fsr2l
  3173  001392  C09D  FFDA         	movff	sprintf@sp+1,fsr2h
  3174  001396  0E30               	movlw	48
  3175  001398  6EDF               	movwf	indf2,c
  3176                           
  3177                           ; BSR set to: 0
  3178  00139A  0100               	movlb	0	; () banked
  3179  00139C  0100               	movlb	0	; () banked
  3180  00139E  4B9C               	infsnz	sprintf@sp& (0+255),f,b
  3181  0013A0  2B9D               	incf	(sprintf@sp+1)& (0+255),f,b
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;doprnt.c: 1246: prec--;
  3185  0013A2  0100               	movlb	0	; () banked
  3186  0013A4  0100               	movlb	0	; () banked
  3187  0013A6  07CC               	decf	sprintf@prec& (0+255),f,b
  3188  0013A8  A0D8               	btfss	status,0,c
  3189  0013AA  07CD               	decf	(sprintf@prec+1)& (0+255),f,b
  3190  0013AC                     l5664:
  3191                           
  3192                           ; BSR set to: 0
  3193  0013AC  0100               	movlb	0	; () banked
  3194  0013AE  0100               	movlb	0	; () banked
  3195  0013B0  51CD               	movf	(sprintf@prec+1)& (0+255),w,b
  3196  0013B2  11CC               	iorwf	sprintf@prec& (0+255),w,b
  3197  0013B4  B4D8               	btfsc	status,2,c
  3198  0013B6  D1A0               	goto	l5740
  3199  0013B8  D7EA               	goto	l5658
  3200  0013BA                     l5666:
  3201                           
  3202                           ; BSR set to: 0
  3203                           ;doprnt.c: 1255: }
  3204                           ;doprnt.c: 1282: {
  3205                           ;doprnt.c: 1295: _val._val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3206  0013BA  C0BA  FFD9         	movff	sprintf@ap,fsr2l
  3207  0013BE  C0BB  FFDA         	movff	sprintf@ap+1,fsr2h
  3208  0013C2  CFDE F0A5          	movff	postinc2,??_sprintf
  3209  0013C6  CFDD F0A6          	movff	postdec2,??_sprintf+1
  3210  0013CA  0100               	movlb	0	; () banked
  3211  0013CC  C0A5  F0C8         	movff	??_sprintf,sprintf@_val
  3212  0013D0  0100               	movlb	0	; () banked
  3213  0013D2  C0A6  F0C9         	movff	??_sprintf+1,sprintf@_val+1
  3214  0013D6  0100               	movlb	0	; () banked
  3215  0013D8  0100               	movlb	0	; () banked
  3216  0013DA  6BCA               	clrf	(sprintf@_val+2)& (0+255),b
  3217  0013DC  0100               	movlb	0	; () banked
  3218  0013DE  6BCB               	clrf	(sprintf@_val+3)& (0+255),b
  3219                           
  3220                           ; BSR set to: 0
  3221  0013E0  0E02               	movlw	2
  3222  0013E2  0100               	movlb	0	; () banked
  3223  0013E4  0100               	movlb	0	; () banked
  3224  0013E6  27BA               	addwf	sprintf@ap& (0+255),f,b
  3225  0013E8  0E00               	movlw	0
  3226  0013EA  0100               	movlb	0	; () banked
  3227  0013EC  23BB               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3228                           
  3229                           ; BSR set to: 0
  3230                           ;doprnt.c: 1296: }
  3231                           ;doprnt.c: 1299: if(prec == 0 && _val._val == 0)
  3232  0013EE  0100               	movlb	0	; () banked
  3233  0013F0  0100               	movlb	0	; () banked
  3234  0013F2  51CD               	movf	(sprintf@prec+1)& (0+255),w,b
  3235  0013F4  11CC               	iorwf	sprintf@prec& (0+255),w,b
  3236  0013F6  A4D8               	btfss	status,2,c
  3237  0013F8  D00C               	goto	l5676
  3238                           
  3239                           ; BSR set to: 0
  3240  0013FA  0100               	movlb	0	; () banked
  3241  0013FC  0100               	movlb	0	; () banked
  3242  0013FE  51CB               	movf	(sprintf@_val+3)& (0+255),w,b
  3243  001400  11C8               	iorwf	sprintf@_val& (0+255),w,b
  3244  001402  11C9               	iorwf	(sprintf@_val+1)& (0+255),w,b
  3245  001404  11CA               	iorwf	(sprintf@_val+2)& (0+255),w,b
  3246  001406  A4D8               	btfss	status,2,c
  3247  001408  D004               	goto	l5676
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;doprnt.c: 1300: prec++;
  3251  00140A  0100               	movlb	0	; () banked
  3252  00140C  0100               	movlb	0	; () banked
  3253  00140E  4BCC               	infsnz	sprintf@prec& (0+255),f,b
  3254  001410  2BCD               	incf	(sprintf@prec+1)& (0+255),f,b
  3255  001412                     l5676:
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3259  001412  0100               	movlb	0	; () banked
  3260  001414  6FA5               	movwf	??_sprintf& (0+255),b
  3261  001416  0E01               	movlw	1
  3262  001418  0100               	movlb	0	; () banked
  3263  00141A  0100               	movlb	0	; () banked
  3264  00141C  6FCE               	movwf	sprintf@c& (0+255),b
  3265  00141E  0100               	movlb	0	; () banked
  3266  001420  51A5               	movf	??_sprintf& (0+255),w,b
  3267  001422                     
  3268                           ; BSR set to: 0
  3269  001422  0100               	movlb	0	; () banked
  3270  001424  0100               	movlb	0	; () banked
  3271  001426  51CE               	movf	sprintf@c& (0+255),w,b
  3272  001428  0A0A               	xorlw	10
  3273  00142A  B4D8               	btfsc	status,2,c
  3274  00142C  D021               	goto	l5690
  3275                           
  3276                           ; BSR set to: 0
  3277                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  3278                           
  3279                           ; BSR set to: 0
  3280                           
  3281                           ; BSR set to: 0
  3282  00142E  0100               	movlb	0	; () banked
  3283  001430  0100               	movlb	0	; () banked
  3284  001432  51CE               	movf	sprintf@c& (0+255),w,b
  3285  001434  0D04               	mullw	4
  3286  001436  0E01               	movlw	low _dpowers
  3287  001438  24F3               	addwf	prodl,w,c
  3288  00143A  6EF6               	movwf	tblptrl,c
  3289  00143C  0E08               	movlw	high _dpowers
  3290  00143E  20F4               	addwfc	prodh,w,c
  3291  001440  6EF7               	movwf	tblptrh,c
  3292  001442  0009               	tblrd		*+
  3293  001444  50F5               	movf	tablat,w,c
  3294  001446  0100               	movlb	0	; () banked
  3295  001448  0100               	movlb	0	; () banked
  3296  00144A  5DC8               	subwf	sprintf@_val& (0+255),w,b
  3297  00144C  0009               	tblrd		*+
  3298  00144E  50F5               	movf	tablat,w,c
  3299  001450  0100               	movlb	0	; () banked
  3300  001452  59C9               	subwfb	(sprintf@_val+1)& (0+255),w,b
  3301  001454  0009               	tblrd		*+
  3302  001456  50F5               	movf	tablat,w,c
  3303  001458  0100               	movlb	0	; () banked
  3304  00145A  59CA               	subwfb	(sprintf@_val+2)& (0+255),w,b
  3305  00145C  0009               	tblrd		*+
  3306  00145E  50F5               	movf	tablat,w,c
  3307  001460  0100               	movlb	0	; () banked
  3308  001462  59CB               	subwfb	(sprintf@_val+3)& (0+255),w,b
  3309  001464  A0D8               	btfss	status,0,c
  3310  001466  D004               	goto	l5690
  3311                           
  3312                           ; BSR set to: 0
  3313                           
  3314                           ; BSR set to: 0
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;doprnt.c: 1316: break;
  3318  001468  0100               	movlb	0	; () banked
  3319  00146A  0100               	movlb	0	; () banked
  3320  00146C  2BCE               	incf	sprintf@c& (0+255),f,b
  3321  00146E  D7D9               	goto	L6
  3322  001470                     l5690:
  3323                           
  3324                           ; BSR set to: 0
  3325                           ;doprnt.c: 1348: if(c < prec)
  3326  001470  0E80               	movlw	128
  3327  001472  0100               	movlb	0	; () banked
  3328  001474  0100               	movlb	0	; () banked
  3329  001476  BFCE               	btfsc	sprintf@c& (0+255),7,b
  3330  001478  0E7F               	movlw	127
  3331  00147A  6FA5               	movwf	??_sprintf& (0+255),b
  3332  00147C  0100               	movlb	0	; () banked
  3333  00147E  0100               	movlb	0	; () banked
  3334  001480  51CC               	movf	sprintf@prec& (0+255),w,b
  3335  001482  0100               	movlb	0	; () banked
  3336  001484  0100               	movlb	0	; () banked
  3337  001486  5DCE               	subwf	sprintf@c& (0+255),w,b
  3338  001488  0100               	movlb	0	; () banked
  3339  00148A  0100               	movlb	0	; () banked
  3340  00148C  51CD               	movf	(sprintf@prec+1)& (0+255),w,b
  3341  00148E  0A80               	xorlw	128
  3342  001490  0100               	movlb	0	; () banked
  3343  001492  59A5               	subwfb	??_sprintf& (0+255),w,b
  3344  001494  B0D8               	btfsc	status,0,c
  3345  001496  D003               	goto	l5694
  3346                           
  3347                           ; BSR set to: 0
  3348                           ;doprnt.c: 1349: c = prec;
  3349  001498  C0CC  F0CE         	movff	sprintf@prec,sprintf@c
  3350  00149C  D020               	goto	l5698
  3351  00149E                     l5694:
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;doprnt.c: 1350: else if(prec < c)
  3355  00149E  0100               	movlb	0	; () banked
  3356  0014A0  0100               	movlb	0	; () banked
  3357  0014A2  51CD               	movf	(sprintf@prec+1)& (0+255),w,b
  3358  0014A4  0A80               	xorlw	128
  3359  0014A6  0100               	movlb	0	; () banked
  3360  0014A8  6FA5               	movwf	??_sprintf& (0+255),b
  3361  0014AA  0100               	movlb	0	; () banked
  3362  0014AC  0100               	movlb	0	; () banked
  3363  0014AE  51CE               	movf	sprintf@c& (0+255),w,b
  3364  0014B0  0100               	movlb	0	; () banked
  3365  0014B2  0100               	movlb	0	; () banked
  3366  0014B4  5DCC               	subwf	sprintf@prec& (0+255),w,b
  3367  0014B6  0E80               	movlw	128
  3368  0014B8  0100               	movlb	0	; () banked
  3369  0014BA  0100               	movlb	0	; () banked
  3370  0014BC  BFCE               	btfsc	sprintf@c& (0+255),7,b
  3371  0014BE  0E7F               	movlw	127
  3372  0014C0  0100               	movlb	0	; () banked
  3373  0014C2  59A5               	subwfb	??_sprintf& (0+255),w,b
  3374  0014C4  B0D8               	btfsc	status,0,c
  3375  0014C6  D00B               	goto	l5698
  3376                           
  3377                           ; BSR set to: 0
  3378                           ;doprnt.c: 1351: prec = c;
  3379  0014C8  0100               	movlb	0	; () banked
  3380  0014CA  0100               	movlb	0	; () banked
  3381  0014CC  51CE               	movf	sprintf@c& (0+255),w,b
  3382  0014CE  0100               	movlb	0	; () banked
  3383  0014D0  0100               	movlb	0	; () banked
  3384  0014D2  6FCC               	movwf	sprintf@prec& (0+255),b
  3385  0014D4  0100               	movlb	0	; () banked
  3386  0014D6  6BCD               	clrf	(sprintf@prec+1)& (0+255),b
  3387  0014D8  0100               	movlb	0	; () banked
  3388  0014DA  BFCC               	btfsc	sprintf@prec& (0+255),7,b
  3389  0014DC  07CD               	decf	(sprintf@prec+1)& (0+255),f,b
  3390  0014DE                     l5698:
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;doprnt.c: 1354: if(width && flag & 0x03)
  3394  0014DE  0100               	movlb	0	; () banked
  3395  0014E0  0100               	movlb	0	; () banked
  3396  0014E2  51C4               	movf	(sprintf@width+1)& (0+255),w,b
  3397  0014E4  11C3               	iorwf	sprintf@width& (0+255),w,b
  3398  0014E6  B4D8               	btfsc	status,2,c
  3399  0014E8  D016               	goto	l5704
  3400                           
  3401                           ; BSR set to: 0
  3402  0014EA  0E03               	movlw	3
  3403  0014EC  0100               	movlb	0	; () banked
  3404  0014EE  0100               	movlb	0	; () banked
  3405  0014F0  15BF               	andwf	sprintf@flag& (0+255),w,b
  3406  0014F2  0100               	movlb	0	; () banked
  3407  0014F4  6FA5               	movwf	??_sprintf& (0+255),b
  3408  0014F6  0E00               	movlw	0
  3409  0014F8  0100               	movlb	0	; () banked
  3410  0014FA  0100               	movlb	0	; () banked
  3411  0014FC  15C0               	andwf	(sprintf@flag+1)& (0+255),w,b
  3412  0014FE  0100               	movlb	0	; () banked
  3413  001500  6FA6               	movwf	(??_sprintf+1)& (0+255),b
  3414  001502  0100               	movlb	0	; () banked
  3415  001504  51A6               	movf	(??_sprintf+1)& (0+255),w,b
  3416  001506  11A5               	iorwf	??_sprintf& (0+255),w,b
  3417  001508  B4D8               	btfsc	status,2,c
  3418  00150A  D005               	goto	l5704
  3419                           
  3420                           ; BSR set to: 0
  3421                           ;doprnt.c: 1355: width--;
  3422  00150C  0100               	movlb	0	; () banked
  3423  00150E  0100               	movlb	0	; () banked
  3424  001510  07C3               	decf	sprintf@width& (0+255),f,b
  3425  001512  A0D8               	btfss	status,0,c
  3426  001514  07C4               	decf	(sprintf@width+1)& (0+255),f,b
  3427  001516                     l5704:
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;doprnt.c: 1357: if(flag & 0x4000) {
  3431  001516  0100               	movlb	0	; () banked
  3432  001518  0100               	movlb	0	; () banked
  3433  00151A  ADC0               	btfss	(sprintf@flag+1)& (0+255),6,b
  3434  00151C  D028               	goto	l5712
  3435                           
  3436                           ; BSR set to: 0
  3437                           ;doprnt.c: 1358: if(width > prec)
  3438  00151E  0100               	movlb	0	; () banked
  3439  001520  0100               	movlb	0	; () banked
  3440  001522  51CD               	movf	(sprintf@prec+1)& (0+255),w,b
  3441  001524  0A80               	xorlw	128
  3442  001526  0100               	movlb	0	; () banked
  3443  001528  6FA5               	movwf	??_sprintf& (0+255),b
  3444  00152A  0100               	movlb	0	; () banked
  3445  00152C  0100               	movlb	0	; () banked
  3446  00152E  51C3               	movf	sprintf@width& (0+255),w,b
  3447  001530  0100               	movlb	0	; () banked
  3448  001532  0100               	movlb	0	; () banked
  3449  001534  5DCC               	subwf	sprintf@prec& (0+255),w,b
  3450  001536  0100               	movlb	0	; () banked
  3451  001538  0100               	movlb	0	; () banked
  3452  00153A  51C4               	movf	(sprintf@width+1)& (0+255),w,b
  3453  00153C  0A80               	xorlw	128
  3454  00153E  0100               	movlb	0	; () banked
  3455  001540  59A5               	subwfb	??_sprintf& (0+255),w,b
  3456  001542  B0D8               	btfsc	status,0,c
  3457  001544  D00D               	goto	l5710
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;doprnt.c: 1359: width -= prec;
  3461  001546  0100               	movlb	0	; () banked
  3462  001548  0100               	movlb	0	; () banked
  3463  00154A  51CC               	movf	sprintf@prec& (0+255),w,b
  3464  00154C  0100               	movlb	0	; () banked
  3465  00154E  0100               	movlb	0	; () banked
  3466  001550  5FC3               	subwf	sprintf@width& (0+255),f,b
  3467  001552  0100               	movlb	0	; () banked
  3468  001554  0100               	movlb	0	; () banked
  3469  001556  51CD               	movf	(sprintf@prec+1)& (0+255),w,b
  3470  001558  0100               	movlb	0	; () banked
  3471  00155A  0100               	movlb	0	; () banked
  3472  00155C  5BC4               	subwfb	(sprintf@width+1)& (0+255),f,b
  3473  00155E  D007               	goto	l5712
  3474  001560                     l5710:
  3475                           
  3476                           ; BSR set to: 0
  3477                           ;doprnt.c: 1360: else
  3478                           ;doprnt.c: 1361: width = 0;
  3479  001560  0E00               	movlw	0
  3480  001562  0100               	movlb	0	; () banked
  3481  001564  0100               	movlb	0	; () banked
  3482  001566  6FC4               	movwf	(sprintf@width+1)& (0+255),b
  3483  001568  0E00               	movlw	0
  3484  00156A  0100               	movlb	0	; () banked
  3485  00156C  6FC3               	movwf	sprintf@width& (0+255),b
  3486  00156E                     l5712:
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;doprnt.c: 1362: }
  3490                           ;doprnt.c: 1390: if(width > c)
  3491  00156E  0E80               	movlw	128
  3492  001570  0100               	movlb	0	; () banked
  3493  001572  0100               	movlb	0	; () banked
  3494  001574  BFCE               	btfsc	sprintf@c& (0+255),7,b
  3495  001576  0E7F               	movlw	127
  3496  001578  6FA5               	movwf	??_sprintf& (0+255),b
  3497  00157A  0100               	movlb	0	; () banked
  3498  00157C  0100               	movlb	0	; () banked
  3499  00157E  51C3               	movf	sprintf@width& (0+255),w,b
  3500  001580  0100               	movlb	0	; () banked
  3501  001582  0100               	movlb	0	; () banked
  3502  001584  5DCE               	subwf	sprintf@c& (0+255),w,b
  3503  001586  0100               	movlb	0	; () banked
  3504  001588  0100               	movlb	0	; () banked
  3505  00158A  51C4               	movf	(sprintf@width+1)& (0+255),w,b
  3506  00158C  0A80               	xorlw	128
  3507  00158E  0100               	movlb	0	; () banked
  3508  001590  59A5               	subwfb	??_sprintf& (0+255),w,b
  3509  001592  B0D8               	btfsc	status,0,c
  3510  001594  D00E               	goto	l5716
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;doprnt.c: 1391: width -= c;
  3514  001596  0100               	movlb	0	; () banked
  3515  001598  0100               	movlb	0	; () banked
  3516  00159A  51CE               	movf	sprintf@c& (0+255),w,b
  3517  00159C  0100               	movlb	0	; () banked
  3518  00159E  0100               	movlb	0	; () banked
  3519  0015A0  5FC3               	subwf	sprintf@width& (0+255),f,b
  3520  0015A2  0E00               	movlw	0
  3521  0015A4  0100               	movlb	0	; () banked
  3522  0015A6  BFCE               	btfsc	sprintf@c& (0+255),7,b
  3523  0015A8  0EFF               	movlw	255
  3524  0015AA  0100               	movlb	0	; () banked
  3525  0015AC  0100               	movlb	0	; () banked
  3526  0015AE  5BC4               	subwfb	(sprintf@width+1)& (0+255),f,b
  3527  0015B0  D007               	goto	l5718
  3528  0015B2                     l5716:
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;doprnt.c: 1392: else
  3532                           ;doprnt.c: 1393: width = 0;
  3533  0015B2  0E00               	movlw	0
  3534  0015B4  0100               	movlb	0	; () banked
  3535  0015B6  0100               	movlb	0	; () banked
  3536  0015B8  6FC4               	movwf	(sprintf@width+1)& (0+255),b
  3537  0015BA  0E00               	movlw	0
  3538  0015BC  0100               	movlb	0	; () banked
  3539  0015BE  6FC3               	movwf	sprintf@width& (0+255),b
  3540  0015C0                     l5718:
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;doprnt.c: 1431: {
  3544                           ;doprnt.c: 1433: if(width
  3545                           ;doprnt.c: 1437: )
  3546  0015C0  0100               	movlb	0	; () banked
  3547  0015C2  0100               	movlb	0	; () banked
  3548  0015C4  51C4               	movf	(sprintf@width+1)& (0+255),w,b
  3549  0015C6  11C3               	iorwf	sprintf@width& (0+255),w,b
  3550  0015C8  B4D8               	btfsc	status,2,c
  3551  0015CA  D014               	goto	l5726
  3552  0015CC                     l5720:
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;doprnt.c: 1439: ((*sp++ = (' ')));
  3556  0015CC  C09C  FFD9         	movff	sprintf@sp,fsr2l
  3557  0015D0  C09D  FFDA         	movff	sprintf@sp+1,fsr2h
  3558  0015D4  0E20               	movlw	32
  3559  0015D6  6EDF               	movwf	indf2,c
  3560                           
  3561                           ; BSR set to: 0
  3562  0015D8  0100               	movlb	0	; () banked
  3563  0015DA  0100               	movlb	0	; () banked
  3564  0015DC  4B9C               	infsnz	sprintf@sp& (0+255),f,b
  3565  0015DE  2B9D               	incf	(sprintf@sp+1)& (0+255),f,b
  3566                           
  3567                           ; BSR set to: 0
  3568                           ;doprnt.c: 1440: while(--width);
  3569  0015E0  0100               	movlb	0	; () banked
  3570  0015E2  0100               	movlb	0	; () banked
  3571  0015E4  07C3               	decf	sprintf@width& (0+255),f,b
  3572  0015E6  A0D8               	btfss	status,0,c
  3573  0015E8  07C4               	decf	(sprintf@width+1)& (0+255),f,b
  3574  0015EA  0100               	movlb	0	; () banked
  3575  0015EC  51C4               	movf	(sprintf@width+1)& (0+255),w,b
  3576  0015EE  11C3               	iorwf	sprintf@width& (0+255),w,b
  3577  0015F0  A4D8               	btfss	status,2,c
  3578  0015F2  D7EC               	goto	l5720
  3579  0015F4                     l5726:
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;doprnt.c: 1447: if(flag & 0x03)
  3583  0015F4  0E03               	movlw	3
  3584  0015F6  0100               	movlb	0	; () banked
  3585  0015F8  0100               	movlb	0	; () banked
  3586  0015FA  15BF               	andwf	sprintf@flag& (0+255),w,b
  3587  0015FC  0100               	movlb	0	; () banked
  3588  0015FE  6FA5               	movwf	??_sprintf& (0+255),b
  3589  001600  0E00               	movlw	0
  3590  001602  0100               	movlb	0	; () banked
  3591  001604  0100               	movlb	0	; () banked
  3592  001606  15C0               	andwf	(sprintf@flag+1)& (0+255),w,b
  3593  001608  0100               	movlb	0	; () banked
  3594  00160A  6FA6               	movwf	(??_sprintf+1)& (0+255),b
  3595  00160C  0100               	movlb	0	; () banked
  3596  00160E  51A6               	movf	(??_sprintf+1)& (0+255),w,b
  3597  001610  11A5               	iorwf	??_sprintf& (0+255),w,b
  3598  001612  B4D8               	btfsc	status,2,c
  3599  001614  D066               	goto	l5738
  3600                           
  3601                           ; BSR set to: 0
  3602                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  3603  001616  C09C  FFD9         	movff	sprintf@sp,fsr2l
  3604  00161A  C09D  FFDA         	movff	sprintf@sp+1,fsr2h
  3605  00161E  0E2D               	movlw	45
  3606  001620  6EDF               	movwf	indf2,c
  3607  001622  D05B               	goto	L7
  3608  001624                     l5732:
  3609                           
  3610                           ; BSR set to: 0
  3611                           ;doprnt.c: 1487: {
  3612                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  3613  001624  0100               	movlb	0	; () banked
  3614  001626  C0CC  F0A5         	movff	sprintf@prec,??_sprintf
  3615  00162A  0100               	movlb	0	; () banked
  3616  00162C  C0CD  F0A6         	movff	sprintf@prec+1,??_sprintf+1
  3617  001630  0100               	movlb	0	; () banked
  3618  001632  90D8               	bcf	status,0,c
  3619  001634  37A5               	rlcf	??_sprintf& (0+255),f,b
  3620  001636  37A6               	rlcf	(??_sprintf+1)& (0+255),f,b
  3621  001638  0100               	movlb	0	; () banked
  3622  00163A  90D8               	bcf	status,0,c
  3623  00163C  37A5               	rlcf	??_sprintf& (0+255),f,b
  3624  00163E  37A6               	rlcf	(??_sprintf+1)& (0+255),f,b
  3625  001640  0E01               	movlw	low _dpowers
  3626  001642  0100               	movlb	0	; () banked
  3627  001644  25A5               	addwf	??_sprintf& (0+255),w,b
  3628  001646  6EF6               	movwf	tblptrl,c
  3629  001648  0E08               	movlw	high _dpowers
  3630  00164A  21A6               	addwfc	(??_sprintf+1)& (0+255),w,b
  3631  00164C  6EF7               	movwf	tblptrh,c
  3632  00164E  0009               	tblrd		*+
  3633  001650  0100               	movlb	0	; () banked
  3634  001652  CFF5 F064          	movff	tablat,___lldiv@divisor
  3635  001656  0009               	tblrd		*+
  3636  001658  0100               	movlb	0	; () banked
  3637  00165A  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  3638  00165E  0009               	tblrd		*+
  3639  001660  0100               	movlb	0	; () banked
  3640  001662  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  3641  001666  000A               	tblrd		*-
  3642  001668  0100               	movlb	0	; () banked
  3643  00166A  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  3644  00166E  C0C8  F060         	movff	sprintf@_val,___lldiv@dividend
  3645  001672  C0C9  F061         	movff	sprintf@_val+1,___lldiv@dividend+1
  3646  001676  C0CA  F062         	movff	sprintf@_val+2,___lldiv@dividend+2
  3647  00167A  C0CB  F063         	movff	sprintf@_val+3,___lldiv@dividend+3
  3648  00167E  ECDB  F017         	call	___lldiv	;wreg free
  3649  001682  C060  F068         	movff	?___lldiv,___llmod@dividend
  3650  001686  C061  F069         	movff	?___lldiv+1,___llmod@dividend+1
  3651  00168A  C062  F06A         	movff	?___lldiv+2,___llmod@dividend+2
  3652  00168E  C063  F06B         	movff	?___lldiv+3,___llmod@dividend+3
  3653  001692  0E0A               	movlw	10
  3654  001694  0100               	movlb	0	; () banked
  3655  001696  0100               	movlb	0	; () banked
  3656  001698  6F6C               	movwf	___llmod@divisor& (0+255),b
  3657  00169A  0E00               	movlw	0
  3658  00169C  0100               	movlb	0	; () banked
  3659  00169E  6F6D               	movwf	(___llmod@divisor+1)& (0+255),b
  3660  0016A0  0E00               	movlw	0
  3661  0016A2  0100               	movlb	0	; () banked
  3662  0016A4  6F6E               	movwf	(___llmod@divisor+2)& (0+255),b
  3663  0016A6  0E00               	movlw	0
  3664  0016A8  0100               	movlb	0	; () banked
  3665  0016AA  6F6F               	movwf	(___llmod@divisor+3)& (0+255),b
  3666  0016AC  EC4C  F018         	call	___llmod	;wreg free
  3667  0016B0  C068  F0A7         	movff	?___llmod,??_sprintf+2
  3668  0016B4  C069  F0A8         	movff	?___llmod+1,??_sprintf+3
  3669  0016B8  C06A  F0A9         	movff	?___llmod+2,??_sprintf+4
  3670  0016BC  C06B  F0AA         	movff	?___llmod+3,??_sprintf+5
  3671  0016C0  0100               	movlb	0	; () banked
  3672  0016C2  51A7               	movf	(??_sprintf+2)& (0+255),w,b
  3673  0016C4  0F30               	addlw	48
  3674  0016C6  0100               	movlb	0	; () banked
  3675  0016C8  0100               	movlb	0	; () banked
  3676  0016CA  6FCE               	movwf	sprintf@c& (0+255),b
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;doprnt.c: 1532: }
  3680                           ;doprnt.c: 1533: ((*sp++ = (c)));
  3681  0016CC  C09C  FFD9         	movff	sprintf@sp,fsr2l
  3682  0016D0  C09D  FFDA         	movff	sprintf@sp+1,fsr2h
  3683  0016D4  0100               	movlb	0	; () banked
  3684  0016D6  C0CE  FFDF         	movff	sprintf@c,indf2
  3685  0016DA                     L7:
  3686                           
  3687                           ; BSR set to: 0
  3688  0016DA  0100               	movlb	0	; () banked
  3689  0016DC  0100               	movlb	0	; () banked
  3690  0016DE  4B9C               	infsnz	sprintf@sp& (0+255),f,b
  3691  0016E0  2B9D               	incf	(sprintf@sp+1)& (0+255),f,b
  3692  0016E2                     l5738:
  3693                           
  3694                           ; BSR set to: 0
  3695  0016E2  0100               	movlb	0	; () banked
  3696  0016E4  0100               	movlb	0	; () banked
  3697  0016E6  07CC               	decf	sprintf@prec& (0+255),f,b
  3698  0016E8  A0D8               	btfss	status,0,c
  3699  0016EA  07CD               	decf	(sprintf@prec+1)& (0+255),f,b
  3700  0016EC  0100               	movlb	0	; () banked
  3701  0016EE  29CC               	incf	sprintf@prec& (0+255),w,b
  3702  0016F0  B4D8               	btfsc	status,2,c
  3703  0016F2  29CD               	incf	(sprintf@prec+1)& (0+255),w,b
  3704  0016F4  A4D8               	btfss	status,2,c
  3705  0016F6  D796               	goto	l5732
  3706  0016F8                     l5740:
  3707                           
  3708                           ; BSR set to: 0
  3709  0016F8  0100               	movlb	0	; () banked
  3710  0016FA  C09E  FFF6         	movff	sprintf@f,tblptrl
  3711  0016FE  0100               	movlb	0	; () banked
  3712  001700  C09F  FFF7         	movff	sprintf@f+1,tblptrh
  3713  001704  0100               	movlb	0	; () banked
  3714  001706  0100               	movlb	0	; () banked
  3715  001708  4B9E               	infsnz	sprintf@f& (0+255),f,b
  3716  00170A  2B9F               	incf	(sprintf@f+1)& (0+255),f,b
  3717  00170C  0008               	tblrd		*
  3718  00170E  0100               	movlb	0	; () banked
  3719  001710  CFF5 F0CE          	movff	tablat,sprintf@c
  3720  001714  0100               	movlb	0	; () banked
  3721  001716  67CE               	tstfsz	sprintf@c& (0+255),b
  3722  001718  EF67  F004         	goto	l5424
  3723  00171C                     l5742:
  3724                           
  3725                           ; BSR set to: 0
  3726                           ;doprnt.c: 1547: *sp = 0;
  3727  00171C  C09C  FFD9         	movff	sprintf@sp,fsr2l
  3728  001720  C09D  FFDA         	movff	sprintf@sp+1,fsr2h
  3729  001724  0E00               	movlw	0
  3730  001726  6EDF               	movwf	indf2,c
  3731                           
  3732                           ; BSR set to: 0
  3733                           
  3734                           ; BSR set to: 0
  3735                           ;doprnt.c: 1549: return 0;
  3736                           ;	Return value of _sprintf is never used
  3737  001728  0012               	return	
  3738  00172A                     __end_of_sprintf:
  3739                           	opt stack 0
  3740                           tblptru	equ	0xFF8
  3741                           tblptrh	equ	0xFF7
  3742                           tblptrl	equ	0xFF6
  3743                           tablat	equ	0xFF5
  3744                           prodh	equ	0xFF4
  3745                           prodl	equ	0xFF3
  3746                           wreg	equ	0xFE8
  3747                           indf1	equ	0xFE7
  3748                           fsr1h	equ	0xFE2
  3749                           fsr1l	equ	0xFE1
  3750                           indf2	equ	0xFDF
  3751                           postinc2	equ	0xFDE
  3752                           postdec2	equ	0xFDD
  3753                           fsr2h	equ	0xFDA
  3754                           fsr2l	equ	0xFD9
  3755                           status	equ	0xFD8
  3756                           
  3757 ;; *************** function _scale *****************
  3758 ;; Defined at:
  3759 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\doprnt.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  scl             1    wreg     char 
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;  scl             1   44[BANK0 ] char 
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  3   38[BANK0 ] char 
  3766 ;; Registers used:
  3767 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/0
  3770 ;;		On exit  : 0/0
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3773 ;;      Params:         0       3       0       0       0       0       0       0       0
  3774 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3775 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3776 ;;      Totals:         0       7       0       0       0       0       0       0       0
  3777 ;;Total ram usage:        7 bytes
  3778 ;; Hardware stack levels used:    1
  3779 ;; Hardware stack levels required when called:    7
  3780 ;; This function calls:
  3781 ;;		___awdiv
  3782 ;;		___awmod
  3783 ;;		___ftmul
  3784 ;;		___wmul
  3785 ;; This function is called by:
  3786 ;;		_sprintf
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           	psect	text3
  3791  00172A                     __ptext3:
  3792                           	opt stack 0
  3793  00172A                     _scale:
  3794                           	opt stack 22
  3795                           
  3796                           ; BSR set to: 0
  3797                           ;incstack = 0
  3798                           ;scale@scl stored from wreg
  3799  00172A  CFE8 F08C          	movff	wreg,scale@scl
  3800                           
  3801                           ;doprnt.c: 428: if(scl < 0) {
  3802  00172E  0100               	movlb	0	; () banked
  3803  001730  0100               	movlb	0	; () banked
  3804  001732  AF8C               	btfss	scale@scl& (0+255),7,b
  3805  001734  D14F               	goto	l5788
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;doprnt.c: 429: scl = -scl;
  3809  001736  0100               	movlb	0	; () banked
  3810  001738  0100               	movlb	0	; () banked
  3811  00173A  6D8C               	negf	scale@scl& (0+255),b
  3812                           
  3813                           ;doprnt.c: 430: if(scl>=110)
  3814  00173C  0100               	movlb	0	; () banked
  3815  00173E  0100               	movlb	0	; () banked
  3816  001740  518C               	movf	scale@scl& (0+255),w,b
  3817  001742  0A80               	xorlw	128
  3818  001744  0F12               	addlw	-238
  3819  001746  A0D8               	btfss	status,0,c
  3820  001748  D0C4               	goto	l5778
  3821                           
  3822                           ; BSR set to: 0
  3823                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3824  00174A  0E00               	movlw	0
  3825  00174C  0100               	movlb	0	; () banked
  3826  00174E  0100               	movlb	0	; () banked
  3827  001750  6F6D               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3828  001752  0E03               	movlw	3
  3829  001754  0100               	movlb	0	; () banked
  3830  001756  6F6C               	movwf	___wmul@multiplicand& (0+255),b
  3831  001758  0E00               	movlw	0
  3832  00175A  0100               	movlb	0	; () banked
  3833  00175C  0100               	movlb	0	; () banked
  3834  00175E  6F65               	movwf	(___awdiv@divisor+1)& (0+255),b
  3835  001760  0E0A               	movlw	10
  3836  001762  0100               	movlb	0	; () banked
  3837  001764  6F64               	movwf	___awdiv@divisor& (0+255),b
  3838  001766  0E00               	movlw	0
  3839  001768  6E30               	movwf	___awmod@divisor+1,c
  3840  00176A  0E64               	movlw	100
  3841  00176C  6E2F               	movwf	___awmod@divisor,c
  3842  00176E  0100               	movlb	0	; () banked
  3843  001770  0100               	movlb	0	; () banked
  3844  001772  518C               	movf	scale@scl& (0+255),w,b
  3845  001774  6E2D               	movwf	___awmod@dividend,c
  3846  001776  6A2E               	clrf	___awmod@dividend+1,c
  3847  001778  BE2D               	btfsc	___awmod@dividend,7,c
  3848  00177A  062E               	decf	___awmod@dividend+1,f,c
  3849  00177C  EC6E  F019         	call	___awmod	;wreg free
  3850  001780  C02D  F062         	movff	?___awmod,___awdiv@dividend
  3851  001784  C02E  F063         	movff	?___awmod+1,___awdiv@dividend+1
  3852  001788  EC46  F017         	call	___awdiv	;wreg free
  3853  00178C  0E09               	movlw	9
  3854  00178E  0100               	movlb	0	; () banked
  3855  001790  0100               	movlb	0	; () banked
  3856  001792  2562               	addwf	?___awdiv& (0+255),w,b
  3857  001794  0100               	movlb	0	; () banked
  3858  001796  0100               	movlb	0	; () banked
  3859  001798  6F6A               	movwf	___wmul@multiplier& (0+255),b
  3860  00179A  0E00               	movlw	0
  3861  00179C  0100               	movlb	0	; () banked
  3862  00179E  0100               	movlb	0	; () banked
  3863  0017A0  2163               	addwfc	(?___awdiv+1)& (0+255),w,b
  3864  0017A2  0100               	movlb	0	; () banked
  3865  0017A4  6F6B               	movwf	(___wmul@multiplier+1)& (0+255),b
  3866  0017A6  ECB8  F01B         	call	___wmul	;wreg free
  3867  0017AA  0E29               	movlw	low __npowers_
  3868  0017AC  0100               	movlb	0	; () banked
  3869  0017AE  0100               	movlb	0	; () banked
  3870  0017B0  256A               	addwf	?___wmul& (0+255),w,b
  3871  0017B2  6EF6               	movwf	tblptrl,c
  3872  0017B4  0E08               	movlw	high __npowers_
  3873  0017B6  0100               	movlb	0	; () banked
  3874  0017B8  216B               	addwfc	(?___wmul+1)& (0+255),w,b
  3875  0017BA  6EF7               	movwf	tblptrh,c
  3876  0017BC  0009               	tblrd		*+
  3877  0017BE  0100               	movlb	0	; () banked
  3878  0017C0  CFF5 F07A          	movff	tablat,___ftmul@f2
  3879  0017C4  0009               	tblrd		*+
  3880  0017C6  0100               	movlb	0	; () banked
  3881  0017C8  CFF5 F07B          	movff	tablat,___ftmul@f2+1
  3882  0017CC  000A               	tblrd		*-
  3883  0017CE  0100               	movlb	0	; () banked
  3884  0017D0  CFF5 F07C          	movff	tablat,___ftmul@f2+2
  3885  0017D4  0E00               	movlw	0
  3886  0017D6  0100               	movlb	0	; () banked
  3887  0017D8  0100               	movlb	0	; () banked
  3888  0017DA  6F6D               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3889  0017DC  0E03               	movlw	3
  3890  0017DE  0100               	movlb	0	; () banked
  3891  0017E0  6F6C               	movwf	___wmul@multiplicand& (0+255),b
  3892  0017E2  0E00               	movlw	0
  3893  0017E4  0100               	movlb	0	; () banked
  3894  0017E6  0100               	movlb	0	; () banked
  3895  0017E8  6F65               	movwf	(___awdiv@divisor+1)& (0+255),b
  3896  0017EA  0E64               	movlw	100
  3897  0017EC  0100               	movlb	0	; () banked
  3898  0017EE  6F64               	movwf	___awdiv@divisor& (0+255),b
  3899  0017F0  0100               	movlb	0	; () banked
  3900  0017F2  0100               	movlb	0	; () banked
  3901  0017F4  518C               	movf	scale@scl& (0+255),w,b
  3902  0017F6  0100               	movlb	0	; () banked
  3903  0017F8  0100               	movlb	0	; () banked
  3904  0017FA  6F62               	movwf	___awdiv@dividend& (0+255),b
  3905  0017FC  0100               	movlb	0	; () banked
  3906  0017FE  6B63               	clrf	(___awdiv@dividend+1)& (0+255),b
  3907  001800  0100               	movlb	0	; () banked
  3908  001802  BF62               	btfsc	___awdiv@dividend& (0+255),7,b
  3909  001804  0763               	decf	(___awdiv@dividend+1)& (0+255),f,b
  3910  001806  EC46  F017         	call	___awdiv	;wreg free
  3911  00180A  0E12               	movlw	18
  3912  00180C  0100               	movlb	0	; () banked
  3913  00180E  0100               	movlb	0	; () banked
  3914  001810  2562               	addwf	?___awdiv& (0+255),w,b
  3915  001812  0100               	movlb	0	; () banked
  3916  001814  0100               	movlb	0	; () banked
  3917  001816  6F6A               	movwf	___wmul@multiplier& (0+255),b
  3918  001818  0E00               	movlw	0
  3919  00181A  0100               	movlb	0	; () banked
  3920  00181C  0100               	movlb	0	; () banked
  3921  00181E  2163               	addwfc	(?___awdiv+1)& (0+255),w,b
  3922  001820  0100               	movlb	0	; () banked
  3923  001822  6F6B               	movwf	(___wmul@multiplier+1)& (0+255),b
  3924  001824  ECB8  F01B         	call	___wmul	;wreg free
  3925  001828  0E29               	movlw	low __npowers_
  3926  00182A  0100               	movlb	0	; () banked
  3927  00182C  0100               	movlb	0	; () banked
  3928  00182E  256A               	addwf	?___wmul& (0+255),w,b
  3929  001830  6EF6               	movwf	tblptrl,c
  3930  001832  0E08               	movlw	high __npowers_
  3931  001834  0100               	movlb	0	; () banked
  3932  001836  216B               	addwfc	(?___wmul+1)& (0+255),w,b
  3933  001838  6EF7               	movwf	tblptrh,c
  3934  00183A  0009               	tblrd		*+
  3935  00183C  0100               	movlb	0	; () banked
  3936  00183E  CFF5 F077          	movff	tablat,___ftmul@f1
  3937  001842  0009               	tblrd		*+
  3938  001844  0100               	movlb	0	; () banked
  3939  001846  CFF5 F078          	movff	tablat,___ftmul@f1+1
  3940  00184A  000A               	tblrd		*-
  3941  00184C  0100               	movlb	0	; () banked
  3942  00184E  CFF5 F079          	movff	tablat,___ftmul@f1+2
  3943  001852  EC49  F013         	call	___ftmul	;wreg free
  3944  001856  C077  F089         	movff	?___ftmul,_scale$2469
  3945  00185A  C078  F08A         	movff	?___ftmul+1,_scale$2469+1
  3946  00185E  C079  F08B         	movff	?___ftmul+2,_scale$2469+2
  3947                           
  3948                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3949  001862  C089  F077         	movff	_scale$2469,___ftmul@f1
  3950  001866  C08A  F078         	movff	_scale$2469+1,___ftmul@f1+1
  3951  00186A  C08B  F079         	movff	_scale$2469+2,___ftmul@f1+2
  3952  00186E  0E00               	movlw	0
  3953  001870  0100               	movlb	0	; () banked
  3954  001872  0100               	movlb	0	; () banked
  3955  001874  6F6D               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3956  001876  0E03               	movlw	3
  3957  001878  0100               	movlb	0	; () banked
  3958  00187A  6F6C               	movwf	___wmul@multiplicand& (0+255),b
  3959  00187C  0E00               	movlw	0
  3960  00187E  6E30               	movwf	___awmod@divisor+1,c
  3961  001880  0E0A               	movlw	10
  3962  001882  6E2F               	movwf	___awmod@divisor,c
  3963  001884  0100               	movlb	0	; () banked
  3964  001886  0100               	movlb	0	; () banked
  3965  001888  518C               	movf	scale@scl& (0+255),w,b
  3966  00188A  6E2D               	movwf	___awmod@dividend,c
  3967  00188C  6A2E               	clrf	___awmod@dividend+1,c
  3968  00188E  BE2D               	btfsc	___awmod@dividend,7,c
  3969  001890  062E               	decf	___awmod@dividend+1,f,c
  3970  001892  EC6E  F019         	call	___awmod	;wreg free
  3971  001896  C02D  F06A         	movff	?___awmod,___wmul@multiplier
  3972  00189A  C02E  F06B         	movff	?___awmod+1,___wmul@multiplier+1
  3973  00189E  ECB8  F01B         	call	___wmul	;wreg free
  3974  0018A2  0E29               	movlw	low __npowers_
  3975  0018A4  0100               	movlb	0	; () banked
  3976  0018A6  0100               	movlb	0	; () banked
  3977  0018A8  256A               	addwf	?___wmul& (0+255),w,b
  3978  0018AA  6EF6               	movwf	tblptrl,c
  3979  0018AC  0E08               	movlw	high __npowers_
  3980  0018AE  0100               	movlb	0	; () banked
  3981  0018B0  216B               	addwfc	(?___wmul+1)& (0+255),w,b
  3982  0018B2  6EF7               	movwf	tblptrh,c
  3983  0018B4  0009               	tblrd		*+
  3984  0018B6  0100               	movlb	0	; () banked
  3985  0018B8  CFF5 F07A          	movff	tablat,___ftmul@f2
  3986  0018BC  0009               	tblrd		*+
  3987  0018BE  0100               	movlb	0	; () banked
  3988  0018C0  CFF5 F07B          	movff	tablat,___ftmul@f2+1
  3989  0018C4  000A               	tblrd		*-
  3990  0018C6  0100               	movlb	0	; () banked
  3991  0018C8  CFF5 F07C          	movff	tablat,___ftmul@f2+2
  3992  0018CC  EC49  F013         	call	___ftmul	;wreg free
  3993  0018D0  D1C3               	goto	L11
  3994  0018D2                     l5778:
  3995                           
  3996                           ;doprnt.c: 432: else if(scl > 10)
  3997  0018D2  0100               	movlb	0	; () banked
  3998  0018D4  0100               	movlb	0	; () banked
  3999  0018D6  518C               	movf	scale@scl& (0+255),w,b
  4000  0018D8  0A80               	xorlw	128
  4001  0018DA  0F75               	addlw	-139
  4002  0018DC  A0D8               	btfss	status,0,c
  4003  0018DE  D071               	goto	l5784
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4007  0018E0  0E00               	movlw	0
  4008  0018E2  0100               	movlb	0	; () banked
  4009  0018E4  0100               	movlb	0	; () banked
  4010  0018E6  6F6D               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4011  0018E8  0E03               	movlw	3
  4012  0018EA  0100               	movlb	0	; () banked
  4013  0018EC  6F6C               	movwf	___wmul@multiplicand& (0+255),b
  4014  0018EE  0E00               	movlw	0
  4015  0018F0  0100               	movlb	0	; () banked
  4016  0018F2  0100               	movlb	0	; () banked
  4017  0018F4  6F65               	movwf	(___awdiv@divisor+1)& (0+255),b
  4018  0018F6  0E0A               	movlw	10
  4019  0018F8  0100               	movlb	0	; () banked
  4020  0018FA  6F64               	movwf	___awdiv@divisor& (0+255),b
  4021  0018FC  0100               	movlb	0	; () banked
  4022  0018FE  0100               	movlb	0	; () banked
  4023  001900  518C               	movf	scale@scl& (0+255),w,b
  4024  001902  0100               	movlb	0	; () banked
  4025  001904  0100               	movlb	0	; () banked
  4026  001906  6F62               	movwf	___awdiv@dividend& (0+255),b
  4027  001908  0100               	movlb	0	; () banked
  4028  00190A  6B63               	clrf	(___awdiv@dividend+1)& (0+255),b
  4029  00190C  0100               	movlb	0	; () banked
  4030  00190E  BF62               	btfsc	___awdiv@dividend& (0+255),7,b
  4031  001910  0763               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4032  001912  EC46  F017         	call	___awdiv	;wreg free
  4033  001916  0E09               	movlw	9
  4034  001918  0100               	movlb	0	; () banked
  4035  00191A  0100               	movlb	0	; () banked
  4036  00191C  2562               	addwf	?___awdiv& (0+255),w,b
  4037  00191E  0100               	movlb	0	; () banked
  4038  001920  0100               	movlb	0	; () banked
  4039  001922  6F6A               	movwf	___wmul@multiplier& (0+255),b
  4040  001924  0E00               	movlw	0
  4041  001926  0100               	movlb	0	; () banked
  4042  001928  0100               	movlb	0	; () banked
  4043  00192A  2163               	addwfc	(?___awdiv+1)& (0+255),w,b
  4044  00192C  0100               	movlb	0	; () banked
  4045  00192E  6F6B               	movwf	(___wmul@multiplier+1)& (0+255),b
  4046  001930  ECB8  F01B         	call	___wmul	;wreg free
  4047  001934  0E29               	movlw	low __npowers_
  4048  001936  0100               	movlb	0	; () banked
  4049  001938  0100               	movlb	0	; () banked
  4050  00193A  256A               	addwf	?___wmul& (0+255),w,b
  4051  00193C  6EF6               	movwf	tblptrl,c
  4052  00193E  0E08               	movlw	high __npowers_
  4053  001940  0100               	movlb	0	; () banked
  4054  001942  216B               	addwfc	(?___wmul+1)& (0+255),w,b
  4055  001944  6EF7               	movwf	tblptrh,c
  4056  001946  0009               	tblrd		*+
  4057  001948  0100               	movlb	0	; () banked
  4058  00194A  CFF5 F077          	movff	tablat,___ftmul@f1
  4059  00194E  0009               	tblrd		*+
  4060  001950  0100               	movlb	0	; () banked
  4061  001952  CFF5 F078          	movff	tablat,___ftmul@f1+1
  4062  001956  000A               	tblrd		*-
  4063  001958  0100               	movlb	0	; () banked
  4064  00195A  CFF5 F079          	movff	tablat,___ftmul@f1+2
  4065  00195E  0E00               	movlw	0
  4066  001960  0100               	movlb	0	; () banked
  4067  001962  0100               	movlb	0	; () banked
  4068  001964  6F6D               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4069  001966  0E03               	movlw	3
  4070  001968  0100               	movlb	0	; () banked
  4071  00196A  6F6C               	movwf	___wmul@multiplicand& (0+255),b
  4072  00196C  0E00               	movlw	0
  4073  00196E  6E30               	movwf	___awmod@divisor+1,c
  4074  001970  0E0A               	movlw	10
  4075  001972  6E2F               	movwf	___awmod@divisor,c
  4076  001974  0100               	movlb	0	; () banked
  4077  001976  0100               	movlb	0	; () banked
  4078  001978  518C               	movf	scale@scl& (0+255),w,b
  4079  00197A  6E2D               	movwf	___awmod@dividend,c
  4080  00197C  6A2E               	clrf	___awmod@dividend+1,c
  4081  00197E  BE2D               	btfsc	___awmod@dividend,7,c
  4082  001980  062E               	decf	___awmod@dividend+1,f,c
  4083  001982  EC6E  F019         	call	___awmod	;wreg free
  4084  001986  C02D  F06A         	movff	?___awmod,___wmul@multiplier
  4085  00198A  C02E  F06B         	movff	?___awmod+1,___wmul@multiplier+1
  4086  00198E  ECB8  F01B         	call	___wmul	;wreg free
  4087  001992  0E29               	movlw	low __npowers_
  4088  001994  0100               	movlb	0	; () banked
  4089  001996  0100               	movlb	0	; () banked
  4090  001998  256A               	addwf	?___wmul& (0+255),w,b
  4091  00199A  6EF6               	movwf	tblptrl,c
  4092  00199C  0E08               	movlw	high __npowers_
  4093  00199E  0100               	movlb	0	; () banked
  4094  0019A0  216B               	addwfc	(?___wmul+1)& (0+255),w,b
  4095  0019A2  6EF7               	movwf	tblptrh,c
  4096  0019A4  0009               	tblrd		*+
  4097  0019A6  0100               	movlb	0	; () banked
  4098  0019A8  CFF5 F07A          	movff	tablat,___ftmul@f2
  4099  0019AC  0009               	tblrd		*+
  4100  0019AE  0100               	movlb	0	; () banked
  4101  0019B0  CFF5 F07B          	movff	tablat,___ftmul@f2+1
  4102  0019B4  000A               	tblrd		*-
  4103  0019B6  0100               	movlb	0	; () banked
  4104  0019B8  CFF5 F07C          	movff	tablat,___ftmul@f2+2
  4105  0019BC  EC49  F013         	call	___ftmul	;wreg free
  4106  0019C0  D14B               	goto	L11
  4107  0019C2                     l5784:
  4108                           
  4109                           ;doprnt.c: 434: return _npowers_[scl];
  4110  0019C2  0100               	movlb	0	; () banked
  4111  0019C4  0100               	movlb	0	; () banked
  4112  0019C6  518C               	movf	scale@scl& (0+255),w,b
  4113  0019C8  0D03               	mullw	3
  4114  0019CA  0E29               	movlw	low __npowers_
  4115  0019CC  24F3               	addwf	prodl,w,c
  4116  0019CE  6EF6               	movwf	tblptrl,c
  4117  0019D0  0E08               	movlw	high __npowers_
  4118  0019D2  D151               	goto	L10
  4119  0019D4                     l5788:
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;doprnt.c: 435: }
  4123                           ;doprnt.c: 436: if(scl>=110)
  4124  0019D4  0100               	movlb	0	; () banked
  4125  0019D6  0100               	movlb	0	; () banked
  4126  0019D8  518C               	movf	scale@scl& (0+255),w,b
  4127  0019DA  0A80               	xorlw	128
  4128  0019DC  0F12               	addlw	-238
  4129  0019DE  A0D8               	btfss	status,0,c
  4130  0019E0  D0C4               	goto	l5796
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4134  0019E2  0E00               	movlw	0
  4135  0019E4  0100               	movlb	0	; () banked
  4136  0019E6  0100               	movlb	0	; () banked
  4137  0019E8  6F6D               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4138  0019EA  0E03               	movlw	3
  4139  0019EC  0100               	movlb	0	; () banked
  4140  0019EE  6F6C               	movwf	___wmul@multiplicand& (0+255),b
  4141  0019F0  0E00               	movlw	0
  4142  0019F2  0100               	movlb	0	; () banked
  4143  0019F4  0100               	movlb	0	; () banked
  4144  0019F6  6F65               	movwf	(___awdiv@divisor+1)& (0+255),b
  4145  0019F8  0E0A               	movlw	10
  4146  0019FA  0100               	movlb	0	; () banked
  4147  0019FC  6F64               	movwf	___awdiv@divisor& (0+255),b
  4148  0019FE  0E00               	movlw	0
  4149  001A00  6E30               	movwf	___awmod@divisor+1,c
  4150  001A02  0E64               	movlw	100
  4151  001A04  6E2F               	movwf	___awmod@divisor,c
  4152  001A06  0100               	movlb	0	; () banked
  4153  001A08  0100               	movlb	0	; () banked
  4154  001A0A  518C               	movf	scale@scl& (0+255),w,b
  4155  001A0C  6E2D               	movwf	___awmod@dividend,c
  4156  001A0E  6A2E               	clrf	___awmod@dividend+1,c
  4157  001A10  BE2D               	btfsc	___awmod@dividend,7,c
  4158  001A12  062E               	decf	___awmod@dividend+1,f,c
  4159  001A14  EC6E  F019         	call	___awmod	;wreg free
  4160  001A18  C02D  F062         	movff	?___awmod,___awdiv@dividend
  4161  001A1C  C02E  F063         	movff	?___awmod+1,___awdiv@dividend+1
  4162  001A20  EC46  F017         	call	___awdiv	;wreg free
  4163  001A24  0E09               	movlw	9
  4164  001A26  0100               	movlb	0	; () banked
  4165  001A28  0100               	movlb	0	; () banked
  4166  001A2A  2562               	addwf	?___awdiv& (0+255),w,b
  4167  001A2C  0100               	movlb	0	; () banked
  4168  001A2E  0100               	movlb	0	; () banked
  4169  001A30  6F6A               	movwf	___wmul@multiplier& (0+255),b
  4170  001A32  0E00               	movlw	0
  4171  001A34  0100               	movlb	0	; () banked
  4172  001A36  0100               	movlb	0	; () banked
  4173  001A38  2163               	addwfc	(?___awdiv+1)& (0+255),w,b
  4174  001A3A  0100               	movlb	0	; () banked
  4175  001A3C  6F6B               	movwf	(___wmul@multiplier+1)& (0+255),b
  4176  001A3E  ECB8  F01B         	call	___wmul	;wreg free
  4177  001A42  0E50               	movlw	low __powers_
  4178  001A44  0100               	movlb	0	; () banked
  4179  001A46  0100               	movlb	0	; () banked
  4180  001A48  256A               	addwf	?___wmul& (0+255),w,b
  4181  001A4A  6EF6               	movwf	tblptrl,c
  4182  001A4C  0E08               	movlw	high __powers_
  4183  001A4E  0100               	movlb	0	; () banked
  4184  001A50  216B               	addwfc	(?___wmul+1)& (0+255),w,b
  4185  001A52  6EF7               	movwf	tblptrh,c
  4186  001A54  0009               	tblrd		*+
  4187  001A56  0100               	movlb	0	; () banked
  4188  001A58  CFF5 F07A          	movff	tablat,___ftmul@f2
  4189  001A5C  0009               	tblrd		*+
  4190  001A5E  0100               	movlb	0	; () banked
  4191  001A60  CFF5 F07B          	movff	tablat,___ftmul@f2+1
  4192  001A64  000A               	tblrd		*-
  4193  001A66  0100               	movlb	0	; () banked
  4194  001A68  CFF5 F07C          	movff	tablat,___ftmul@f2+2
  4195  001A6C  0E00               	movlw	0
  4196  001A6E  0100               	movlb	0	; () banked
  4197  001A70  0100               	movlb	0	; () banked
  4198  001A72  6F6D               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4199  001A74  0E03               	movlw	3
  4200  001A76  0100               	movlb	0	; () banked
  4201  001A78  6F6C               	movwf	___wmul@multiplicand& (0+255),b
  4202  001A7A  0E00               	movlw	0
  4203  001A7C  0100               	movlb	0	; () banked
  4204  001A7E  0100               	movlb	0	; () banked
  4205  001A80  6F65               	movwf	(___awdiv@divisor+1)& (0+255),b
  4206  001A82  0E64               	movlw	100
  4207  001A84  0100               	movlb	0	; () banked
  4208  001A86  6F64               	movwf	___awdiv@divisor& (0+255),b
  4209  001A88  0100               	movlb	0	; () banked
  4210  001A8A  0100               	movlb	0	; () banked
  4211  001A8C  518C               	movf	scale@scl& (0+255),w,b
  4212  001A8E  0100               	movlb	0	; () banked
  4213  001A90  0100               	movlb	0	; () banked
  4214  001A92  6F62               	movwf	___awdiv@dividend& (0+255),b
  4215  001A94  0100               	movlb	0	; () banked
  4216  001A96  6B63               	clrf	(___awdiv@dividend+1)& (0+255),b
  4217  001A98  0100               	movlb	0	; () banked
  4218  001A9A  BF62               	btfsc	___awdiv@dividend& (0+255),7,b
  4219  001A9C  0763               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4220  001A9E  EC46  F017         	call	___awdiv	;wreg free
  4221  001AA2  0E12               	movlw	18
  4222  001AA4  0100               	movlb	0	; () banked
  4223  001AA6  0100               	movlb	0	; () banked
  4224  001AA8  2562               	addwf	?___awdiv& (0+255),w,b
  4225  001AAA  0100               	movlb	0	; () banked
  4226  001AAC  0100               	movlb	0	; () banked
  4227  001AAE  6F6A               	movwf	___wmul@multiplier& (0+255),b
  4228  001AB0  0E00               	movlw	0
  4229  001AB2  0100               	movlb	0	; () banked
  4230  001AB4  0100               	movlb	0	; () banked
  4231  001AB6  2163               	addwfc	(?___awdiv+1)& (0+255),w,b
  4232  001AB8  0100               	movlb	0	; () banked
  4233  001ABA  6F6B               	movwf	(___wmul@multiplier+1)& (0+255),b
  4234  001ABC  ECB8  F01B         	call	___wmul	;wreg free
  4235  001AC0  0E50               	movlw	low __powers_
  4236  001AC2  0100               	movlb	0	; () banked
  4237  001AC4  0100               	movlb	0	; () banked
  4238  001AC6  256A               	addwf	?___wmul& (0+255),w,b
  4239  001AC8  6EF6               	movwf	tblptrl,c
  4240  001ACA  0E08               	movlw	high __powers_
  4241  001ACC  0100               	movlb	0	; () banked
  4242  001ACE  216B               	addwfc	(?___wmul+1)& (0+255),w,b
  4243  001AD0  6EF7               	movwf	tblptrh,c
  4244  001AD2  0009               	tblrd		*+
  4245  001AD4  0100               	movlb	0	; () banked
  4246  001AD6  CFF5 F077          	movff	tablat,___ftmul@f1
  4247  001ADA  0009               	tblrd		*+
  4248  001ADC  0100               	movlb	0	; () banked
  4249  001ADE  CFF5 F078          	movff	tablat,___ftmul@f1+1
  4250  001AE2  000A               	tblrd		*-
  4251  001AE4  0100               	movlb	0	; () banked
  4252  001AE6  CFF5 F079          	movff	tablat,___ftmul@f1+2
  4253  001AEA  EC49  F013         	call	___ftmul	;wreg free
  4254  001AEE  C077  F089         	movff	?___ftmul,_scale$2469
  4255  001AF2  C078  F08A         	movff	?___ftmul+1,_scale$2469+1
  4256  001AF6  C079  F08B         	movff	?___ftmul+2,_scale$2469+2
  4257                           
  4258                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4259  001AFA  C089  F077         	movff	_scale$2469,___ftmul@f1
  4260  001AFE  C08A  F078         	movff	_scale$2469+1,___ftmul@f1+1
  4261  001B02  C08B  F079         	movff	_scale$2469+2,___ftmul@f1+2
  4262  001B06  0E00               	movlw	0
  4263  001B08  0100               	movlb	0	; () banked
  4264  001B0A  0100               	movlb	0	; () banked
  4265  001B0C  6F6D               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4266  001B0E  0E03               	movlw	3
  4267  001B10  0100               	movlb	0	; () banked
  4268  001B12  6F6C               	movwf	___wmul@multiplicand& (0+255),b
  4269  001B14  0E00               	movlw	0
  4270  001B16  6E30               	movwf	___awmod@divisor+1,c
  4271  001B18  0E0A               	movlw	10
  4272  001B1A  6E2F               	movwf	___awmod@divisor,c
  4273  001B1C  0100               	movlb	0	; () banked
  4274  001B1E  0100               	movlb	0	; () banked
  4275  001B20  518C               	movf	scale@scl& (0+255),w,b
  4276  001B22  6E2D               	movwf	___awmod@dividend,c
  4277  001B24  6A2E               	clrf	___awmod@dividend+1,c
  4278  001B26  BE2D               	btfsc	___awmod@dividend,7,c
  4279  001B28  062E               	decf	___awmod@dividend+1,f,c
  4280  001B2A  EC6E  F019         	call	___awmod	;wreg free
  4281  001B2E  C02D  F06A         	movff	?___awmod,___wmul@multiplier
  4282  001B32  C02E  F06B         	movff	?___awmod+1,___wmul@multiplier+1
  4283  001B36  ECB8  F01B         	call	___wmul	;wreg free
  4284  001B3A  0E50               	movlw	low __powers_
  4285  001B3C  0100               	movlb	0	; () banked
  4286  001B3E  0100               	movlb	0	; () banked
  4287  001B40  256A               	addwf	?___wmul& (0+255),w,b
  4288  001B42  6EF6               	movwf	tblptrl,c
  4289  001B44  0E08               	movlw	high __powers_
  4290  001B46  0100               	movlb	0	; () banked
  4291  001B48  216B               	addwfc	(?___wmul+1)& (0+255),w,b
  4292  001B4A  6EF7               	movwf	tblptrh,c
  4293  001B4C  0009               	tblrd		*+
  4294  001B4E  0100               	movlb	0	; () banked
  4295  001B50  CFF5 F07A          	movff	tablat,___ftmul@f2
  4296  001B54  0009               	tblrd		*+
  4297  001B56  0100               	movlb	0	; () banked
  4298  001B58  CFF5 F07B          	movff	tablat,___ftmul@f2+1
  4299  001B5C  000A               	tblrd		*-
  4300  001B5E  0100               	movlb	0	; () banked
  4301  001B60  CFF5 F07C          	movff	tablat,___ftmul@f2+2
  4302  001B64  EC49  F013         	call	___ftmul	;wreg free
  4303  001B68  D077               	goto	L11
  4304  001B6A                     l5796:
  4305                           
  4306                           ;doprnt.c: 438: else if(scl > 10)
  4307  001B6A  0100               	movlb	0	; () banked
  4308  001B6C  0100               	movlb	0	; () banked
  4309  001B6E  518C               	movf	scale@scl& (0+255),w,b
  4310  001B70  0A80               	xorlw	128
  4311  001B72  0F75               	addlw	-139
  4312  001B74  A0D8               	btfss	status,0,c
  4313  001B76  D077               	goto	l5802
  4314                           
  4315                           ; BSR set to: 0
  4316                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4317  001B78  0E00               	movlw	0
  4318  001B7A  0100               	movlb	0	; () banked
  4319  001B7C  0100               	movlb	0	; () banked
  4320  001B7E  6F6D               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4321  001B80  0E03               	movlw	3
  4322  001B82  0100               	movlb	0	; () banked
  4323  001B84  6F6C               	movwf	___wmul@multiplicand& (0+255),b
  4324  001B86  0E00               	movlw	0
  4325  001B88  0100               	movlb	0	; () banked
  4326  001B8A  0100               	movlb	0	; () banked
  4327  001B8C  6F65               	movwf	(___awdiv@divisor+1)& (0+255),b
  4328  001B8E  0E0A               	movlw	10
  4329  001B90  0100               	movlb	0	; () banked
  4330  001B92  6F64               	movwf	___awdiv@divisor& (0+255),b
  4331  001B94  0100               	movlb	0	; () banked
  4332  001B96  0100               	movlb	0	; () banked
  4333  001B98  518C               	movf	scale@scl& (0+255),w,b
  4334  001B9A  0100               	movlb	0	; () banked
  4335  001B9C  0100               	movlb	0	; () banked
  4336  001B9E  6F62               	movwf	___awdiv@dividend& (0+255),b
  4337  001BA0  0100               	movlb	0	; () banked
  4338  001BA2  6B63               	clrf	(___awdiv@dividend+1)& (0+255),b
  4339  001BA4  0100               	movlb	0	; () banked
  4340  001BA6  BF62               	btfsc	___awdiv@dividend& (0+255),7,b
  4341  001BA8  0763               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4342  001BAA  EC46  F017         	call	___awdiv	;wreg free
  4343  001BAE  0E09               	movlw	9
  4344  001BB0  0100               	movlb	0	; () banked
  4345  001BB2  0100               	movlb	0	; () banked
  4346  001BB4  2562               	addwf	?___awdiv& (0+255),w,b
  4347  001BB6  0100               	movlb	0	; () banked
  4348  001BB8  0100               	movlb	0	; () banked
  4349  001BBA  6F6A               	movwf	___wmul@multiplier& (0+255),b
  4350  001BBC  0E00               	movlw	0
  4351  001BBE  0100               	movlb	0	; () banked
  4352  001BC0  0100               	movlb	0	; () banked
  4353  001BC2  2163               	addwfc	(?___awdiv+1)& (0+255),w,b
  4354  001BC4  0100               	movlb	0	; () banked
  4355  001BC6  6F6B               	movwf	(___wmul@multiplier+1)& (0+255),b
  4356  001BC8  ECB8  F01B         	call	___wmul	;wreg free
  4357  001BCC  0E50               	movlw	low __powers_
  4358  001BCE  0100               	movlb	0	; () banked
  4359  001BD0  0100               	movlb	0	; () banked
  4360  001BD2  256A               	addwf	?___wmul& (0+255),w,b
  4361  001BD4  6EF6               	movwf	tblptrl,c
  4362  001BD6  0E08               	movlw	high __powers_
  4363  001BD8  0100               	movlb	0	; () banked
  4364  001BDA  216B               	addwfc	(?___wmul+1)& (0+255),w,b
  4365  001BDC  6EF7               	movwf	tblptrh,c
  4366  001BDE  0009               	tblrd		*+
  4367  001BE0  0100               	movlb	0	; () banked
  4368  001BE2  CFF5 F077          	movff	tablat,___ftmul@f1
  4369  001BE6  0009               	tblrd		*+
  4370  001BE8  0100               	movlb	0	; () banked
  4371  001BEA  CFF5 F078          	movff	tablat,___ftmul@f1+1
  4372  001BEE  000A               	tblrd		*-
  4373  001BF0  0100               	movlb	0	; () banked
  4374  001BF2  CFF5 F079          	movff	tablat,___ftmul@f1+2
  4375  001BF6  0E00               	movlw	0
  4376  001BF8  0100               	movlb	0	; () banked
  4377  001BFA  0100               	movlb	0	; () banked
  4378  001BFC  6F6D               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4379  001BFE  0E03               	movlw	3
  4380  001C00  0100               	movlb	0	; () banked
  4381  001C02  6F6C               	movwf	___wmul@multiplicand& (0+255),b
  4382  001C04  0E00               	movlw	0
  4383  001C06  6E30               	movwf	___awmod@divisor+1,c
  4384  001C08  0E0A               	movlw	10
  4385  001C0A  6E2F               	movwf	___awmod@divisor,c
  4386  001C0C  0100               	movlb	0	; () banked
  4387  001C0E  0100               	movlb	0	; () banked
  4388  001C10  518C               	movf	scale@scl& (0+255),w,b
  4389  001C12  6E2D               	movwf	___awmod@dividend,c
  4390  001C14  6A2E               	clrf	___awmod@dividend+1,c
  4391  001C16  BE2D               	btfsc	___awmod@dividend,7,c
  4392  001C18  062E               	decf	___awmod@dividend+1,f,c
  4393  001C1A  EC6E  F019         	call	___awmod	;wreg free
  4394  001C1E  C02D  F06A         	movff	?___awmod,___wmul@multiplier
  4395  001C22  C02E  F06B         	movff	?___awmod+1,___wmul@multiplier+1
  4396  001C26  ECB8  F01B         	call	___wmul	;wreg free
  4397  001C2A  0E50               	movlw	low __powers_
  4398  001C2C  0100               	movlb	0	; () banked
  4399  001C2E  0100               	movlb	0	; () banked
  4400  001C30  256A               	addwf	?___wmul& (0+255),w,b
  4401  001C32  6EF6               	movwf	tblptrl,c
  4402  001C34  0E08               	movlw	high __powers_
  4403  001C36  0100               	movlb	0	; () banked
  4404  001C38  216B               	addwfc	(?___wmul+1)& (0+255),w,b
  4405  001C3A  6EF7               	movwf	tblptrh,c
  4406  001C3C  0009               	tblrd		*+
  4407  001C3E  0100               	movlb	0	; () banked
  4408  001C40  CFF5 F07A          	movff	tablat,___ftmul@f2
  4409  001C44  0009               	tblrd		*+
  4410  001C46  0100               	movlb	0	; () banked
  4411  001C48  CFF5 F07B          	movff	tablat,___ftmul@f2+1
  4412  001C4C  000A               	tblrd		*-
  4413  001C4E  0100               	movlb	0	; () banked
  4414  001C50  CFF5 F07C          	movff	tablat,___ftmul@f2+2
  4415  001C54  EC49  F013         	call	___ftmul	;wreg free
  4416  001C58                     L11:
  4417  001C58  C077  F086         	movff	?___ftmul,?_scale
  4418  001C5C  C078  F087         	movff	?___ftmul+1,?_scale+1
  4419  001C60  C079  F088         	movff	?___ftmul+2,?_scale+2
  4420  001C64  D016               	goto	l397
  4421  001C66                     l5802:
  4422                           
  4423                           ;doprnt.c: 440: return _powers_[scl];
  4424  001C66  0100               	movlb	0	; () banked
  4425  001C68  0100               	movlb	0	; () banked
  4426  001C6A  518C               	movf	scale@scl& (0+255),w,b
  4427  001C6C  0D03               	mullw	3
  4428  001C6E  0E50               	movlw	low __powers_
  4429  001C70  24F3               	addwf	prodl,w,c
  4430  001C72  6EF6               	movwf	tblptrl,c
  4431  001C74  0E08               	movlw	high __powers_
  4432  001C76                     L10:
  4433  001C76  20F4               	addwfc	prodh,w,c
  4434  001C78  6EF7               	movwf	tblptrh,c
  4435  001C7A  0009               	tblrd		*+
  4436  001C7C  0100               	movlb	0	; () banked
  4437  001C7E  CFF5 F086          	movff	tablat,?_scale
  4438  001C82  0009               	tblrd		*+
  4439  001C84  0100               	movlb	0	; () banked
  4440  001C86  CFF5 F087          	movff	tablat,?_scale+1
  4441  001C8A  000A               	tblrd		*-
  4442  001C8C  0100               	movlb	0	; () banked
  4443  001C8E  CFF5 F088          	movff	tablat,?_scale+2
  4444  001C92                     l397:
  4445  001C92  0012               	return	
  4446  001C94                     __end_of_scale:
  4447                           	opt stack 0
  4448                           tblptru	equ	0xFF8
  4449                           tblptrh	equ	0xFF7
  4450                           tblptrl	equ	0xFF6
  4451                           tablat	equ	0xFF5
  4452                           prodh	equ	0xFF4
  4453                           prodl	equ	0xFF3
  4454                           wreg	equ	0xFE8
  4455                           indf1	equ	0xFE7
  4456                           fsr1h	equ	0xFE2
  4457                           fsr1l	equ	0xFE1
  4458                           indf2	equ	0xFDF
  4459                           postinc2	equ	0xFDE
  4460                           postdec2	equ	0xFDD
  4461                           fsr2h	equ	0xFDA
  4462                           fsr2l	equ	0xFD9
  4463                           status	equ	0xFD8
  4464                           
  4465 ;; *************** function _isdigit *****************
  4466 ;; Defined at:
  4467 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\isdigit.c"
  4468 ;; Parameters:    Size  Location     Type
  4469 ;;  c               1    wreg     unsigned char 
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;  c               1   46[COMRAM] unsigned char 
  4472 ;; Return value:  Size  Location     Type
  4473 ;;		None               void
  4474 ;; Registers used:
  4475 ;;		wreg, status,2, status,0
  4476 ;; Tracked objects:
  4477 ;;		On entry : 0/0
  4478 ;;		On exit  : 0/0
  4479 ;;		Unchanged: 0/0
  4480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4481 ;;      Params:         0       0       0       0       0       0       0       0       0
  4482 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4483 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4484 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4485 ;;Total ram usage:        3 bytes
  4486 ;; Hardware stack levels used:    1
  4487 ;; Hardware stack levels required when called:    5
  4488 ;; This function calls:
  4489 ;;		Nothing
  4490 ;; This function is called by:
  4491 ;;		_sprintf
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           	psect	text4
  4496  003A5E                     __ptext4:
  4497                           	opt stack 0
  4498  003A5E                     _isdigit:
  4499                           	opt stack 24
  4500                           
  4501                           ;incstack = 0
  4502                           ;isdigit@c stored from wreg
  4503  003A5E  CFE8 F02F          	movff	wreg,isdigit@c
  4504  003A62  6E2D               	movwf	??_isdigit& (0+255),c
  4505  003A64  0E00               	movlw	0
  4506  003A66  6E2E               	movwf	_isdigit$2095,c
  4507  003A68  502D               	movf	??_isdigit& (0+255),w,c
  4508  003A6A  0E3A               	movlw	58
  4509  003A6C  5C2F               	subwf	isdigit@c,w,c
  4510  003A6E  B0D8               	btfsc	status,0,c
  4511  003A70  D007               	goto	l4608
  4512  003A72  0E2F               	movlw	47
  4513  003A74  642F               	cpfsgt	isdigit@c,c
  4514  003A76  D004               	goto	l4608
  4515  003A78  6E2D               	movwf	??_isdigit& (0+255),c
  4516  003A7A  0E01               	movlw	1
  4517  003A7C  6E2E               	movwf	_isdigit$2095,c
  4518  003A7E  502D               	movf	??_isdigit& (0+255),w,c
  4519  003A80                     l4608:
  4520  003A80  C02E  F02D         	movff	_isdigit$2095,??_isdigit
  4521  003A84  302D               	rrcf	??_isdigit,w,c
  4522  003A86  0012               	return	
  4523  003A88                     __end_of_isdigit:
  4524                           	opt stack 0
  4525                           tblptru	equ	0xFF8
  4526                           tblptrh	equ	0xFF7
  4527                           tblptrl	equ	0xFF6
  4528                           tablat	equ	0xFF5
  4529                           prodh	equ	0xFF4
  4530                           prodl	equ	0xFF3
  4531                           wreg	equ	0xFE8
  4532                           indf1	equ	0xFE7
  4533                           fsr1h	equ	0xFE2
  4534                           fsr1l	equ	0xFE1
  4535                           indf2	equ	0xFDF
  4536                           postinc2	equ	0xFDE
  4537                           postdec2	equ	0xFDD
  4538                           fsr2h	equ	0xFDA
  4539                           fsr2l	equ	0xFD9
  4540                           status	equ	0xFD8
  4541                           
  4542 ;; *************** function _fround *****************
  4543 ;; Defined at:
  4544 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\doprnt.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;  prec            1    wreg     unsigned char 
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;  prec            1   47[BANK0 ] unsigned char 
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  3   38[BANK0 ] unsigned char 
  4551 ;; Registers used:
  4552 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4558 ;;      Params:         0       3       0       0       0       0       0       0       0
  4559 ;;      Locals:         0       7       0       0       0       0       0       0       0
  4560 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4561 ;;      Totals:         0      10       0       0       0       0       0       0       0
  4562 ;;Total ram usage:       10 bytes
  4563 ;; Hardware stack levels used:    1
  4564 ;; Hardware stack levels required when called:    7
  4565 ;; This function calls:
  4566 ;;		___awdiv
  4567 ;;		___awmod
  4568 ;;		___ftmul
  4569 ;;		___wmul
  4570 ;; This function is called by:
  4571 ;;		_sprintf
  4572 ;; This function uses a non-reentrant model
  4573 ;;
  4574                           
  4575                           	psect	text5
  4576  002374                     __ptext5:
  4577                           	opt stack 0
  4578  002374                     _fround:
  4579                           	opt stack 22
  4580                           
  4581                           ;incstack = 0
  4582                           ;fround@prec stored from wreg
  4583  002374  CFE8 F08F          	movff	wreg,fround@prec
  4584                           
  4585                           ;doprnt.c: 413: if(prec>=110)
  4586  002378  0E6D               	movlw	109
  4587  00237A  0100               	movlb	0	; () banked
  4588  00237C  0100               	movlb	0	; () banked
  4589  00237E  658F               	cpfsgt	fround@prec& (0+255),b
  4590  002380  D0D4               	goto	l5756
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4594  002382  0E00               	movlw	0
  4595  002384  0100               	movlb	0	; () banked
  4596  002386  0100               	movlb	0	; () banked
  4597  002388  6F6D               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4598  00238A  0E03               	movlw	3
  4599  00238C  0100               	movlb	0	; () banked
  4600  00238E  6F6C               	movwf	___wmul@multiplicand& (0+255),b
  4601  002390  0E00               	movlw	0
  4602  002392  0100               	movlb	0	; () banked
  4603  002394  0100               	movlb	0	; () banked
  4604  002396  6F65               	movwf	(___awdiv@divisor+1)& (0+255),b
  4605  002398  0E0A               	movlw	10
  4606  00239A  0100               	movlb	0	; () banked
  4607  00239C  6F64               	movwf	___awdiv@divisor& (0+255),b
  4608  00239E  0E00               	movlw	0
  4609  0023A0  6E30               	movwf	___awmod@divisor+1,c
  4610  0023A2  0E64               	movlw	100
  4611  0023A4  6E2F               	movwf	___awmod@divisor,c
  4612  0023A6  0100               	movlb	0	; () banked
  4613  0023A8  C08F  F02D         	movff	fround@prec,___awmod@dividend
  4614  0023AC  6A2E               	clrf	___awmod@dividend+1,c
  4615  0023AE  EC6E  F019         	call	___awmod	;wreg free
  4616  0023B2  C02D  F062         	movff	?___awmod,___awdiv@dividend
  4617  0023B6  C02E  F063         	movff	?___awmod+1,___awdiv@dividend+1
  4618  0023BA  EC46  F017         	call	___awdiv	;wreg free
  4619  0023BE  0E09               	movlw	9
  4620  0023C0  0100               	movlb	0	; () banked
  4621  0023C2  0100               	movlb	0	; () banked
  4622  0023C4  2562               	addwf	?___awdiv& (0+255),w,b
  4623  0023C6  0100               	movlb	0	; () banked
  4624  0023C8  0100               	movlb	0	; () banked
  4625  0023CA  6F6A               	movwf	___wmul@multiplier& (0+255),b
  4626  0023CC  0E00               	movlw	0
  4627  0023CE  0100               	movlb	0	; () banked
  4628  0023D0  0100               	movlb	0	; () banked
  4629  0023D2  2163               	addwfc	(?___awdiv+1)& (0+255),w,b
  4630  0023D4  0100               	movlb	0	; () banked
  4631  0023D6  6F6B               	movwf	(___wmul@multiplier+1)& (0+255),b
  4632  0023D8  ECB8  F01B         	call	___wmul	;wreg free
  4633  0023DC  0E29               	movlw	low __npowers_
  4634  0023DE  0100               	movlb	0	; () banked
  4635  0023E0  0100               	movlb	0	; () banked
  4636  0023E2  256A               	addwf	?___wmul& (0+255),w,b
  4637  0023E4  6EF6               	movwf	tblptrl,c
  4638  0023E6  0E08               	movlw	high __npowers_
  4639  0023E8  0100               	movlb	0	; () banked
  4640  0023EA  216B               	addwfc	(?___wmul+1)& (0+255),w,b
  4641  0023EC  6EF7               	movwf	tblptrh,c
  4642  0023EE  0009               	tblrd		*+
  4643  0023F0  0100               	movlb	0	; () banked
  4644  0023F2  CFF5 F07A          	movff	tablat,___ftmul@f2
  4645  0023F6  0009               	tblrd		*+
  4646  0023F8  0100               	movlb	0	; () banked
  4647  0023FA  CFF5 F07B          	movff	tablat,___ftmul@f2+1
  4648  0023FE  000A               	tblrd		*-
  4649  002400  0100               	movlb	0	; () banked
  4650  002402  CFF5 F07C          	movff	tablat,___ftmul@f2+2
  4651  002406  0E00               	movlw	0
  4652  002408  0100               	movlb	0	; () banked
  4653  00240A  0100               	movlb	0	; () banked
  4654  00240C  6F6D               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4655  00240E  0E03               	movlw	3
  4656  002410  0100               	movlb	0	; () banked
  4657  002412  6F6C               	movwf	___wmul@multiplicand& (0+255),b
  4658  002414  0E00               	movlw	0
  4659  002416  0100               	movlb	0	; () banked
  4660  002418  0100               	movlb	0	; () banked
  4661  00241A  6F65               	movwf	(___awdiv@divisor+1)& (0+255),b
  4662  00241C  0E64               	movlw	100
  4663  00241E  0100               	movlb	0	; () banked
  4664  002420  6F64               	movwf	___awdiv@divisor& (0+255),b
  4665  002422  0100               	movlb	0	; () banked
  4666  002424  0100               	movlb	0	; () banked
  4667  002426  C08F  F062         	movff	fround@prec,___awdiv@dividend
  4668  00242A  0100               	movlb	0	; () banked
  4669  00242C  0100               	movlb	0	; () banked
  4670  00242E  6B63               	clrf	(___awdiv@dividend+1)& (0+255),b
  4671  002430  EC46  F017         	call	___awdiv	;wreg free
  4672  002434  0E12               	movlw	18
  4673  002436  0100               	movlb	0	; () banked
  4674  002438  0100               	movlb	0	; () banked
  4675  00243A  2562               	addwf	?___awdiv& (0+255),w,b
  4676  00243C  0100               	movlb	0	; () banked
  4677  00243E  0100               	movlb	0	; () banked
  4678  002440  6F6A               	movwf	___wmul@multiplier& (0+255),b
  4679  002442  0E00               	movlw	0
  4680  002444  0100               	movlb	0	; () banked
  4681  002446  0100               	movlb	0	; () banked
  4682  002448  2163               	addwfc	(?___awdiv+1)& (0+255),w,b
  4683  00244A  0100               	movlb	0	; () banked
  4684  00244C  6F6B               	movwf	(___wmul@multiplier+1)& (0+255),b
  4685  00244E  ECB8  F01B         	call	___wmul	;wreg free
  4686  002452  0E29               	movlw	low __npowers_
  4687  002454  0100               	movlb	0	; () banked
  4688  002456  0100               	movlb	0	; () banked
  4689  002458  256A               	addwf	?___wmul& (0+255),w,b
  4690  00245A  6EF6               	movwf	tblptrl,c
  4691  00245C  0E08               	movlw	high __npowers_
  4692  00245E  0100               	movlb	0	; () banked
  4693  002460  216B               	addwfc	(?___wmul+1)& (0+255),w,b
  4694  002462  6EF7               	movwf	tblptrh,c
  4695  002464  0009               	tblrd		*+
  4696  002466  0100               	movlb	0	; () banked
  4697  002468  CFF5 F077          	movff	tablat,___ftmul@f1
  4698  00246C  0009               	tblrd		*+
  4699  00246E  0100               	movlb	0	; () banked
  4700  002470  CFF5 F078          	movff	tablat,___ftmul@f1+1
  4701  002474  000A               	tblrd		*-
  4702  002476  0100               	movlb	0	; () banked
  4703  002478  CFF5 F079          	movff	tablat,___ftmul@f1+2
  4704  00247C  EC49  F013         	call	___ftmul	;wreg free
  4705  002480  C077  F08C         	movff	?___ftmul,_fround$2467
  4706  002484  C078  F08D         	movff	?___ftmul+1,_fround$2467+1
  4707  002488  C079  F08E         	movff	?___ftmul+2,_fround$2467+2
  4708                           
  4709                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4710  00248C  0E00               	movlw	0
  4711  00248E  0100               	movlb	0	; () banked
  4712  002490  0100               	movlb	0	; () banked
  4713  002492  6F6D               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4714  002494  0E03               	movlw	3
  4715  002496  0100               	movlb	0	; () banked
  4716  002498  6F6C               	movwf	___wmul@multiplicand& (0+255),b
  4717  00249A  0E00               	movlw	0
  4718  00249C  6E30               	movwf	___awmod@divisor+1,c
  4719  00249E  0E0A               	movlw	10
  4720  0024A0  6E2F               	movwf	___awmod@divisor,c
  4721  0024A2  0100               	movlb	0	; () banked
  4722  0024A4  C08F  F02D         	movff	fround@prec,___awmod@dividend
  4723  0024A8  6A2E               	clrf	___awmod@dividend+1,c
  4724  0024AA  EC6E  F019         	call	___awmod	;wreg free
  4725  0024AE  C02D  F06A         	movff	?___awmod,___wmul@multiplier
  4726  0024B2  C02E  F06B         	movff	?___awmod+1,___wmul@multiplier+1
  4727  0024B6  ECB8  F01B         	call	___wmul	;wreg free
  4728  0024BA  0E29               	movlw	low __npowers_
  4729  0024BC  0100               	movlb	0	; () banked
  4730  0024BE  0100               	movlb	0	; () banked
  4731  0024C0  256A               	addwf	?___wmul& (0+255),w,b
  4732  0024C2  6EF6               	movwf	tblptrl,c
  4733  0024C4  0E08               	movlw	high __npowers_
  4734  0024C6  0100               	movlb	0	; () banked
  4735  0024C8  216B               	addwfc	(?___wmul+1)& (0+255),w,b
  4736  0024CA  6EF7               	movwf	tblptrh,c
  4737  0024CC  0009               	tblrd		*+
  4738  0024CE  0100               	movlb	0	; () banked
  4739  0024D0  CFF5 F07A          	movff	tablat,___ftmul@f2
  4740  0024D4  0009               	tblrd		*+
  4741  0024D6  0100               	movlb	0	; () banked
  4742  0024D8  CFF5 F07B          	movff	tablat,___ftmul@f2+1
  4743  0024DC  000A               	tblrd		*-
  4744  0024DE  0100               	movlb	0	; () banked
  4745  0024E0  CFF5 F07C          	movff	tablat,___ftmul@f2+2
  4746  0024E4  C08C  F077         	movff	_fround$2467,___ftmul@f1
  4747  0024E8  C08D  F078         	movff	_fround$2467+1,___ftmul@f1+1
  4748  0024EC  C08E  F079         	movff	_fround$2467+2,___ftmul@f1+2
  4749  0024F0  EC49  F013         	call	___ftmul	;wreg free
  4750  0024F4  C077  F089         	movff	?___ftmul,_fround$2468
  4751  0024F8  C078  F08A         	movff	?___ftmul+1,_fround$2468+1
  4752  0024FC  C079  F08B         	movff	?___ftmul+2,_fround$2468+2
  4753                           
  4754                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4755  002500  C089  F077         	movff	_fround$2468,___ftmul@f1
  4756  002504  C08A  F078         	movff	_fround$2468+1,___ftmul@f1+1
  4757  002508  C08B  F079         	movff	_fround$2468+2,___ftmul@f1+2
  4758  00250C  0E00               	movlw	0
  4759  00250E  0100               	movlb	0	; () banked
  4760  002510  0100               	movlb	0	; () banked
  4761  002512  6F7A               	movwf	___ftmul@f2& (0+255),b
  4762  002514  0E00               	movlw	0
  4763  002516  0100               	movlb	0	; () banked
  4764  002518  0100               	movlb	0	; () banked
  4765  00251A  6F7B               	movwf	(___ftmul@f2+1)& (0+255),b
  4766  00251C  0E3F               	movlw	63
  4767  00251E  0100               	movlb	0	; () banked
  4768  002520  0100               	movlb	0	; () banked
  4769  002522  6F7C               	movwf	(___ftmul@f2+2)& (0+255),b
  4770  002524  EC49  F013         	call	___ftmul	;wreg free
  4771  002528  D0AD               	goto	L13
  4772  00252A                     l5756:
  4773                           
  4774                           ;doprnt.c: 415: else if(prec > 10)
  4775  00252A  0E0A               	movlw	10
  4776  00252C  0100               	movlb	0	; () banked
  4777  00252E  0100               	movlb	0	; () banked
  4778  002530  658F               	cpfsgt	fround@prec& (0+255),b
  4779  002532  D084               	goto	l5764
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4783  002534  0E00               	movlw	0
  4784  002536  0100               	movlb	0	; () banked
  4785  002538  0100               	movlb	0	; () banked
  4786  00253A  6F6D               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4787  00253C  0E03               	movlw	3
  4788  00253E  0100               	movlb	0	; () banked
  4789  002540  6F6C               	movwf	___wmul@multiplicand& (0+255),b
  4790  002542  0E00               	movlw	0
  4791  002544  6E30               	movwf	___awmod@divisor+1,c
  4792  002546  0E0A               	movlw	10
  4793  002548  6E2F               	movwf	___awmod@divisor,c
  4794  00254A  0100               	movlb	0	; () banked
  4795  00254C  C08F  F02D         	movff	fround@prec,___awmod@dividend
  4796  002550  6A2E               	clrf	___awmod@dividend+1,c
  4797  002552  EC6E  F019         	call	___awmod	;wreg free
  4798  002556  C02D  F06A         	movff	?___awmod,___wmul@multiplier
  4799  00255A  C02E  F06B         	movff	?___awmod+1,___wmul@multiplier+1
  4800  00255E  ECB8  F01B         	call	___wmul	;wreg free
  4801  002562  0E29               	movlw	low __npowers_
  4802  002564  0100               	movlb	0	; () banked
  4803  002566  0100               	movlb	0	; () banked
  4804  002568  256A               	addwf	?___wmul& (0+255),w,b
  4805  00256A  6EF6               	movwf	tblptrl,c
  4806  00256C  0E08               	movlw	high __npowers_
  4807  00256E  0100               	movlb	0	; () banked
  4808  002570  216B               	addwfc	(?___wmul+1)& (0+255),w,b
  4809  002572  6EF7               	movwf	tblptrh,c
  4810  002574  0009               	tblrd		*+
  4811  002576  0100               	movlb	0	; () banked
  4812  002578  CFF5 F07A          	movff	tablat,___ftmul@f2
  4813  00257C  0009               	tblrd		*+
  4814  00257E  0100               	movlb	0	; () banked
  4815  002580  CFF5 F07B          	movff	tablat,___ftmul@f2+1
  4816  002584  000A               	tblrd		*-
  4817  002586  0100               	movlb	0	; () banked
  4818  002588  CFF5 F07C          	movff	tablat,___ftmul@f2+2
  4819  00258C  0E00               	movlw	0
  4820  00258E  0100               	movlb	0	; () banked
  4821  002590  0100               	movlb	0	; () banked
  4822  002592  6F6D               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4823  002594  0E03               	movlw	3
  4824  002596  0100               	movlb	0	; () banked
  4825  002598  6F6C               	movwf	___wmul@multiplicand& (0+255),b
  4826  00259A  0E00               	movlw	0
  4827  00259C  0100               	movlb	0	; () banked
  4828  00259E  0100               	movlb	0	; () banked
  4829  0025A0  6F65               	movwf	(___awdiv@divisor+1)& (0+255),b
  4830  0025A2  0E0A               	movlw	10
  4831  0025A4  0100               	movlb	0	; () banked
  4832  0025A6  6F64               	movwf	___awdiv@divisor& (0+255),b
  4833  0025A8  0100               	movlb	0	; () banked
  4834  0025AA  0100               	movlb	0	; () banked
  4835  0025AC  C08F  F062         	movff	fround@prec,___awdiv@dividend
  4836  0025B0  0100               	movlb	0	; () banked
  4837  0025B2  0100               	movlb	0	; () banked
  4838  0025B4  6B63               	clrf	(___awdiv@dividend+1)& (0+255),b
  4839  0025B6  EC46  F017         	call	___awdiv	;wreg free
  4840  0025BA  0E09               	movlw	9
  4841  0025BC  0100               	movlb	0	; () banked
  4842  0025BE  0100               	movlb	0	; () banked
  4843  0025C0  2562               	addwf	?___awdiv& (0+255),w,b
  4844  0025C2  0100               	movlb	0	; () banked
  4845  0025C4  0100               	movlb	0	; () banked
  4846  0025C6  6F6A               	movwf	___wmul@multiplier& (0+255),b
  4847  0025C8  0E00               	movlw	0
  4848  0025CA  0100               	movlb	0	; () banked
  4849  0025CC  0100               	movlb	0	; () banked
  4850  0025CE  2163               	addwfc	(?___awdiv+1)& (0+255),w,b
  4851  0025D0  0100               	movlb	0	; () banked
  4852  0025D2  6F6B               	movwf	(___wmul@multiplier+1)& (0+255),b
  4853  0025D4  ECB8  F01B         	call	___wmul	;wreg free
  4854  0025D8  0E29               	movlw	low __npowers_
  4855  0025DA  0100               	movlb	0	; () banked
  4856  0025DC  0100               	movlb	0	; () banked
  4857  0025DE  256A               	addwf	?___wmul& (0+255),w,b
  4858  0025E0  6EF6               	movwf	tblptrl,c
  4859  0025E2  0E08               	movlw	high __npowers_
  4860  0025E4  0100               	movlb	0	; () banked
  4861  0025E6  216B               	addwfc	(?___wmul+1)& (0+255),w,b
  4862  0025E8  6EF7               	movwf	tblptrh,c
  4863  0025EA  0009               	tblrd		*+
  4864  0025EC  0100               	movlb	0	; () banked
  4865  0025EE  CFF5 F077          	movff	tablat,___ftmul@f1
  4866  0025F2  0009               	tblrd		*+
  4867  0025F4  0100               	movlb	0	; () banked
  4868  0025F6  CFF5 F078          	movff	tablat,___ftmul@f1+1
  4869  0025FA  000A               	tblrd		*-
  4870  0025FC  0100               	movlb	0	; () banked
  4871  0025FE  CFF5 F079          	movff	tablat,___ftmul@f1+2
  4872  002602  EC49  F013         	call	___ftmul	;wreg free
  4873  002606  C077  F08C         	movff	?___ftmul,_fround$2467
  4874  00260A  C078  F08D         	movff	?___ftmul+1,_fround$2467+1
  4875  00260E  C079  F08E         	movff	?___ftmul+2,_fround$2467+2
  4876                           
  4877                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4878  002612  C08C  F077         	movff	_fround$2467,___ftmul@f1
  4879  002616  C08D  F078         	movff	_fround$2467+1,___ftmul@f1+1
  4880  00261A  C08E  F079         	movff	_fround$2467+2,___ftmul@f1+2
  4881  00261E  0E00               	movlw	0
  4882  002620  0100               	movlb	0	; () banked
  4883  002622  0100               	movlb	0	; () banked
  4884  002624  6F7A               	movwf	___ftmul@f2& (0+255),b
  4885  002626  0E00               	movlw	0
  4886  002628  0100               	movlb	0	; () banked
  4887  00262A  0100               	movlb	0	; () banked
  4888  00262C  6F7B               	movwf	(___ftmul@f2+1)& (0+255),b
  4889  00262E  0E3F               	movlw	63
  4890  002630  0100               	movlb	0	; () banked
  4891  002632  0100               	movlb	0	; () banked
  4892  002634  6F7C               	movwf	(___ftmul@f2+2)& (0+255),b
  4893  002636  EC49  F013         	call	___ftmul	;wreg free
  4894  00263A  D024               	goto	L13
  4895  00263C                     l5764:
  4896                           
  4897                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  4898  00263C  0100               	movlb	0	; () banked
  4899  00263E  0100               	movlb	0	; () banked
  4900  002640  518F               	movf	fround@prec& (0+255),w,b
  4901  002642  0D03               	mullw	3
  4902  002644  0E29               	movlw	low __npowers_
  4903  002646  24F3               	addwf	prodl,w,c
  4904  002648  6EF6               	movwf	tblptrl,c
  4905  00264A  0E08               	movlw	high __npowers_
  4906  00264C  20F4               	addwfc	prodh,w,c
  4907  00264E  6EF7               	movwf	tblptrh,c
  4908  002650  0009               	tblrd		*+
  4909  002652  0100               	movlb	0	; () banked
  4910  002654  CFF5 F077          	movff	tablat,___ftmul@f1
  4911  002658  0009               	tblrd		*+
  4912  00265A  0100               	movlb	0	; () banked
  4913  00265C  CFF5 F078          	movff	tablat,___ftmul@f1+1
  4914  002660  000A               	tblrd		*-
  4915  002662  0100               	movlb	0	; () banked
  4916  002664  CFF5 F079          	movff	tablat,___ftmul@f1+2
  4917  002668  0E00               	movlw	0
  4918  00266A  0100               	movlb	0	; () banked
  4919  00266C  0100               	movlb	0	; () banked
  4920  00266E  6F7A               	movwf	___ftmul@f2& (0+255),b
  4921  002670  0E00               	movlw	0
  4922  002672  0100               	movlb	0	; () banked
  4923  002674  0100               	movlb	0	; () banked
  4924  002676  6F7B               	movwf	(___ftmul@f2+1)& (0+255),b
  4925  002678  0E3F               	movlw	63
  4926  00267A  0100               	movlb	0	; () banked
  4927  00267C  0100               	movlb	0	; () banked
  4928  00267E  6F7C               	movwf	(___ftmul@f2+2)& (0+255),b
  4929  002680  EC49  F013         	call	___ftmul	;wreg free
  4930  002684                     L13:
  4931  002684  C077  F086         	movff	?___ftmul,?_fround
  4932  002688  C078  F087         	movff	?___ftmul+1,?_fround+1
  4933  00268C  C079  F088         	movff	?___ftmul+2,?_fround+2
  4934  002690  0012               	return	
  4935  002692                     __end_of_fround:
  4936                           	opt stack 0
  4937                           tblptru	equ	0xFF8
  4938                           tblptrh	equ	0xFF7
  4939                           tblptrl	equ	0xFF6
  4940                           tablat	equ	0xFF5
  4941                           prodh	equ	0xFF4
  4942                           prodl	equ	0xFF3
  4943                           wreg	equ	0xFE8
  4944                           indf1	equ	0xFE7
  4945                           fsr1h	equ	0xFE2
  4946                           fsr1l	equ	0xFE1
  4947                           indf2	equ	0xFDF
  4948                           postinc2	equ	0xFDE
  4949                           postdec2	equ	0xFDD
  4950                           fsr2h	equ	0xFDA
  4951                           fsr2l	equ	0xFD9
  4952                           status	equ	0xFD8
  4953                           
  4954 ;; *************** function ___wmul *****************
  4955 ;; Defined at:
  4956 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\wmul.c"
  4957 ;; Parameters:    Size  Location     Type
  4958 ;;  multiplier      2   10[BANK0 ] unsigned int 
  4959 ;;  multiplicand    2   12[BANK0 ] unsigned int 
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;  product         2   14[BANK0 ] unsigned int 
  4962 ;; Return value:  Size  Location     Type
  4963 ;;                  2   10[BANK0 ] unsigned int 
  4964 ;; Registers used:
  4965 ;;		wreg, status,2, status,0, prodl, prodh
  4966 ;; Tracked objects:
  4967 ;;		On entry : 0/0
  4968 ;;		On exit  : 0/0
  4969 ;;		Unchanged: 0/0
  4970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4971 ;;      Params:         0       4       0       0       0       0       0       0       0
  4972 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4973 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4974 ;;      Totals:         0       6       0       0       0       0       0       0       0
  4975 ;;Total ram usage:        6 bytes
  4976 ;; Hardware stack levels used:    1
  4977 ;; Hardware stack levels required when called:    5
  4978 ;; This function calls:
  4979 ;;		Nothing
  4980 ;; This function is called by:
  4981 ;;		_fround
  4982 ;;		_scale
  4983 ;;		_sprintf
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           
  4987                           	psect	text6
  4988  003770                     __ptext6:
  4989                           	opt stack 0
  4990  003770                     ___wmul:
  4991                           	opt stack 23
  4992                           
  4993                           ;incstack = 0
  4994  003770  0100               	movlb	0	; () banked
  4995  003772  0100               	movlb	0	; () banked
  4996  003774  516A               	movf	___wmul@multiplier& (0+255),w,b
  4997  003776  0100               	movlb	0	; () banked
  4998  003778  0100               	movlb	0	; () banked
  4999  00377A  036C               	mulwf	___wmul@multiplicand& (0+255),b
  5000  00377C  CFF3 F06E          	movff	prodl,___wmul@product
  5001  003780  CFF4 F06F          	movff	prodh,___wmul@product+1
  5002  003784  0100               	movlb	0	; () banked
  5003  003786  0100               	movlb	0	; () banked
  5004  003788  516A               	movf	___wmul@multiplier& (0+255),w,b
  5005  00378A  0100               	movlb	0	; () banked
  5006  00378C  0100               	movlb	0	; () banked
  5007  00378E  036D               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5008  003790  CFF3 FFF4          	movff	prodl,prodh
  5009  003794  6AF3               	clrf	prodl,c
  5010  003796  50F3               	movf	prodl,w,c
  5011  003798  0100               	movlb	0	; () banked
  5012  00379A  0100               	movlb	0	; () banked
  5013  00379C  276E               	addwf	___wmul@product& (0+255),f,b
  5014  00379E  50F4               	movf	prodh,w,c
  5015  0037A0  0100               	movlb	0	; () banked
  5016  0037A2  0100               	movlb	0	; () banked
  5017  0037A4  236F               	addwfc	(___wmul@product+1)& (0+255),f,b
  5018  0037A6  0100               	movlb	0	; () banked
  5019  0037A8  0100               	movlb	0	; () banked
  5020  0037AA  516B               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5021  0037AC  0100               	movlb	0	; () banked
  5022  0037AE  0100               	movlb	0	; () banked
  5023  0037B0  036C               	mulwf	___wmul@multiplicand& (0+255),b
  5024  0037B2  CFF3 FFF4          	movff	prodl,prodh
  5025  0037B6  6AF3               	clrf	prodl,c
  5026  0037B8  50F3               	movf	prodl,w,c
  5027  0037BA  0100               	movlb	0	; () banked
  5028  0037BC  0100               	movlb	0	; () banked
  5029  0037BE  276E               	addwf	___wmul@product& (0+255),f,b
  5030  0037C0  50F4               	movf	prodh,w,c
  5031  0037C2  0100               	movlb	0	; () banked
  5032  0037C4  0100               	movlb	0	; () banked
  5033  0037C6  236F               	addwfc	(___wmul@product+1)& (0+255),f,b
  5034                           
  5035                           ; BSR set to: 0
  5036  0037C8  C06E  F06A         	movff	___wmul@product,?___wmul
  5037  0037CC  C06F  F06B         	movff	___wmul@product+1,?___wmul+1
  5038                           
  5039                           ; BSR set to: 0
  5040                           
  5041                           ; BSR set to: 0
  5042  0037D0  0012               	return	
  5043  0037D2                     __end_of___wmul:
  5044                           	opt stack 0
  5045                           tblptru	equ	0xFF8
  5046                           tblptrh	equ	0xFF7
  5047                           tblptrl	equ	0xFF6
  5048                           tablat	equ	0xFF5
  5049                           prodh	equ	0xFF4
  5050                           prodl	equ	0xFF3
  5051                           wreg	equ	0xFE8
  5052                           indf1	equ	0xFE7
  5053                           fsr1h	equ	0xFE2
  5054                           fsr1l	equ	0xFE1
  5055                           indf2	equ	0xFDF
  5056                           postinc2	equ	0xFDE
  5057                           postdec2	equ	0xFDD
  5058                           fsr2h	equ	0xFDA
  5059                           fsr2l	equ	0xFD9
  5060                           status	equ	0xFD8
  5061                           
  5062 ;; *************** function ___awmod *****************
  5063 ;; Defined at:
  5064 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  5065 ;; Parameters:    Size  Location     Type
  5066 ;;  dividend        2   44[COMRAM] int 
  5067 ;;  divisor         2   46[COMRAM] int 
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;  sign            1    1[BANK0 ] unsigned char 
  5070 ;;  counter         1    0[BANK0 ] unsigned char 
  5071 ;; Return value:  Size  Location     Type
  5072 ;;                  2   44[COMRAM] int 
  5073 ;; Registers used:
  5074 ;;		wreg, status,2, status,0, prodl
  5075 ;; Tracked objects:
  5076 ;;		On entry : 0/0
  5077 ;;		On exit  : 0/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5080 ;;      Params:         4       0       0       0       0       0       0       0       0
  5081 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5082 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5083 ;;      Totals:         5       2       0       0       0       0       0       0       0
  5084 ;;Total ram usage:        7 bytes
  5085 ;; Hardware stack levels used:    1
  5086 ;; Hardware stack levels required when called:    5
  5087 ;; This function calls:
  5088 ;;		Nothing
  5089 ;; This function is called by:
  5090 ;;		_fround
  5091 ;;		_scale
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           	psect	text7
  5096  0032DC                     __ptext7:
  5097                           	opt stack 0
  5098  0032DC                     ___awmod:
  5099                           	opt stack 23
  5100                           
  5101                           ; BSR set to: 0
  5102                           ;incstack = 0
  5103  0032DC  6E31               	movwf	??___awmod& (0+255),c
  5104  0032DE  0E00               	movlw	0
  5105  0032E0  0100               	movlb	0	; () banked
  5106  0032E2  0100               	movlb	0	; () banked
  5107  0032E4  6F61               	movwf	___awmod@sign& (0+255),b
  5108  0032E6  5031               	movf	??___awmod& (0+255),w,c
  5109                           
  5110                           ; BSR set to: 0
  5111  0032E8  502E               	movf	___awmod@dividend+1,w,c
  5112  0032EA  0A80               	xorlw	128
  5113  0032EC  6EF3               	movwf	prodl,c
  5114  0032EE  0E80               	movlw	128
  5115  0032F0  5CF3               	subwf	prodl,w,c
  5116  0032F2  0E00               	movlw	0
  5117  0032F4  B4D8               	btfsc	status,2,c
  5118  0032F6  5C2D               	subwf	___awmod@dividend,w,c
  5119  0032F8  B0D8               	btfsc	status,0,c
  5120  0032FA  D00A               	goto	l5858
  5121                           
  5122                           ; BSR set to: 0
  5123  0032FC  6C2D               	negf	___awmod@dividend,c
  5124  0032FE  1E2E               	comf	___awmod@dividend+1,f,c
  5125  003300  B0D8               	btfsc	status,0,c
  5126  003302  2A2E               	incf	___awmod@dividend+1,f,c
  5127                           
  5128                           ; BSR set to: 0
  5129  003304  6E31               	movwf	??___awmod& (0+255),c
  5130  003306  0E01               	movlw	1
  5131  003308  0100               	movlb	0	; () banked
  5132  00330A  0100               	movlb	0	; () banked
  5133  00330C  6F61               	movwf	___awmod@sign& (0+255),b
  5134  00330E  5031               	movf	??___awmod& (0+255),w,c
  5135  003310                     l5858:
  5136                           
  5137                           ; BSR set to: 0
  5138  003310  5030               	movf	___awmod@divisor+1,w,c
  5139  003312  0A80               	xorlw	128
  5140  003314  6EF3               	movwf	prodl,c
  5141  003316  0E80               	movlw	128
  5142  003318  5CF3               	subwf	prodl,w,c
  5143  00331A  0E00               	movlw	0
  5144  00331C  B4D8               	btfsc	status,2,c
  5145  00331E  5C2F               	subwf	___awmod@divisor,w,c
  5146  003320  B0D8               	btfsc	status,0,c
  5147  003322  D004               	goto	l5862
  5148                           
  5149                           ; BSR set to: 0
  5150  003324  6C2F               	negf	___awmod@divisor,c
  5151  003326  1E30               	comf	___awmod@divisor+1,f,c
  5152  003328  B0D8               	btfsc	status,0,c
  5153  00332A  2A30               	incf	___awmod@divisor+1,f,c
  5154  00332C                     l5862:
  5155                           
  5156                           ; BSR set to: 0
  5157  00332C  5030               	movf	___awmod@divisor+1,w,c
  5158  00332E  102F               	iorwf	___awmod@divisor,w,c
  5159  003330  B4D8               	btfsc	status,2,c
  5160  003332  D020               	goto	l5878
  5161                           
  5162                           ; BSR set to: 0
  5163  003334  6E31               	movwf	??___awmod& (0+255),c
  5164  003336  0E01               	movlw	1
  5165  003338  0100               	movlb	0	; () banked
  5166  00333A  0100               	movlb	0	; () banked
  5167  00333C  6F60               	movwf	___awmod@counter& (0+255),b
  5168  00333E  5031               	movf	??___awmod& (0+255),w,c
  5169  003340  D006               	goto	l5868
  5170  003342                     l5866:
  5171                           
  5172                           ; BSR set to: 0
  5173  003342  90D8               	bcf	status,0,c
  5174  003344  362F               	rlcf	___awmod@divisor,f,c
  5175  003346  3630               	rlcf	___awmod@divisor+1,f,c
  5176  003348  0100               	movlb	0	; () banked
  5177  00334A  0100               	movlb	0	; () banked
  5178  00334C  2B60               	incf	___awmod@counter& (0+255),f,b
  5179  00334E                     l5868:
  5180                           
  5181                           ; BSR set to: 0
  5182  00334E  AE30               	btfss	___awmod@divisor+1,7,c
  5183  003350  D7F8               	goto	l5866
  5184  003352                     l5870:
  5185                           
  5186                           ; BSR set to: 0
  5187  003352  502F               	movf	___awmod@divisor,w,c
  5188  003354  5C2D               	subwf	___awmod@dividend,w,c
  5189  003356  5030               	movf	___awmod@divisor+1,w,c
  5190  003358  582E               	subwfb	___awmod@dividend+1,w,c
  5191  00335A  A0D8               	btfss	status,0,c
  5192  00335C  D004               	goto	l5874
  5193                           
  5194                           ; BSR set to: 0
  5195  00335E  502F               	movf	___awmod@divisor,w,c
  5196  003360  5E2D               	subwf	___awmod@dividend,f,c
  5197  003362  5030               	movf	___awmod@divisor+1,w,c
  5198  003364  5A2E               	subwfb	___awmod@dividend+1,f,c
  5199  003366                     l5874:
  5200                           
  5201                           ; BSR set to: 0
  5202  003366  90D8               	bcf	status,0,c
  5203  003368  3230               	rrcf	___awmod@divisor+1,f,c
  5204  00336A  322F               	rrcf	___awmod@divisor,f,c
  5205                           
  5206                           ; BSR set to: 0
  5207  00336C  0100               	movlb	0	; () banked
  5208  00336E  0100               	movlb	0	; () banked
  5209  003370  2F60               	decfsz	___awmod@counter& (0+255),f,b
  5210  003372  D7EF               	goto	l5870
  5211  003374                     l5878:
  5212                           
  5213                           ; BSR set to: 0
  5214  003374  0100               	movlb	0	; () banked
  5215  003376  0100               	movlb	0	; () banked
  5216  003378  5161               	movf	___awmod@sign& (0+255),w,b
  5217  00337A  B4D8               	btfsc	status,2,c
  5218  00337C  D004               	goto	l5882
  5219                           
  5220                           ; BSR set to: 0
  5221  00337E  6C2D               	negf	___awmod@dividend,c
  5222  003380  1E2E               	comf	___awmod@dividend+1,f,c
  5223  003382  B0D8               	btfsc	status,0,c
  5224  003384  2A2E               	incf	___awmod@dividend+1,f,c
  5225  003386                     l5882:
  5226                           
  5227                           ; BSR set to: 0
  5228  003386  C02D  F02D         	movff	___awmod@dividend,?___awmod
  5229  00338A  C02E  F02E         	movff	___awmod@dividend+1,?___awmod+1
  5230                           
  5231                           ; BSR set to: 0
  5232                           
  5233                           ; BSR set to: 0
  5234  00338E  0012               	return	
  5235  003390                     __end_of___awmod:
  5236                           	opt stack 0
  5237                           tblptru	equ	0xFF8
  5238                           tblptrh	equ	0xFF7
  5239                           tblptrl	equ	0xFF6
  5240                           tablat	equ	0xFF5
  5241                           prodh	equ	0xFF4
  5242                           prodl	equ	0xFF3
  5243                           wreg	equ	0xFE8
  5244                           indf1	equ	0xFE7
  5245                           fsr1h	equ	0xFE2
  5246                           fsr1l	equ	0xFE1
  5247                           indf2	equ	0xFDF
  5248                           postinc2	equ	0xFDE
  5249                           postdec2	equ	0xFDD
  5250                           fsr2h	equ	0xFDA
  5251                           fsr2l	equ	0xFD9
  5252                           status	equ	0xFD8
  5253                           
  5254 ;; *************** function ___awdiv *****************
  5255 ;; Defined at:
  5256 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awdiv.c"
  5257 ;; Parameters:    Size  Location     Type
  5258 ;;  dividend        2    2[BANK0 ] int 
  5259 ;;  divisor         2    4[BANK0 ] int 
  5260 ;; Auto vars:     Size  Location     Type
  5261 ;;  quotient        2    8[BANK0 ] int 
  5262 ;;  sign            1    7[BANK0 ] unsigned char 
  5263 ;;  counter         1    6[BANK0 ] unsigned char 
  5264 ;; Return value:  Size  Location     Type
  5265 ;;                  2    2[BANK0 ] int 
  5266 ;; Registers used:
  5267 ;;		wreg, status,2, status,0, prodl
  5268 ;; Tracked objects:
  5269 ;;		On entry : 0/0
  5270 ;;		On exit  : 0/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5273 ;;      Params:         0       4       0       0       0       0       0       0       0
  5274 ;;      Locals:         0       4       0       0       0       0       0       0       0
  5275 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5276 ;;      Totals:         1       8       0       0       0       0       0       0       0
  5277 ;;Total ram usage:        9 bytes
  5278 ;; Hardware stack levels used:    1
  5279 ;; Hardware stack levels required when called:    5
  5280 ;; This function calls:
  5281 ;;		Nothing
  5282 ;; This function is called by:
  5283 ;;		_fround
  5284 ;;		_scale
  5285 ;;		_sprintf
  5286 ;; This function uses a non-reentrant model
  5287 ;;
  5288                           
  5289                           	psect	text8
  5290  002E8C                     __ptext8:
  5291                           	opt stack 0
  5292  002E8C                     ___awdiv:
  5293                           	opt stack 23
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;incstack = 0
  5297  002E8C  6E32               	movwf	??___awdiv& (0+255),c
  5298  002E8E  0E00               	movlw	0
  5299  002E90  0100               	movlb	0	; () banked
  5300  002E92  0100               	movlb	0	; () banked
  5301  002E94  6F67               	movwf	___awdiv@sign& (0+255),b
  5302  002E96  5032               	movf	??___awdiv& (0+255),w,c
  5303                           
  5304                           ; BSR set to: 0
  5305  002E98  0100               	movlb	0	; () banked
  5306  002E9A  0100               	movlb	0	; () banked
  5307  002E9C  5165               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5308  002E9E  0A80               	xorlw	128
  5309  002EA0  6EF3               	movwf	prodl,c
  5310  002EA2  0E80               	movlw	128
  5311  002EA4  5CF3               	subwf	prodl,w,c
  5312  002EA6  0E00               	movlw	0
  5313  002EA8  B4D8               	btfsc	status,2,c
  5314  002EAA  5D64               	subwf	___awdiv@divisor& (0+255),w,b
  5315  002EAC  B0D8               	btfsc	status,0,c
  5316  002EAE  D00D               	goto	l5814
  5317                           
  5318                           ; BSR set to: 0
  5319  002EB0  0100               	movlb	0	; () banked
  5320  002EB2  0100               	movlb	0	; () banked
  5321  002EB4  6D64               	negf	___awdiv@divisor& (0+255),b
  5322  002EB6  0100               	movlb	0	; () banked
  5323  002EB8  1F65               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5324  002EBA  B0D8               	btfsc	status,0,c
  5325  002EBC  2B65               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5326                           
  5327                           ; BSR set to: 0
  5328  002EBE  6E32               	movwf	??___awdiv& (0+255),c
  5329  002EC0  0E01               	movlw	1
  5330  002EC2  0100               	movlb	0	; () banked
  5331  002EC4  0100               	movlb	0	; () banked
  5332  002EC6  6F67               	movwf	___awdiv@sign& (0+255),b
  5333  002EC8  5032               	movf	??___awdiv& (0+255),w,c
  5334  002ECA                     l5814:
  5335                           
  5336                           ; BSR set to: 0
  5337  002ECA  0100               	movlb	0	; () banked
  5338  002ECC  0100               	movlb	0	; () banked
  5339  002ECE  5163               	movf	(___awdiv@dividend+1)& (0+255),w,b
  5340  002ED0  0A80               	xorlw	128
  5341  002ED2  6EF3               	movwf	prodl,c
  5342  002ED4  0E80               	movlw	128
  5343  002ED6  5CF3               	subwf	prodl,w,c
  5344  002ED8  0E00               	movlw	0
  5345  002EDA  B4D8               	btfsc	status,2,c
  5346  002EDC  5D62               	subwf	___awdiv@dividend& (0+255),w,b
  5347  002EDE  B0D8               	btfsc	status,0,c
  5348  002EE0  D00B               	goto	l5820
  5349                           
  5350                           ; BSR set to: 0
  5351  002EE2  0100               	movlb	0	; () banked
  5352  002EE4  0100               	movlb	0	; () banked
  5353  002EE6  6D62               	negf	___awdiv@dividend& (0+255),b
  5354  002EE8  0100               	movlb	0	; () banked
  5355  002EEA  1F63               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5356  002EEC  B0D8               	btfsc	status,0,c
  5357  002EEE  2B63               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5358                           
  5359                           ; BSR set to: 0
  5360  002EF0  0E01               	movlw	1
  5361  002EF2  0100               	movlb	0	; () banked
  5362  002EF4  0100               	movlb	0	; () banked
  5363  002EF6  1B67               	xorwf	___awdiv@sign& (0+255),f,b
  5364  002EF8                     l5820:
  5365                           
  5366                           ; BSR set to: 0
  5367  002EF8  0E00               	movlw	0
  5368  002EFA  0100               	movlb	0	; () banked
  5369  002EFC  0100               	movlb	0	; () banked
  5370  002EFE  6F69               	movwf	(___awdiv@quotient+1)& (0+255),b
  5371  002F00  0E00               	movlw	0
  5372  002F02  0100               	movlb	0	; () banked
  5373  002F04  6F68               	movwf	___awdiv@quotient& (0+255),b
  5374                           
  5375                           ; BSR set to: 0
  5376  002F06  0100               	movlb	0	; () banked
  5377  002F08  0100               	movlb	0	; () banked
  5378  002F0A  5165               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5379  002F0C  1164               	iorwf	___awdiv@divisor& (0+255),w,b
  5380  002F0E  B4D8               	btfsc	status,2,c
  5381  002F10  D041               	goto	l5842
  5382                           
  5383                           ; BSR set to: 0
  5384  002F12  6E32               	movwf	??___awdiv& (0+255),c
  5385  002F14  0E01               	movlw	1
  5386  002F16  0100               	movlb	0	; () banked
  5387  002F18  0100               	movlb	0	; () banked
  5388  002F1A  6F66               	movwf	___awdiv@counter& (0+255),b
  5389  002F1C  5032               	movf	??___awdiv& (0+255),w,c
  5390  002F1E  D009               	goto	l5828
  5391  002F20                     l5826:
  5392                           
  5393                           ; BSR set to: 0
  5394  002F20  0100               	movlb	0	; () banked
  5395  002F22  0100               	movlb	0	; () banked
  5396  002F24  0100               	movlb	0	; () banked
  5397  002F26  90D8               	bcf	status,0,c
  5398  002F28  3764               	rlcf	___awdiv@divisor& (0+255),f,b
  5399  002F2A  3765               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5400  002F2C  0100               	movlb	0	; () banked
  5401  002F2E  0100               	movlb	0	; () banked
  5402  002F30  2B66               	incf	___awdiv@counter& (0+255),f,b
  5403  002F32                     l5828:
  5404                           
  5405                           ; BSR set to: 0
  5406  002F32  0100               	movlb	0	; () banked
  5407  002F34  0100               	movlb	0	; () banked
  5408  002F36  AF65               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5409  002F38  D7F3               	goto	l5826
  5410  002F3A                     l5830:
  5411                           
  5412                           ; BSR set to: 0
  5413  002F3A  0100               	movlb	0	; () banked
  5414  002F3C  0100               	movlb	0	; () banked
  5415  002F3E  0100               	movlb	0	; () banked
  5416  002F40  90D8               	bcf	status,0,c
  5417  002F42  3768               	rlcf	___awdiv@quotient& (0+255),f,b
  5418  002F44  3769               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5419                           
  5420                           ; BSR set to: 0
  5421  002F46  0100               	movlb	0	; () banked
  5422  002F48  0100               	movlb	0	; () banked
  5423  002F4A  5164               	movf	___awdiv@divisor& (0+255),w,b
  5424  002F4C  0100               	movlb	0	; () banked
  5425  002F4E  0100               	movlb	0	; () banked
  5426  002F50  5D62               	subwf	___awdiv@dividend& (0+255),w,b
  5427  002F52  0100               	movlb	0	; () banked
  5428  002F54  0100               	movlb	0	; () banked
  5429  002F56  5165               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5430  002F58  0100               	movlb	0	; () banked
  5431  002F5A  0100               	movlb	0	; () banked
  5432  002F5C  5963               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5433  002F5E  A0D8               	btfss	status,0,c
  5434  002F60  D00F               	goto	l5838
  5435                           
  5436                           ; BSR set to: 0
  5437  002F62  0100               	movlb	0	; () banked
  5438  002F64  0100               	movlb	0	; () banked
  5439  002F66  5164               	movf	___awdiv@divisor& (0+255),w,b
  5440  002F68  0100               	movlb	0	; () banked
  5441  002F6A  0100               	movlb	0	; () banked
  5442  002F6C  5F62               	subwf	___awdiv@dividend& (0+255),f,b
  5443  002F6E  0100               	movlb	0	; () banked
  5444  002F70  0100               	movlb	0	; () banked
  5445  002F72  5165               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5446  002F74  0100               	movlb	0	; () banked
  5447  002F76  0100               	movlb	0	; () banked
  5448  002F78  5B63               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5449                           
  5450                           ; BSR set to: 0
  5451  002F7A  0100               	movlb	0	; () banked
  5452  002F7C  0100               	movlb	0	; () banked
  5453  002F7E  8168               	bsf	___awdiv@quotient& (0+255),0,b
  5454  002F80                     l5838:
  5455                           
  5456                           ; BSR set to: 0
  5457  002F80  0100               	movlb	0	; () banked
  5458  002F82  0100               	movlb	0	; () banked
  5459  002F84  0100               	movlb	0	; () banked
  5460  002F86  90D8               	bcf	status,0,c
  5461  002F88  3365               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5462  002F8A  3364               	rrcf	___awdiv@divisor& (0+255),f,b
  5463                           
  5464                           ; BSR set to: 0
  5465  002F8C  0100               	movlb	0	; () banked
  5466  002F8E  0100               	movlb	0	; () banked
  5467  002F90  2F66               	decfsz	___awdiv@counter& (0+255),f,b
  5468  002F92  D7D3               	goto	l5830
  5469  002F94                     l5842:
  5470                           
  5471                           ; BSR set to: 0
  5472  002F94  0100               	movlb	0	; () banked
  5473  002F96  0100               	movlb	0	; () banked
  5474  002F98  5167               	movf	___awdiv@sign& (0+255),w,b
  5475  002F9A  B4D8               	btfsc	status,2,c
  5476  002F9C  D007               	goto	l5846
  5477                           
  5478                           ; BSR set to: 0
  5479  002F9E  0100               	movlb	0	; () banked
  5480  002FA0  0100               	movlb	0	; () banked
  5481  002FA2  6D68               	negf	___awdiv@quotient& (0+255),b
  5482  002FA4  0100               	movlb	0	; () banked
  5483  002FA6  1F69               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5484  002FA8  B0D8               	btfsc	status,0,c
  5485  002FAA  2B69               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5486  002FAC                     l5846:
  5487                           
  5488                           ; BSR set to: 0
  5489  002FAC  C068  F062         	movff	___awdiv@quotient,?___awdiv
  5490  002FB0  C069  F063         	movff	___awdiv@quotient+1,?___awdiv+1
  5491                           
  5492                           ; BSR set to: 0
  5493                           
  5494                           ; BSR set to: 0
  5495  002FB4  0012               	return	
  5496  002FB6                     __end_of___awdiv:
  5497                           	opt stack 0
  5498                           tblptru	equ	0xFF8
  5499                           tblptrh	equ	0xFF7
  5500                           tblptrl	equ	0xFF6
  5501                           tablat	equ	0xFF5
  5502                           prodh	equ	0xFF4
  5503                           prodl	equ	0xFF3
  5504                           wreg	equ	0xFE8
  5505                           indf1	equ	0xFE7
  5506                           fsr1h	equ	0xFE2
  5507                           fsr1l	equ	0xFE1
  5508                           indf2	equ	0xFDF
  5509                           postinc2	equ	0xFDE
  5510                           postdec2	equ	0xFDD
  5511                           fsr2h	equ	0xFDA
  5512                           fsr2l	equ	0xFD9
  5513                           status	equ	0xFD8
  5514                           
  5515 ;; *************** function __tdiv_to_l_ *****************
  5516 ;; Defined at:
  5517 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftdivl.c"
  5518 ;; Parameters:    Size  Location     Type
  5519 ;;  f1              3   44[COMRAM] float 
  5520 ;;  f2              3   47[COMRAM] float 
  5521 ;; Auto vars:     Size  Location     Type
  5522 ;;  quot            4    3[BANK0 ] unsigned long 
  5523 ;;  exp1            1    8[BANK0 ] unsigned char 
  5524 ;;  cntr            1    7[BANK0 ] unsigned char 
  5525 ;; Return value:  Size  Location     Type
  5526 ;;                  4   44[COMRAM] unsigned long 
  5527 ;; Registers used:
  5528 ;;		wreg, status,2, status,0
  5529 ;; Tracked objects:
  5530 ;;		On entry : 0/0
  5531 ;;		On exit  : 0/0
  5532 ;;		Unchanged: 0/0
  5533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5534 ;;      Params:         6       0       0       0       0       0       0       0       0
  5535 ;;      Locals:         0       6       0       0       0       0       0       0       0
  5536 ;;      Temps:          0       3       0       0       0       0       0       0       0
  5537 ;;      Totals:         6       9       0       0       0       0       0       0       0
  5538 ;;Total ram usage:       15 bytes
  5539 ;; Hardware stack levels used:    1
  5540 ;; Hardware stack levels required when called:    5
  5541 ;; This function calls:
  5542 ;;		Nothing
  5543 ;; This function is called by:
  5544 ;;		_sprintf
  5545 ;; This function uses a non-reentrant model
  5546 ;;
  5547                           
  5548                           	psect	text9
  5549  002B9A                     __ptext9:
  5550                           	opt stack 0
  5551  002B9A                     __tdiv_to_l_:
  5552                           	opt stack 24
  5553                           
  5554                           ; BSR set to: 0
  5555                           ;incstack = 0
  5556  002B9A  C02F  F060         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  5557  002B9E  0100               	movlb	0	; () banked
  5558  002BA0  6B61               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  5559  002BA2  6B62               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  5560  002BA4  0100               	movlb	0	; () banked
  5561  002BA6  342E               	rlcf	__tdiv_to_l_@f1+1,w,c
  5562  002BA8  0100               	movlb	0	; () banked
  5563  002BAA  3760               	rlcf	??__tdiv_to_l_& (0+255),f,b
  5564  002BAC  E301               	bnc	u3151
  5565  002BAE  8161               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  5566  002BB0                     u3151:
  5567  002BB0  0100               	movlb	0	; () banked
  5568  002BB2  5160               	movf	??__tdiv_to_l_& (0+255),w,b
  5569  002BB4  0100               	movlb	0	; () banked
  5570  002BB6  0100               	movlb	0	; () banked
  5571  002BB8  6F68               	movwf	__tdiv_to_l_@exp1& (0+255),b
  5572  002BBA  0100               	movlb	0	; () banked
  5573  002BBC  6768               	tstfsz	__tdiv_to_l_@exp1& (0+255),b
  5574  002BBE  D001               	goto	l4618
  5575  002BC0  D089               	goto	u3220
  5576  002BC2                     l4618:
  5577                           
  5578                           ; BSR set to: 0
  5579  002BC2  C032  F060         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  5580  002BC6  0100               	movlb	0	; () banked
  5581  002BC8  6B61               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  5582  002BCA  6B62               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  5583  002BCC  0100               	movlb	0	; () banked
  5584  002BCE  3431               	rlcf	__tdiv_to_l_@f2+1,w,c
  5585  002BD0  0100               	movlb	0	; () banked
  5586  002BD2  3760               	rlcf	??__tdiv_to_l_& (0+255),f,b
  5587  002BD4  E301               	bnc	u3171
  5588  002BD6  8161               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  5589  002BD8                     u3171:
  5590  002BD8  0100               	movlb	0	; () banked
  5591  002BDA  5160               	movf	??__tdiv_to_l_& (0+255),w,b
  5592  002BDC  0100               	movlb	0	; () banked
  5593  002BDE  0100               	movlb	0	; () banked
  5594  002BE0  6F67               	movwf	__tdiv_to_l_@cntr& (0+255),b
  5595  002BE2  0100               	movlb	0	; () banked
  5596  002BE4  6767               	tstfsz	__tdiv_to_l_@cntr& (0+255),b
  5597  002BE6  D001               	goto	l4624
  5598  002BE8  D075               	goto	u3220
  5599  002BEA                     l4624:
  5600                           
  5601                           ; BSR set to: 0
  5602  002BEA  8E2E               	bsf	__tdiv_to_l_@f1+1,7,c
  5603                           
  5604                           ; BSR set to: 0
  5605  002BEC  0EFF               	movlw	255
  5606  002BEE  162D               	andwf	__tdiv_to_l_@f1,f,c
  5607  002BF0  0EFF               	movlw	255
  5608  002BF2  162E               	andwf	__tdiv_to_l_@f1+1,f,c
  5609  002BF4  0E00               	movlw	0
  5610  002BF6  162F               	andwf	__tdiv_to_l_@f1+2,f,c
  5611  002BF8  8E31               	bsf	__tdiv_to_l_@f2+1,7,c
  5612                           
  5613                           ; BSR set to: 0
  5614  002BFA  0EFF               	movlw	255
  5615  002BFC  1630               	andwf	__tdiv_to_l_@f2,f,c
  5616  002BFE  0EFF               	movlw	255
  5617  002C00  1631               	andwf	__tdiv_to_l_@f2+1,f,c
  5618  002C02  0E00               	movlw	0
  5619  002C04  1632               	andwf	__tdiv_to_l_@f2+2,f,c
  5620                           
  5621                           ; BSR set to: 0
  5622  002C06  0E00               	movlw	0
  5623  002C08  0100               	movlb	0	; () banked
  5624  002C0A  0100               	movlb	0	; () banked
  5625  002C0C  6F63               	movwf	__tdiv_to_l_@quot& (0+255),b
  5626  002C0E  0E00               	movlw	0
  5627  002C10  0100               	movlb	0	; () banked
  5628  002C12  6F64               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  5629  002C14  0E00               	movlw	0
  5630  002C16  0100               	movlb	0	; () banked
  5631  002C18  6F65               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  5632  002C1A  0E00               	movlw	0
  5633  002C1C  0100               	movlb	0	; () banked
  5634  002C1E  6F66               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  5635                           
  5636                           ; BSR set to: 0
  5637  002C20  0E7F               	movlw	127
  5638  002C22  0100               	movlb	0	; () banked
  5639  002C24  0100               	movlb	0	; () banked
  5640  002C26  5F68               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5641                           
  5642                           ; BSR set to: 0
  5643  002C28  0100               	movlb	0	; () banked
  5644  002C2A  0100               	movlb	0	; () banked
  5645  002C2C  5167               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  5646  002C2E  0F98               	addlw	152
  5647  002C30  0100               	movlb	0	; () banked
  5648  002C32  0100               	movlb	0	; () banked
  5649  002C34  5F68               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5650                           
  5651                           ; BSR set to: 0
  5652  002C36  0100               	movlb	0	; () banked
  5653  002C38  6F60               	movwf	??__tdiv_to_l_& (0+255),b
  5654  002C3A  0E18               	movlw	24
  5655  002C3C  0100               	movlb	0	; () banked
  5656  002C3E  0100               	movlb	0	; () banked
  5657  002C40  6F67               	movwf	__tdiv_to_l_@cntr& (0+255),b
  5658  002C42  0100               	movlb	0	; () banked
  5659  002C44  5160               	movf	??__tdiv_to_l_& (0+255),w,b
  5660  002C46                     l4638:
  5661                           
  5662                           ; BSR set to: 0
  5663  002C46  0100               	movlb	0	; () banked
  5664  002C48  90D8               	bcf	status,0,c
  5665  002C4A  0100               	movlb	0	; () banked
  5666  002C4C  3763               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5667  002C4E  0100               	movlb	0	; () banked
  5668  002C50  3764               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5669  002C52  0100               	movlb	0	; () banked
  5670  002C54  3765               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5671  002C56  0100               	movlb	0	; () banked
  5672  002C58  3766               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5673                           
  5674                           ; BSR set to: 0
  5675  002C5A  5030               	movf	__tdiv_to_l_@f2,w,c
  5676  002C5C  5C2D               	subwf	__tdiv_to_l_@f1,w,c
  5677  002C5E  5031               	movf	__tdiv_to_l_@f2+1,w,c
  5678  002C60  582E               	subwfb	__tdiv_to_l_@f1+1,w,c
  5679  002C62  5032               	movf	__tdiv_to_l_@f2+2,w,c
  5680  002C64  582F               	subwfb	__tdiv_to_l_@f1+2,w,c
  5681  002C66  A0D8               	btfss	status,0,c
  5682  002C68  D009               	goto	l888
  5683                           
  5684                           ; BSR set to: 0
  5685  002C6A  5030               	movf	__tdiv_to_l_@f2,w,c
  5686  002C6C  5E2D               	subwf	__tdiv_to_l_@f1,f,c
  5687  002C6E  5031               	movf	__tdiv_to_l_@f2+1,w,c
  5688  002C70  5A2E               	subwfb	__tdiv_to_l_@f1+1,f,c
  5689  002C72  5032               	movf	__tdiv_to_l_@f2+2,w,c
  5690  002C74  5A2F               	subwfb	__tdiv_to_l_@f1+2,f,c
  5691                           
  5692                           ; BSR set to: 0
  5693  002C76  0100               	movlb	0	; () banked
  5694  002C78  0100               	movlb	0	; () banked
  5695  002C7A  8163               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  5696  002C7C                     l888:
  5697                           
  5698                           ; BSR set to: 0
  5699  002C7C  90D8               	bcf	status,0,c
  5700  002C7E  362D               	rlcf	__tdiv_to_l_@f1,f,c
  5701  002C80  362E               	rlcf	__tdiv_to_l_@f1+1,f,c
  5702  002C82  362F               	rlcf	__tdiv_to_l_@f1+2,f,c
  5703                           
  5704                           ; BSR set to: 0
  5705  002C84  0100               	movlb	0	; () banked
  5706  002C86  0100               	movlb	0	; () banked
  5707  002C88  2F67               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  5708  002C8A  D7DD               	goto	l4638
  5709                           
  5710                           ; BSR set to: 0
  5711  002C8C  0100               	movlb	0	; () banked
  5712  002C8E  0100               	movlb	0	; () banked
  5713  002C90  AF68               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  5714  002C92  D01B               	goto	l4658
  5715                           
  5716                           ; BSR set to: 0
  5717  002C94  0100               	movlb	0	; () banked
  5718  002C96  0100               	movlb	0	; () banked
  5719  002C98  5168               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5720  002C9A  0A80               	xorlw	128
  5721  002C9C  0100               	movlb	0	; () banked
  5722  002C9E  6F60               	movwf	??__tdiv_to_l_& (0+255),b
  5723  002CA0  0EE9               	movlw	233
  5724  002CA2  0A80               	xorlw	128
  5725  002CA4  0100               	movlb	0	; () banked
  5726  002CA6  5D60               	subwf	??__tdiv_to_l_& (0+255),w,b
  5727  002CA8  A0D8               	btfss	status,0,c
  5728  002CAA  D014               	goto	u3220
  5729  002CAC                     l4654:
  5730                           
  5731                           ; BSR set to: 0
  5732  002CAC  0100               	movlb	0	; () banked
  5733  002CAE  90D8               	bcf	status,0,c
  5734  002CB0  0100               	movlb	0	; () banked
  5735  002CB2  3366               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5736  002CB4  0100               	movlb	0	; () banked
  5737  002CB6  3365               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5738  002CB8  0100               	movlb	0	; () banked
  5739  002CBA  3364               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5740  002CBC  0100               	movlb	0	; () banked
  5741  002CBE  3363               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  5742                           
  5743                           ; BSR set to: 0
  5744  002CC0  0100               	movlb	0	; () banked
  5745  002CC2  0100               	movlb	0	; () banked
  5746  002CC4  3F68               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  5747  002CC6  D7F2               	goto	l4654
  5748  002CC8  D01F               	goto	l894
  5749  002CCA                     l4658:
  5750                           
  5751                           ; BSR set to: 0
  5752  002CCA  0E17               	movlw	23
  5753  002CCC  0100               	movlb	0	; () banked
  5754  002CCE  0100               	movlb	0	; () banked
  5755  002CD0  6568               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  5756  002CD2  D016               	goto	l4666
  5757  002CD4                     u3220:
  5758                           
  5759                           ; BSR set to: 0
  5760  002CD4  0E00               	movlw	0
  5761  002CD6  6E2D               	movwf	?__tdiv_to_l_,c
  5762  002CD8  0E00               	movlw	0
  5763  002CDA  6E2E               	movwf	?__tdiv_to_l_+1,c
  5764  002CDC  0E00               	movlw	0
  5765  002CDE  6E2F               	movwf	?__tdiv_to_l_+2,c
  5766  002CE0  0E00               	movlw	0
  5767  002CE2  6E30               	movwf	?__tdiv_to_l_+3,c
  5768  002CE4  D019               	goto	l885
  5769  002CE6                     l4664:
  5770                           
  5771                           ; BSR set to: 0
  5772  002CE6  0100               	movlb	0	; () banked
  5773  002CE8  90D8               	bcf	status,0,c
  5774  002CEA  0100               	movlb	0	; () banked
  5775  002CEC  3763               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5776  002CEE  0100               	movlb	0	; () banked
  5777  002CF0  3764               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5778  002CF2  0100               	movlb	0	; () banked
  5779  002CF4  3765               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5780  002CF6  0100               	movlb	0	; () banked
  5781  002CF8  3766               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5782  002CFA  0100               	movlb	0	; () banked
  5783  002CFC  0100               	movlb	0	; () banked
  5784  002CFE  0768               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  5785  002D00                     l4666:
  5786                           
  5787                           ; BSR set to: 0
  5788  002D00  0100               	movlb	0	; () banked
  5789  002D02  0100               	movlb	0	; () banked
  5790  002D04  6768               	tstfsz	__tdiv_to_l_@exp1& (0+255),b
  5791  002D06  D7EF               	goto	l4664
  5792  002D08                     l894:
  5793                           
  5794                           ; BSR set to: 0
  5795  002D08  C063  F02D         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  5796  002D0C  C064  F02E         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  5797  002D10  C065  F02F         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  5798  002D14  C066  F030         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  5799  002D18                     l885:
  5800                           
  5801                           ; BSR set to: 0
  5802  002D18  0012               	return	
  5803  002D1A                     __end_of__tdiv_to_l_:
  5804                           	opt stack 0
  5805                           tblptru	equ	0xFF8
  5806                           tblptrh	equ	0xFF7
  5807                           tblptrl	equ	0xFF6
  5808                           tablat	equ	0xFF5
  5809                           prodh	equ	0xFF4
  5810                           prodl	equ	0xFF3
  5811                           wreg	equ	0xFE8
  5812                           indf1	equ	0xFE7
  5813                           fsr1h	equ	0xFE2
  5814                           fsr1l	equ	0xFE1
  5815                           indf2	equ	0xFDF
  5816                           postinc2	equ	0xFDE
  5817                           postdec2	equ	0xFDD
  5818                           fsr2h	equ	0xFDA
  5819                           fsr2l	equ	0xFD9
  5820                           status	equ	0xFD8
  5821                           
  5822 ;; *************** function __div_to_l_ *****************
  5823 ;; Defined at:
  5824 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\fldivl.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;  f1              3   44[COMRAM] unsigned long 
  5827 ;;  f2              3   47[COMRAM] unsigned long 
  5828 ;; Auto vars:     Size  Location     Type
  5829 ;;  quot            4    4[BANK0 ] unsigned long 
  5830 ;;  exp1            1    9[BANK0 ] unsigned char 
  5831 ;;  cntr            1    8[BANK0 ] unsigned char 
  5832 ;; Return value:  Size  Location     Type
  5833 ;;                  4   44[COMRAM] unsigned long 
  5834 ;; Registers used:
  5835 ;;		wreg, status,2, status,0
  5836 ;; Tracked objects:
  5837 ;;		On entry : 0/0
  5838 ;;		On exit  : 0/0
  5839 ;;		Unchanged: 0/0
  5840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5841 ;;      Params:         6       0       0       0       0       0       0       0       0
  5842 ;;      Locals:         0       6       0       0       0       0       0       0       0
  5843 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5844 ;;      Totals:         6      10       0       0       0       0       0       0       0
  5845 ;;Total ram usage:       16 bytes
  5846 ;; Hardware stack levels used:    1
  5847 ;; Hardware stack levels required when called:    5
  5848 ;; This function calls:
  5849 ;;		Nothing
  5850 ;; This function is called by:
  5851 ;;		_sprintf
  5852 ;; This function uses a non-reentrant model
  5853 ;;
  5854                           
  5855                           	psect	text10
  5856  002852                     __ptext10:
  5857                           	opt stack 0
  5858  002852                     __div_to_l_:
  5859                           	opt stack 24
  5860                           
  5861                           ; BSR set to: 0
  5862                           ;incstack = 0
  5863  002852  C02D  F060         	movff	__div_to_l_@f1,??__div_to_l_
  5864  002856  C02E  F061         	movff	__div_to_l_@f1+1,??__div_to_l_+1
  5865  00285A  C02F  F062         	movff	__div_to_l_@f1+2,??__div_to_l_+2
  5866  00285E  C030  F063         	movff	__div_to_l_@f1+3,??__div_to_l_+3
  5867  002862  0E18               	movlw	24
  5868  002864  D006               	goto	u3240
  5869  002866                     u3245:
  5870  002866  0100               	movlb	0	; () banked
  5871  002868  90D8               	bcf	status,0,c
  5872  00286A  3363               	rrcf	(??__div_to_l_+3)& (0+255),f,b
  5873  00286C  3362               	rrcf	(??__div_to_l_+2)& (0+255),f,b
  5874  00286E  3361               	rrcf	(??__div_to_l_+1)& (0+255),f,b
  5875  002870  3360               	rrcf	??__div_to_l_& (0+255),f,b
  5876  002872                     u3240:
  5877  002872  2EE8               	decfsz	wreg,f,c
  5878  002874  D7F8               	goto	u3245
  5879  002876  0100               	movlb	0	; () banked
  5880  002878  5160               	movf	??__div_to_l_& (0+255),w,b
  5881  00287A  0100               	movlb	0	; () banked
  5882  00287C  0100               	movlb	0	; () banked
  5883  00287E  6F69               	movwf	__div_to_l_@exp1& (0+255),b
  5884  002880  0100               	movlb	0	; () banked
  5885  002882  6769               	tstfsz	__div_to_l_@exp1& (0+255),b
  5886  002884  D001               	goto	l4674
  5887  002886  D099               	goto	u3310
  5888  002888                     l4674:
  5889                           
  5890                           ; BSR set to: 0
  5891  002888  C030  F060         	movff	__div_to_l_@f2,??__div_to_l_
  5892  00288C  C031  F061         	movff	__div_to_l_@f2+1,??__div_to_l_+1
  5893  002890  C032  F062         	movff	__div_to_l_@f2+2,??__div_to_l_+2
  5894  002894  C033  F063         	movff	__div_to_l_@f2+3,??__div_to_l_+3
  5895  002898  0E18               	movlw	24
  5896  00289A  D006               	goto	u3260
  5897  00289C                     u3265:
  5898  00289C  0100               	movlb	0	; () banked
  5899  00289E  90D8               	bcf	status,0,c
  5900  0028A0  3363               	rrcf	(??__div_to_l_+3)& (0+255),f,b
  5901  0028A2  3362               	rrcf	(??__div_to_l_+2)& (0+255),f,b
  5902  0028A4  3361               	rrcf	(??__div_to_l_+1)& (0+255),f,b
  5903  0028A6  3360               	rrcf	??__div_to_l_& (0+255),f,b
  5904  0028A8                     u3260:
  5905  0028A8  2EE8               	decfsz	wreg,f,c
  5906  0028AA  D7F8               	goto	u3265
  5907  0028AC  0100               	movlb	0	; () banked
  5908  0028AE  5160               	movf	??__div_to_l_& (0+255),w,b
  5909  0028B0  0100               	movlb	0	; () banked
  5910  0028B2  0100               	movlb	0	; () banked
  5911  0028B4  6F68               	movwf	__div_to_l_@cntr& (0+255),b
  5912  0028B6  0100               	movlb	0	; () banked
  5913  0028B8  6768               	tstfsz	__div_to_l_@cntr& (0+255),b
  5914  0028BA  D001               	goto	l4680
  5915  0028BC  D07E               	goto	u3310
  5916  0028BE                     l4680:
  5917                           
  5918                           ; BSR set to: 0
  5919  0028BE  8E2F               	bsf	__div_to_l_@f1+2,7,c
  5920                           
  5921                           ; BSR set to: 0
  5922  0028C0  0EFF               	movlw	255
  5923  0028C2  162D               	andwf	__div_to_l_@f1,f,c
  5924  0028C4  0EFF               	movlw	255
  5925  0028C6  162E               	andwf	__div_to_l_@f1+1,f,c
  5926  0028C8  0EFF               	movlw	255
  5927  0028CA  162F               	andwf	__div_to_l_@f1+2,f,c
  5928  0028CC  0E00               	movlw	0
  5929  0028CE  1630               	andwf	__div_to_l_@f1+3,f,c
  5930                           
  5931                           ; BSR set to: 0
  5932  0028D0  8E32               	bsf	__div_to_l_@f2+2,7,c
  5933  0028D2  0EFF               	movlw	255
  5934  0028D4  1630               	andwf	__div_to_l_@f2,f,c
  5935  0028D6  0EFF               	movlw	255
  5936  0028D8  1631               	andwf	__div_to_l_@f2+1,f,c
  5937  0028DA  0EFF               	movlw	255
  5938  0028DC  1632               	andwf	__div_to_l_@f2+2,f,c
  5939  0028DE  0E00               	movlw	0
  5940  0028E0  1633               	andwf	__div_to_l_@f2+3,f,c
  5941                           
  5942                           ; BSR set to: 0
  5943  0028E2  0E00               	movlw	0
  5944  0028E4  0100               	movlb	0	; () banked
  5945  0028E6  0100               	movlb	0	; () banked
  5946  0028E8  6F64               	movwf	__div_to_l_@quot& (0+255),b
  5947  0028EA  0E00               	movlw	0
  5948  0028EC  0100               	movlb	0	; () banked
  5949  0028EE  6F65               	movwf	(__div_to_l_@quot+1)& (0+255),b
  5950  0028F0  0E00               	movlw	0
  5951  0028F2  0100               	movlb	0	; () banked
  5952  0028F4  6F66               	movwf	(__div_to_l_@quot+2)& (0+255),b
  5953  0028F6  0E00               	movlw	0
  5954  0028F8  0100               	movlb	0	; () banked
  5955  0028FA  6F67               	movwf	(__div_to_l_@quot+3)& (0+255),b
  5956                           
  5957                           ; BSR set to: 0
  5958  0028FC  0E7F               	movlw	127
  5959  0028FE  0100               	movlb	0	; () banked
  5960  002900  0100               	movlb	0	; () banked
  5961  002902  5F69               	subwf	__div_to_l_@exp1& (0+255),f,b
  5962                           
  5963                           ; BSR set to: 0
  5964  002904  0100               	movlb	0	; () banked
  5965  002906  0100               	movlb	0	; () banked
  5966  002908  5168               	movf	__div_to_l_@cntr& (0+255),w,b
  5967  00290A  0FA0               	addlw	160
  5968  00290C  0100               	movlb	0	; () banked
  5969  00290E  0100               	movlb	0	; () banked
  5970  002910  5F69               	subwf	__div_to_l_@exp1& (0+255),f,b
  5971                           
  5972                           ; BSR set to: 0
  5973  002912  0100               	movlb	0	; () banked
  5974  002914  6F60               	movwf	??__div_to_l_& (0+255),b
  5975  002916  0E20               	movlw	32
  5976  002918  0100               	movlb	0	; () banked
  5977  00291A  0100               	movlb	0	; () banked
  5978  00291C  6F68               	movwf	__div_to_l_@cntr& (0+255),b
  5979  00291E  0100               	movlb	0	; () banked
  5980  002920  5160               	movf	??__div_to_l_& (0+255),w,b
  5981  002922                     l769:
  5982                           
  5983                           ; BSR set to: 0
  5984  002922  0100               	movlb	0	; () banked
  5985  002924  90D8               	bcf	status,0,c
  5986  002926  0100               	movlb	0	; () banked
  5987  002928  3764               	rlcf	__div_to_l_@quot& (0+255),f,b
  5988  00292A  0100               	movlb	0	; () banked
  5989  00292C  3765               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  5990  00292E  0100               	movlb	0	; () banked
  5991  002930  3766               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  5992  002932  0100               	movlb	0	; () banked
  5993  002934  3767               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  5994                           
  5995                           ; BSR set to: 0
  5996  002936  5030               	movf	__div_to_l_@f2,w,c
  5997  002938  5C2D               	subwf	__div_to_l_@f1,w,c
  5998  00293A  5031               	movf	__div_to_l_@f2+1,w,c
  5999  00293C  582E               	subwfb	__div_to_l_@f1+1,w,c
  6000  00293E  5032               	movf	__div_to_l_@f2+2,w,c
  6001  002940  582F               	subwfb	__div_to_l_@f1+2,w,c
  6002  002942  5033               	movf	__div_to_l_@f2+3,w,c
  6003  002944  5830               	subwfb	__div_to_l_@f1+3,w,c
  6004  002946  A0D8               	btfss	status,0,c
  6005  002948  D00B               	goto	l4700
  6006                           
  6007                           ; BSR set to: 0
  6008  00294A  5030               	movf	__div_to_l_@f2,w,c
  6009  00294C  5E2D               	subwf	__div_to_l_@f1,f,c
  6010  00294E  5031               	movf	__div_to_l_@f2+1,w,c
  6011  002950  5A2E               	subwfb	__div_to_l_@f1+1,f,c
  6012  002952  5032               	movf	__div_to_l_@f2+2,w,c
  6013  002954  5A2F               	subwfb	__div_to_l_@f1+2,f,c
  6014  002956  5033               	movf	__div_to_l_@f2+3,w,c
  6015  002958  5A30               	subwfb	__div_to_l_@f1+3,f,c
  6016                           
  6017                           ; BSR set to: 0
  6018  00295A  0100               	movlb	0	; () banked
  6019  00295C  0100               	movlb	0	; () banked
  6020  00295E  8164               	bsf	__div_to_l_@quot& (0+255),0,b
  6021  002960                     l4700:
  6022                           
  6023                           ; BSR set to: 0
  6024  002960  90D8               	bcf	status,0,c
  6025  002962  362D               	rlcf	__div_to_l_@f1,f,c
  6026  002964  362E               	rlcf	__div_to_l_@f1+1,f,c
  6027  002966  362F               	rlcf	__div_to_l_@f1+2,f,c
  6028  002968  3630               	rlcf	__div_to_l_@f1+3,f,c
  6029                           
  6030                           ; BSR set to: 0
  6031  00296A  0100               	movlb	0	; () banked
  6032  00296C  0100               	movlb	0	; () banked
  6033  00296E  2F68               	decfsz	__div_to_l_@cntr& (0+255),f,b
  6034  002970  D7D8               	goto	l769
  6035                           
  6036                           ; BSR set to: 0
  6037  002972  0100               	movlb	0	; () banked
  6038  002974  0100               	movlb	0	; () banked
  6039  002976  AF69               	btfss	__div_to_l_@exp1& (0+255),7,b
  6040  002978  D01B               	goto	l4714
  6041                           
  6042                           ; BSR set to: 0
  6043  00297A  0100               	movlb	0	; () banked
  6044  00297C  0100               	movlb	0	; () banked
  6045  00297E  5169               	movf	__div_to_l_@exp1& (0+255),w,b
  6046  002980  0A80               	xorlw	128
  6047  002982  0100               	movlb	0	; () banked
  6048  002984  6F60               	movwf	??__div_to_l_& (0+255),b
  6049  002986  0EE1               	movlw	225
  6050  002988  0A80               	xorlw	128
  6051  00298A  0100               	movlb	0	; () banked
  6052  00298C  5D60               	subwf	??__div_to_l_& (0+255),w,b
  6053  00298E  A0D8               	btfss	status,0,c
  6054  002990  D014               	goto	u3310
  6055  002992                     l4710:
  6056                           
  6057                           ; BSR set to: 0
  6058  002992  0100               	movlb	0	; () banked
  6059  002994  90D8               	bcf	status,0,c
  6060  002996  0100               	movlb	0	; () banked
  6061  002998  3367               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  6062  00299A  0100               	movlb	0	; () banked
  6063  00299C  3366               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  6064  00299E  0100               	movlb	0	; () banked
  6065  0029A0  3365               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  6066  0029A2  0100               	movlb	0	; () banked
  6067  0029A4  3364               	rrcf	__div_to_l_@quot& (0+255),f,b
  6068                           
  6069                           ; BSR set to: 0
  6070  0029A6  0100               	movlb	0	; () banked
  6071  0029A8  0100               	movlb	0	; () banked
  6072  0029AA  3F69               	incfsz	__div_to_l_@exp1& (0+255),f,b
  6073  0029AC  D7F2               	goto	l4710
  6074  0029AE  D01F               	goto	l776
  6075  0029B0                     l4714:
  6076                           
  6077                           ; BSR set to: 0
  6078  0029B0  0E1F               	movlw	31
  6079  0029B2  0100               	movlb	0	; () banked
  6080  0029B4  0100               	movlb	0	; () banked
  6081  0029B6  6569               	cpfsgt	__div_to_l_@exp1& (0+255),b
  6082  0029B8  D016               	goto	l4722
  6083  0029BA                     u3310:
  6084                           
  6085                           ; BSR set to: 0
  6086  0029BA  0E00               	movlw	0
  6087  0029BC  6E2D               	movwf	?__div_to_l_,c
  6088  0029BE  0E00               	movlw	0
  6089  0029C0  6E2E               	movwf	?__div_to_l_+1,c
  6090  0029C2  0E00               	movlw	0
  6091  0029C4  6E2F               	movwf	?__div_to_l_+2,c
  6092  0029C6  0E00               	movlw	0
  6093  0029C8  6E30               	movwf	?__div_to_l_+3,c
  6094  0029CA  D019               	goto	l767
  6095  0029CC                     l4720:
  6096                           
  6097                           ; BSR set to: 0
  6098  0029CC  0100               	movlb	0	; () banked
  6099  0029CE  90D8               	bcf	status,0,c
  6100  0029D0  0100               	movlb	0	; () banked
  6101  0029D2  3764               	rlcf	__div_to_l_@quot& (0+255),f,b
  6102  0029D4  0100               	movlb	0	; () banked
  6103  0029D6  3765               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  6104  0029D8  0100               	movlb	0	; () banked
  6105  0029DA  3766               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  6106  0029DC  0100               	movlb	0	; () banked
  6107  0029DE  3767               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  6108  0029E0  0100               	movlb	0	; () banked
  6109  0029E2  0100               	movlb	0	; () banked
  6110  0029E4  0769               	decf	__div_to_l_@exp1& (0+255),f,b
  6111  0029E6                     l4722:
  6112                           
  6113                           ; BSR set to: 0
  6114  0029E6  0100               	movlb	0	; () banked
  6115  0029E8  0100               	movlb	0	; () banked
  6116  0029EA  6769               	tstfsz	__div_to_l_@exp1& (0+255),b
  6117  0029EC  D7EF               	goto	l4720
  6118  0029EE                     l776:
  6119                           
  6120                           ; BSR set to: 0
  6121  0029EE  C064  F02D         	movff	__div_to_l_@quot,?__div_to_l_
  6122  0029F2  C065  F02E         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  6123  0029F6  C066  F02F         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  6124  0029FA  C067  F030         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  6125  0029FE                     l767:
  6126                           
  6127                           ; BSR set to: 0
  6128  0029FE  0012               	return	
  6129  002A00                     __end_of__div_to_l_:
  6130                           	opt stack 0
  6131                           tblptru	equ	0xFF8
  6132                           tblptrh	equ	0xFF7
  6133                           tblptrl	equ	0xFF6
  6134                           tablat	equ	0xFF5
  6135                           prodh	equ	0xFF4
  6136                           prodl	equ	0xFF3
  6137                           wreg	equ	0xFE8
  6138                           indf1	equ	0xFE7
  6139                           fsr1h	equ	0xFE2
  6140                           fsr1l	equ	0xFE1
  6141                           indf2	equ	0xFDF
  6142                           postinc2	equ	0xFDE
  6143                           postdec2	equ	0xFDD
  6144                           fsr2h	equ	0xFDA
  6145                           fsr2l	equ	0xFD9
  6146                           status	equ	0xFD8
  6147                           
  6148 ;; *************** function ___lltoft *****************
  6149 ;; Defined at:
  6150 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lltoft.c"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;  c               4    3[BANK0 ] unsigned long 
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;  exp             1   49[COMRAM] unsigned char 
  6155 ;; Return value:  Size  Location     Type
  6156 ;;                  3    3[BANK0 ] float 
  6157 ;; Registers used:
  6158 ;;		wreg, status,2, status,0, cstack
  6159 ;; Tracked objects:
  6160 ;;		On entry : 0/0
  6161 ;;		On exit  : 0/0
  6162 ;;		Unchanged: 0/0
  6163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6164 ;;      Params:         0       4       0       0       0       0       0       0       0
  6165 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6166 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6167 ;;      Totals:         1       8       0       0       0       0       0       0       0
  6168 ;;Total ram usage:        9 bytes
  6169 ;; Hardware stack levels used:    1
  6170 ;; Hardware stack levels required when called:    6
  6171 ;; This function calls:
  6172 ;;		___ftpack
  6173 ;; This function is called by:
  6174 ;;		_sprintf
  6175 ;; This function uses a non-reentrant model
  6176 ;;
  6177                           
  6178                           	psect	text11
  6179  00356E                     __ptext11:
  6180                           	opt stack 0
  6181  00356E                     ___lltoft:
  6182                           	opt stack 23
  6183                           
  6184                           ; BSR set to: 0
  6185                           ;incstack = 0
  6186  00356E  0100               	movlb	0	; () banked
  6187  003570  6F67               	movwf	??___lltoft& (0+255),b
  6188  003572  0E8E               	movlw	142
  6189  003574  6E32               	movwf	___lltoft@exp,c
  6190  003576  0100               	movlb	0	; () banked
  6191  003578  5167               	movf	??___lltoft& (0+255),w,b
  6192  00357A  D00B               	goto	l5128
  6193  00357C                     l5126:
  6194                           
  6195                           ; BSR set to: 0
  6196  00357C  0100               	movlb	0	; () banked
  6197  00357E  90D8               	bcf	status,0,c
  6198  003580  0100               	movlb	0	; () banked
  6199  003582  3366               	rrcf	(___lltoft@c+3)& (0+255),f,b
  6200  003584  0100               	movlb	0	; () banked
  6201  003586  3365               	rrcf	(___lltoft@c+2)& (0+255),f,b
  6202  003588  0100               	movlb	0	; () banked
  6203  00358A  3364               	rrcf	(___lltoft@c+1)& (0+255),f,b
  6204  00358C  0100               	movlb	0	; () banked
  6205  00358E  3363               	rrcf	___lltoft@c& (0+255),f,b
  6206  003590  2A32               	incf	___lltoft@exp,f,c
  6207  003592                     l5128:
  6208                           
  6209                           ; BSR set to: 0
  6210  003592  0E00               	movlw	0
  6211  003594  0100               	movlb	0	; () banked
  6212  003596  0100               	movlb	0	; () banked
  6213  003598  1563               	andwf	___lltoft@c& (0+255),w,b
  6214  00359A  0100               	movlb	0	; () banked
  6215  00359C  6F67               	movwf	??___lltoft& (0+255),b
  6216  00359E  0E00               	movlw	0
  6217  0035A0  0100               	movlb	0	; () banked
  6218  0035A2  0100               	movlb	0	; () banked
  6219  0035A4  1564               	andwf	(___lltoft@c+1)& (0+255),w,b
  6220  0035A6  0100               	movlb	0	; () banked
  6221  0035A8  6F68               	movwf	(??___lltoft+1)& (0+255),b
  6222  0035AA  0E00               	movlw	0
  6223  0035AC  0100               	movlb	0	; () banked
  6224  0035AE  0100               	movlb	0	; () banked
  6225  0035B0  1565               	andwf	(___lltoft@c+2)& (0+255),w,b
  6226  0035B2  0100               	movlb	0	; () banked
  6227  0035B4  6F69               	movwf	(??___lltoft+2)& (0+255),b
  6228  0035B6  0EFF               	movlw	255
  6229  0035B8  0100               	movlb	0	; () banked
  6230  0035BA  0100               	movlb	0	; () banked
  6231  0035BC  1566               	andwf	(___lltoft@c+3)& (0+255),w,b
  6232  0035BE  0100               	movlb	0	; () banked
  6233  0035C0  6F6A               	movwf	(??___lltoft+3)& (0+255),b
  6234  0035C2  0100               	movlb	0	; () banked
  6235  0035C4  516A               	movf	(??___lltoft+3)& (0+255),w,b
  6236  0035C6  1167               	iorwf	??___lltoft& (0+255),w,b
  6237  0035C8  1168               	iorwf	(??___lltoft+1)& (0+255),w,b
  6238  0035CA  1169               	iorwf	(??___lltoft+2)& (0+255),w,b
  6239  0035CC  A4D8               	btfss	status,2,c
  6240  0035CE  D7D6               	goto	l5126
  6241                           
  6242                           ; BSR set to: 0
  6243                           
  6244                           ; BSR set to: 0
  6245  0035D0  C063  F02D         	movff	___lltoft@c,___ftpack@arg
  6246  0035D4  C064  F02E         	movff	___lltoft@c+1,___ftpack@arg+1
  6247  0035D8  C065  F02F         	movff	___lltoft@c+2,___ftpack@arg+2
  6248  0035DC  C032  F030         	movff	___lltoft@exp,___ftpack@exp
  6249  0035E0  0100               	movlb	0	; () banked
  6250  0035E2  6F67               	movwf	??___lltoft& (0+255),b
  6251  0035E4  0E00               	movlw	0
  6252  0035E6  6E31               	movwf	___ftpack@sign,c
  6253  0035E8  0100               	movlb	0	; () banked
  6254  0035EA  5167               	movf	??___lltoft& (0+255),w,b
  6255  0035EC  ECB7  F018         	call	___ftpack	;wreg free
  6256  0035F0  C02D  F063         	movff	?___ftpack,?___lltoft
  6257  0035F4  C02E  F064         	movff	?___ftpack+1,?___lltoft+1
  6258  0035F8  C02F  F065         	movff	?___ftpack+2,?___lltoft+2
  6259  0035FC  0012               	return	
  6260  0035FE                     __end_of___lltoft:
  6261                           	opt stack 0
  6262                           tblptru	equ	0xFF8
  6263                           tblptrh	equ	0xFF7
  6264                           tblptrl	equ	0xFF6
  6265                           tablat	equ	0xFF5
  6266                           prodh	equ	0xFF4
  6267                           prodl	equ	0xFF3
  6268                           wreg	equ	0xFE8
  6269                           indf1	equ	0xFE7
  6270                           fsr1h	equ	0xFE2
  6271                           fsr1l	equ	0xFE1
  6272                           indf2	equ	0xFDF
  6273                           postinc2	equ	0xFDE
  6274                           postdec2	equ	0xFDD
  6275                           fsr2h	equ	0xFDA
  6276                           fsr2l	equ	0xFD9
  6277                           status	equ	0xFD8
  6278                           
  6279 ;; *************** function ___llmod *****************
  6280 ;; Defined at:
  6281 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\llmod.c"
  6282 ;; Parameters:    Size  Location     Type
  6283 ;;  dividend        4    8[BANK0 ] unsigned long 
  6284 ;;  divisor         4   12[BANK0 ] unsigned long 
  6285 ;; Auto vars:     Size  Location     Type
  6286 ;;  counter         1   17[BANK0 ] unsigned char 
  6287 ;; Return value:  Size  Location     Type
  6288 ;;                  4    8[BANK0 ] unsigned long 
  6289 ;; Registers used:
  6290 ;;		wreg, status,2, status,0
  6291 ;; Tracked objects:
  6292 ;;		On entry : 0/0
  6293 ;;		On exit  : 0/0
  6294 ;;		Unchanged: 0/0
  6295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6296 ;;      Params:         0       8       0       0       0       0       0       0       0
  6297 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6298 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6299 ;;      Totals:         0      10       0       0       0       0       0       0       0
  6300 ;;Total ram usage:       10 bytes
  6301 ;; Hardware stack levels used:    1
  6302 ;; Hardware stack levels required when called:    5
  6303 ;; This function calls:
  6304 ;;		Nothing
  6305 ;; This function is called by:
  6306 ;;		_sprintf
  6307 ;; This function uses a non-reentrant model
  6308 ;;
  6309                           
  6310                           	psect	text12
  6311  003098                     __ptext12:
  6312                           	opt stack 0
  6313  003098                     ___llmod:
  6314                           	opt stack 24
  6315                           
  6316                           ;incstack = 0
  6317  003098  0100               	movlb	0	; () banked
  6318  00309A  0100               	movlb	0	; () banked
  6319  00309C  516F               	movf	(___llmod@divisor+3)& (0+255),w,b
  6320  00309E  116C               	iorwf	___llmod@divisor& (0+255),w,b
  6321  0030A0  116D               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  6322  0030A2  116E               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  6323  0030A4  B4D8               	btfsc	status,2,c
  6324  0030A6  D05A               	goto	l983
  6325                           
  6326                           ; BSR set to: 0
  6327  0030A8  0100               	movlb	0	; () banked
  6328  0030AA  6F70               	movwf	??___llmod& (0+255),b
  6329  0030AC  0E01               	movlw	1
  6330  0030AE  0100               	movlb	0	; () banked
  6331  0030B0  0100               	movlb	0	; () banked
  6332  0030B2  6F71               	movwf	___llmod@counter& (0+255),b
  6333  0030B4  0100               	movlb	0	; () banked
  6334  0030B6  5170               	movf	??___llmod& (0+255),w,b
  6335  0030B8  D00D               	goto	l5892
  6336  0030BA                     l5890:
  6337                           
  6338                           ; BSR set to: 0
  6339  0030BA  0100               	movlb	0	; () banked
  6340  0030BC  90D8               	bcf	status,0,c
  6341  0030BE  0100               	movlb	0	; () banked
  6342  0030C0  376C               	rlcf	___llmod@divisor& (0+255),f,b
  6343  0030C2  0100               	movlb	0	; () banked
  6344  0030C4  376D               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  6345  0030C6  0100               	movlb	0	; () banked
  6346  0030C8  376E               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  6347  0030CA  0100               	movlb	0	; () banked
  6348  0030CC  376F               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  6349  0030CE  0100               	movlb	0	; () banked
  6350  0030D0  0100               	movlb	0	; () banked
  6351  0030D2  2B71               	incf	___llmod@counter& (0+255),f,b
  6352  0030D4                     l5892:
  6353                           
  6354                           ; BSR set to: 0
  6355  0030D4  0100               	movlb	0	; () banked
  6356  0030D6  0100               	movlb	0	; () banked
  6357  0030D8  AF6F               	btfss	(___llmod@divisor+3)& (0+255),7,b
  6358  0030DA  D7EF               	goto	l5890
  6359  0030DC                     l5894:
  6360                           
  6361                           ; BSR set to: 0
  6362  0030DC  0100               	movlb	0	; () banked
  6363  0030DE  0100               	movlb	0	; () banked
  6364  0030E0  516C               	movf	___llmod@divisor& (0+255),w,b
  6365  0030E2  0100               	movlb	0	; () banked
  6366  0030E4  0100               	movlb	0	; () banked
  6367  0030E6  5D68               	subwf	___llmod@dividend& (0+255),w,b
  6368  0030E8  0100               	movlb	0	; () banked
  6369  0030EA  0100               	movlb	0	; () banked
  6370  0030EC  516D               	movf	(___llmod@divisor+1)& (0+255),w,b
  6371  0030EE  0100               	movlb	0	; () banked
  6372  0030F0  0100               	movlb	0	; () banked
  6373  0030F2  5969               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  6374  0030F4  0100               	movlb	0	; () banked
  6375  0030F6  0100               	movlb	0	; () banked
  6376  0030F8  516E               	movf	(___llmod@divisor+2)& (0+255),w,b
  6377  0030FA  0100               	movlb	0	; () banked
  6378  0030FC  0100               	movlb	0	; () banked
  6379  0030FE  596A               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  6380  003100  0100               	movlb	0	; () banked
  6381  003102  0100               	movlb	0	; () banked
  6382  003104  516F               	movf	(___llmod@divisor+3)& (0+255),w,b
  6383  003106  0100               	movlb	0	; () banked
  6384  003108  0100               	movlb	0	; () banked
  6385  00310A  596B               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  6386  00310C  A0D8               	btfss	status,0,c
  6387  00310E  D018               	goto	l5898
  6388                           
  6389                           ; BSR set to: 0
  6390  003110  0100               	movlb	0	; () banked
  6391  003112  0100               	movlb	0	; () banked
  6392  003114  516C               	movf	___llmod@divisor& (0+255),w,b
  6393  003116  0100               	movlb	0	; () banked
  6394  003118  0100               	movlb	0	; () banked
  6395  00311A  5F68               	subwf	___llmod@dividend& (0+255),f,b
  6396  00311C  0100               	movlb	0	; () banked
  6397  00311E  0100               	movlb	0	; () banked
  6398  003120  516D               	movf	(___llmod@divisor+1)& (0+255),w,b
  6399  003122  0100               	movlb	0	; () banked
  6400  003124  0100               	movlb	0	; () banked
  6401  003126  5B69               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  6402  003128  0100               	movlb	0	; () banked
  6403  00312A  0100               	movlb	0	; () banked
  6404  00312C  516E               	movf	(___llmod@divisor+2)& (0+255),w,b
  6405  00312E  0100               	movlb	0	; () banked
  6406  003130  0100               	movlb	0	; () banked
  6407  003132  5B6A               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  6408  003134  0100               	movlb	0	; () banked
  6409  003136  0100               	movlb	0	; () banked
  6410  003138  516F               	movf	(___llmod@divisor+3)& (0+255),w,b
  6411  00313A  0100               	movlb	0	; () banked
  6412  00313C  0100               	movlb	0	; () banked
  6413  00313E  5B6B               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  6414  003140                     l5898:
  6415                           
  6416                           ; BSR set to: 0
  6417  003140  0100               	movlb	0	; () banked
  6418  003142  90D8               	bcf	status,0,c
  6419  003144  0100               	movlb	0	; () banked
  6420  003146  336F               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  6421  003148  0100               	movlb	0	; () banked
  6422  00314A  336E               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  6423  00314C  0100               	movlb	0	; () banked
  6424  00314E  336D               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  6425  003150  0100               	movlb	0	; () banked
  6426  003152  336C               	rrcf	___llmod@divisor& (0+255),f,b
  6427                           
  6428                           ; BSR set to: 0
  6429  003154  0100               	movlb	0	; () banked
  6430  003156  0100               	movlb	0	; () banked
  6431  003158  2F71               	decfsz	___llmod@counter& (0+255),f,b
  6432  00315A  D7C0               	goto	l5894
  6433  00315C                     l983:
  6434                           
  6435                           ; BSR set to: 0
  6436  00315C  C068  F068         	movff	___llmod@dividend,?___llmod
  6437  003160  C069  F069         	movff	___llmod@dividend+1,?___llmod+1
  6438  003164  C06A  F06A         	movff	___llmod@dividend+2,?___llmod+2
  6439  003168  C06B  F06B         	movff	___llmod@dividend+3,?___llmod+3
  6440                           
  6441                           ; BSR set to: 0
  6442  00316C  0012               	return	
  6443  00316E                     __end_of___llmod:
  6444                           	opt stack 0
  6445                           tblptru	equ	0xFF8
  6446                           tblptrh	equ	0xFF7
  6447                           tblptrl	equ	0xFF6
  6448                           tablat	equ	0xFF5
  6449                           prodh	equ	0xFF4
  6450                           prodl	equ	0xFF3
  6451                           wreg	equ	0xFE8
  6452                           indf1	equ	0xFE7
  6453                           fsr1h	equ	0xFE2
  6454                           fsr1l	equ	0xFE1
  6455                           indf2	equ	0xFDF
  6456                           postinc2	equ	0xFDE
  6457                           postdec2	equ	0xFDD
  6458                           fsr2h	equ	0xFDA
  6459                           fsr2l	equ	0xFD9
  6460                           status	equ	0xFD8
  6461                           
  6462 ;; *************** function ___lldiv *****************
  6463 ;; Defined at:
  6464 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lldiv.c"
  6465 ;; Parameters:    Size  Location     Type
  6466 ;;  dividend        4    0[BANK0 ] unsigned long 
  6467 ;;  divisor         4    4[BANK0 ] unsigned long 
  6468 ;; Auto vars:     Size  Location     Type
  6469 ;;  quotient        4   45[COMRAM] unsigned long 
  6470 ;;  counter         1   49[COMRAM] unsigned char 
  6471 ;; Return value:  Size  Location     Type
  6472 ;;                  4    0[BANK0 ] unsigned long 
  6473 ;; Registers used:
  6474 ;;		wreg, status,2, status,0
  6475 ;; Tracked objects:
  6476 ;;		On entry : 0/0
  6477 ;;		On exit  : 0/0
  6478 ;;		Unchanged: 0/0
  6479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6480 ;;      Params:         0       8       0       0       0       0       0       0       0
  6481 ;;      Locals:         5       0       0       0       0       0       0       0       0
  6482 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6483 ;;      Totals:         6       8       0       0       0       0       0       0       0
  6484 ;;Total ram usage:       14 bytes
  6485 ;; Hardware stack levels used:    1
  6486 ;; Hardware stack levels required when called:    5
  6487 ;; This function calls:
  6488 ;;		Nothing
  6489 ;; This function is called by:
  6490 ;;		_sprintf
  6491 ;; This function uses a non-reentrant model
  6492 ;;
  6493                           
  6494                           	psect	text13
  6495  002FB6                     __ptext13:
  6496                           	opt stack 0
  6497  002FB6                     ___lldiv:
  6498                           	opt stack 24
  6499                           
  6500                           ; BSR set to: 0
  6501                           ;incstack = 0
  6502  002FB6  0E00               	movlw	0
  6503  002FB8  6E2E               	movwf	___lldiv@quotient,c
  6504  002FBA  0E00               	movlw	0
  6505  002FBC  6E2F               	movwf	___lldiv@quotient+1,c
  6506  002FBE  0E00               	movlw	0
  6507  002FC0  6E30               	movwf	___lldiv@quotient+2,c
  6508  002FC2  0E00               	movlw	0
  6509  002FC4  6E31               	movwf	___lldiv@quotient+3,c
  6510  002FC6  0100               	movlb	0	; () banked
  6511  002FC8  0100               	movlb	0	; () banked
  6512  002FCA  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6513  002FCC  1164               	iorwf	___lldiv@divisor& (0+255),w,b
  6514  002FCE  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  6515  002FD0  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  6516  002FD2  B4D8               	btfsc	status,2,c
  6517  002FD4  D058               	goto	l973
  6518                           
  6519                           ; BSR set to: 0
  6520  002FD6  6E2D               	movwf	??___lldiv& (0+255),c
  6521  002FD8  0E01               	movlw	1
  6522  002FDA  6E32               	movwf	___lldiv@counter,c
  6523  002FDC  502D               	movf	??___lldiv& (0+255),w,c
  6524  002FDE  D00B               	goto	l5094
  6525  002FE0                     l5092:
  6526                           
  6527                           ; BSR set to: 0
  6528  002FE0  0100               	movlb	0	; () banked
  6529  002FE2  90D8               	bcf	status,0,c
  6530  002FE4  0100               	movlb	0	; () banked
  6531  002FE6  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  6532  002FE8  0100               	movlb	0	; () banked
  6533  002FEA  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  6534  002FEC  0100               	movlb	0	; () banked
  6535  002FEE  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  6536  002FF0  0100               	movlb	0	; () banked
  6537  002FF2  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  6538  002FF4  2A32               	incf	___lldiv@counter,f,c
  6539  002FF6                     l5094:
  6540                           
  6541                           ; BSR set to: 0
  6542  002FF6  0100               	movlb	0	; () banked
  6543  002FF8  0100               	movlb	0	; () banked
  6544  002FFA  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  6545  002FFC  D7F1               	goto	l5092
  6546  002FFE                     l5096:
  6547                           
  6548                           ; BSR set to: 0
  6549  002FFE  90D8               	bcf	status,0,c
  6550  003000  362E               	rlcf	___lldiv@quotient,f,c
  6551  003002  362F               	rlcf	___lldiv@quotient+1,f,c
  6552  003004  3630               	rlcf	___lldiv@quotient+2,f,c
  6553  003006  3631               	rlcf	___lldiv@quotient+3,f,c
  6554                           
  6555                           ; BSR set to: 0
  6556  003008  0100               	movlb	0	; () banked
  6557  00300A  0100               	movlb	0	; () banked
  6558  00300C  5164               	movf	___lldiv@divisor& (0+255),w,b
  6559  00300E  0100               	movlb	0	; () banked
  6560  003010  0100               	movlb	0	; () banked
  6561  003012  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  6562  003014  0100               	movlb	0	; () banked
  6563  003016  0100               	movlb	0	; () banked
  6564  003018  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6565  00301A  0100               	movlb	0	; () banked
  6566  00301C  0100               	movlb	0	; () banked
  6567  00301E  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  6568  003020  0100               	movlb	0	; () banked
  6569  003022  0100               	movlb	0	; () banked
  6570  003024  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6571  003026  0100               	movlb	0	; () banked
  6572  003028  0100               	movlb	0	; () banked
  6573  00302A  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  6574  00302C  0100               	movlb	0	; () banked
  6575  00302E  0100               	movlb	0	; () banked
  6576  003030  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6577  003032  0100               	movlb	0	; () banked
  6578  003034  0100               	movlb	0	; () banked
  6579  003036  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  6580  003038  A0D8               	btfss	status,0,c
  6581  00303A  D019               	goto	l5104
  6582                           
  6583                           ; BSR set to: 0
  6584  00303C  0100               	movlb	0	; () banked
  6585  00303E  0100               	movlb	0	; () banked
  6586  003040  5164               	movf	___lldiv@divisor& (0+255),w,b
  6587  003042  0100               	movlb	0	; () banked
  6588  003044  0100               	movlb	0	; () banked
  6589  003046  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  6590  003048  0100               	movlb	0	; () banked
  6591  00304A  0100               	movlb	0	; () banked
  6592  00304C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6593  00304E  0100               	movlb	0	; () banked
  6594  003050  0100               	movlb	0	; () banked
  6595  003052  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  6596  003054  0100               	movlb	0	; () banked
  6597  003056  0100               	movlb	0	; () banked
  6598  003058  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6599  00305A  0100               	movlb	0	; () banked
  6600  00305C  0100               	movlb	0	; () banked
  6601  00305E  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  6602  003060  0100               	movlb	0	; () banked
  6603  003062  0100               	movlb	0	; () banked
  6604  003064  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6605  003066  0100               	movlb	0	; () banked
  6606  003068  0100               	movlb	0	; () banked
  6607  00306A  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  6608                           
  6609                           ; BSR set to: 0
  6610  00306C  802E               	bsf	___lldiv@quotient,0,c
  6611  00306E                     l5104:
  6612                           
  6613                           ; BSR set to: 0
  6614  00306E  0100               	movlb	0	; () banked
  6615  003070  90D8               	bcf	status,0,c
  6616  003072  0100               	movlb	0	; () banked
  6617  003074  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  6618  003076  0100               	movlb	0	; () banked
  6619  003078  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  6620  00307A  0100               	movlb	0	; () banked
  6621  00307C  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  6622  00307E  0100               	movlb	0	; () banked
  6623  003080  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  6624                           
  6625                           ; BSR set to: 0
  6626  003082  2E32               	decfsz	___lldiv@counter,f,c
  6627  003084  D7BC               	goto	l5096
  6628  003086                     l973:
  6629                           
  6630                           ; BSR set to: 0
  6631  003086  C02E  F060         	movff	___lldiv@quotient,?___lldiv
  6632  00308A  C02F  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  6633  00308E  C030  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  6634  003092  C031  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  6635                           
  6636                           ; BSR set to: 0
  6637  003096  0012               	return	
  6638  003098                     __end_of___lldiv:
  6639                           	opt stack 0
  6640                           tblptru	equ	0xFF8
  6641                           tblptrh	equ	0xFF7
  6642                           tblptrl	equ	0xFF6
  6643                           tablat	equ	0xFF5
  6644                           prodh	equ	0xFF4
  6645                           prodl	equ	0xFF3
  6646                           wreg	equ	0xFE8
  6647                           indf1	equ	0xFE7
  6648                           fsr1h	equ	0xFE2
  6649                           fsr1l	equ	0xFE1
  6650                           indf2	equ	0xFDF
  6651                           postinc2	equ	0xFDE
  6652                           postdec2	equ	0xFDD
  6653                           fsr2h	equ	0xFDA
  6654                           fsr2l	equ	0xFD9
  6655                           status	equ	0xFD8
  6656                           
  6657 ;; *************** function ___fttol *****************
  6658 ;; Defined at:
  6659 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\fttol.c"
  6660 ;; Parameters:    Size  Location     Type
  6661 ;;  f1              3   45[BANK0 ] float 
  6662 ;; Auto vars:     Size  Location     Type
  6663 ;;  lval            4   55[BANK0 ] unsigned long 
  6664 ;;  exp1            1   59[BANK0 ] unsigned char 
  6665 ;;  sign1           1   54[BANK0 ] unsigned char 
  6666 ;; Return value:  Size  Location     Type
  6667 ;;                  4   45[BANK0 ] long 
  6668 ;; Registers used:
  6669 ;;		wreg, status,2, status,0
  6670 ;; Tracked objects:
  6671 ;;		On entry : 0/0
  6672 ;;		On exit  : 0/0
  6673 ;;		Unchanged: 0/0
  6674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6675 ;;      Params:         0       4       0       0       0       0       0       0       0
  6676 ;;      Locals:         0       6       0       0       0       0       0       0       0
  6677 ;;      Temps:          0       5       0       0       0       0       0       0       0
  6678 ;;      Totals:         0      15       0       0       0       0       0       0       0
  6679 ;;Total ram usage:       15 bytes
  6680 ;; Hardware stack levels used:    1
  6681 ;; Hardware stack levels required when called:    5
  6682 ;; This function calls:
  6683 ;;		Nothing
  6684 ;; This function is called by:
  6685 ;;		_sprintf
  6686 ;; This function uses a non-reentrant model
  6687 ;;
  6688                           
  6689                           	psect	text14
  6690  002D1A                     __ptext14:
  6691                           	opt stack 0
  6692  002D1A                     ___fttol:
  6693                           	opt stack 24
  6694                           
  6695                           ; BSR set to: 0
  6696                           ;incstack = 0
  6697  002D1A  0100               	movlb	0	; () banked
  6698  002D1C  C08F  F091         	movff	___fttol@f1+2,??___fttol
  6699  002D20  0100               	movlb	0	; () banked
  6700  002D22  6B92               	clrf	(??___fttol+1)& (0+255),b
  6701  002D24  6B93               	clrf	(??___fttol+2)& (0+255),b
  6702  002D26  0100               	movlb	0	; () banked
  6703  002D28  0100               	movlb	0	; () banked
  6704  002D2A  358E               	rlcf	(___fttol@f1+1)& (0+255),w,b
  6705  002D2C  0100               	movlb	0	; () banked
  6706  002D2E  3791               	rlcf	??___fttol& (0+255),f,b
  6707  002D30  E301               	bnc	u3881
  6708  002D32  8192               	bsf	(??___fttol+1)& (0+255),0,b
  6709  002D34                     u3881:
  6710  002D34  0100               	movlb	0	; () banked
  6711  002D36  5191               	movf	??___fttol& (0+255),w,b
  6712  002D38  0100               	movlb	0	; () banked
  6713  002D3A  0100               	movlb	0	; () banked
  6714  002D3C  6F9B               	movwf	___fttol@exp1& (0+255),b
  6715  002D3E  0100               	movlb	0	; () banked
  6716  002D40  679B               	tstfsz	___fttol@exp1& (0+255),b
  6717  002D42  D001               	goto	l5046
  6718  002D44  D066               	goto	u3930
  6719  002D46                     l5046:
  6720                           
  6721                           ; BSR set to: 0
  6722  002D46  0E17               	movlw	23
  6723  002D48  0100               	movlb	0	; () banked
  6724  002D4A  6F91               	movwf	??___fttol& (0+255),b
  6725  002D4C  0100               	movlb	0	; () banked
  6726  002D4E  C08D  F092         	movff	___fttol@f1,??___fttol+1
  6727  002D52  0100               	movlb	0	; () banked
  6728  002D54  C08E  F093         	movff	___fttol@f1+1,??___fttol+2
  6729  002D58  0100               	movlb	0	; () banked
  6730  002D5A  C08F  F094         	movff	___fttol@f1+2,??___fttol+3
  6731  002D5E  0100               	movlb	0	; () banked
  6732  002D60  2991               	incf	??___fttol& (0+255),w,b
  6733  002D62  0100               	movlb	0	; () banked
  6734  002D64  6F95               	movwf	(??___fttol+4)& (0+255),b
  6735  002D66  D005               	goto	u3900
  6736  002D68                     u3905:
  6737  002D68  0100               	movlb	0	; () banked
  6738  002D6A  90D8               	bcf	status,0,c
  6739  002D6C  3394               	rrcf	(??___fttol+3)& (0+255),f,b
  6740  002D6E  3393               	rrcf	(??___fttol+2)& (0+255),f,b
  6741  002D70  3392               	rrcf	(??___fttol+1)& (0+255),f,b
  6742  002D72                     u3900:
  6743  002D72  0100               	movlb	0	; () banked
  6744  002D74  2F95               	decfsz	(??___fttol+4)& (0+255),f,b
  6745  002D76  D7F8               	goto	u3905
  6746  002D78  0100               	movlb	0	; () banked
  6747  002D7A  5192               	movf	(??___fttol+1)& (0+255),w,b
  6748  002D7C  0100               	movlb	0	; () banked
  6749  002D7E  0100               	movlb	0	; () banked
  6750  002D80  6F96               	movwf	___fttol@sign1& (0+255),b
  6751                           
  6752                           ; BSR set to: 0
  6753  002D82  0100               	movlb	0	; () banked
  6754  002D84  0100               	movlb	0	; () banked
  6755  002D86  8F8E               	bsf	(___fttol@f1+1)& (0+255),7,b
  6756                           
  6757                           ; BSR set to: 0
  6758  002D88  0EFF               	movlw	255
  6759  002D8A  0100               	movlb	0	; () banked
  6760  002D8C  0100               	movlb	0	; () banked
  6761  002D8E  178D               	andwf	___fttol@f1& (0+255),f,b
  6762  002D90  0EFF               	movlw	255
  6763  002D92  0100               	movlb	0	; () banked
  6764  002D94  0100               	movlb	0	; () banked
  6765  002D96  178E               	andwf	(___fttol@f1+1)& (0+255),f,b
  6766  002D98  0E00               	movlw	0
  6767  002D9A  0100               	movlb	0	; () banked
  6768  002D9C  0100               	movlb	0	; () banked
  6769  002D9E  178F               	andwf	(___fttol@f1+2)& (0+255),f,b
  6770                           
  6771                           ; BSR set to: 0
  6772  002DA0  0100               	movlb	0	; () banked
  6773  002DA2  0100               	movlb	0	; () banked
  6774  002DA4  518D               	movf	___fttol@f1& (0+255),w,b
  6775  002DA6  0100               	movlb	0	; () banked
  6776  002DA8  0100               	movlb	0	; () banked
  6777  002DAA  6F97               	movwf	___fttol@lval& (0+255),b
  6778  002DAC  0100               	movlb	0	; () banked
  6779  002DAE  0100               	movlb	0	; () banked
  6780  002DB0  518E               	movf	(___fttol@f1+1)& (0+255),w,b
  6781  002DB2  0100               	movlb	0	; () banked
  6782  002DB4  6F98               	movwf	(___fttol@lval+1)& (0+255),b
  6783  002DB6  0100               	movlb	0	; () banked
  6784  002DB8  518F               	movf	(___fttol@f1+2)& (0+255),w,b
  6785  002DBA  0100               	movlb	0	; () banked
  6786  002DBC  6F99               	movwf	(___fttol@lval+2)& (0+255),b
  6787  002DBE  0100               	movlb	0	; () banked
  6788  002DC0  6B9A               	clrf	(___fttol@lval+3)& (0+255),b
  6789                           
  6790                           ; BSR set to: 0
  6791  002DC2  0E8E               	movlw	142
  6792  002DC4  0100               	movlb	0	; () banked
  6793  002DC6  0100               	movlb	0	; () banked
  6794  002DC8  5F9B               	subwf	___fttol@exp1& (0+255),f,b
  6795                           
  6796                           ; BSR set to: 0
  6797  002DCA  0100               	movlb	0	; () banked
  6798  002DCC  0100               	movlb	0	; () banked
  6799  002DCE  AF9B               	btfss	___fttol@exp1& (0+255),7,b
  6800  002DD0  D01B               	goto	l5068
  6801                           
  6802                           ; BSR set to: 0
  6803  002DD2  0100               	movlb	0	; () banked
  6804  002DD4  0100               	movlb	0	; () banked
  6805  002DD6  519B               	movf	___fttol@exp1& (0+255),w,b
  6806  002DD8  0A80               	xorlw	128
  6807  002DDA  0100               	movlb	0	; () banked
  6808  002DDC  6F91               	movwf	??___fttol& (0+255),b
  6809  002DDE  0EF1               	movlw	241
  6810  002DE0  0A80               	xorlw	128
  6811  002DE2  0100               	movlb	0	; () banked
  6812  002DE4  5D91               	subwf	??___fttol& (0+255),w,b
  6813  002DE6  A0D8               	btfss	status,0,c
  6814  002DE8  D014               	goto	u3930
  6815  002DEA                     l5064:
  6816                           
  6817                           ; BSR set to: 0
  6818  002DEA  0100               	movlb	0	; () banked
  6819  002DEC  90D8               	bcf	status,0,c
  6820  002DEE  0100               	movlb	0	; () banked
  6821  002DF0  339A               	rrcf	(___fttol@lval+3)& (0+255),f,b
  6822  002DF2  0100               	movlb	0	; () banked
  6823  002DF4  3399               	rrcf	(___fttol@lval+2)& (0+255),f,b
  6824  002DF6  0100               	movlb	0	; () banked
  6825  002DF8  3398               	rrcf	(___fttol@lval+1)& (0+255),f,b
  6826  002DFA  0100               	movlb	0	; () banked
  6827  002DFC  3397               	rrcf	___fttol@lval& (0+255),f,b
  6828                           
  6829                           ; BSR set to: 0
  6830  002DFE  0100               	movlb	0	; () banked
  6831  002E00  0100               	movlb	0	; () banked
  6832  002E02  3F9B               	incfsz	___fttol@exp1& (0+255),f,b
  6833  002E04  D7F2               	goto	l5064
  6834  002E06  D024               	goto	l5078
  6835  002E08                     l5068:
  6836                           
  6837                           ; BSR set to: 0
  6838  002E08  0E17               	movlw	23
  6839  002E0A  0100               	movlb	0	; () banked
  6840  002E0C  0100               	movlb	0	; () banked
  6841  002E0E  659B               	cpfsgt	___fttol@exp1& (0+255),b
  6842  002E10  D01B               	goto	l5076
  6843  002E12                     u3930:
  6844                           
  6845                           ; BSR set to: 0
  6846  002E12  0E00               	movlw	0
  6847  002E14  0100               	movlb	0	; () banked
  6848  002E16  0100               	movlb	0	; () banked
  6849  002E18  6F8D               	movwf	?___fttol& (0+255),b
  6850  002E1A  0E00               	movlw	0
  6851  002E1C  0100               	movlb	0	; () banked
  6852  002E1E  6F8E               	movwf	(?___fttol+1)& (0+255),b
  6853  002E20  0E00               	movlw	0
  6854  002E22  0100               	movlb	0	; () banked
  6855  002E24  6F8F               	movwf	(?___fttol+2)& (0+255),b
  6856  002E26  0E00               	movlw	0
  6857  002E28  0100               	movlb	0	; () banked
  6858  002E2A  6F90               	movwf	(?___fttol+3)& (0+255),b
  6859  002E2C  D02E               	goto	l929
  6860  002E2E                     l5074:
  6861                           
  6862                           ; BSR set to: 0
  6863  002E2E  0100               	movlb	0	; () banked
  6864  002E30  90D8               	bcf	status,0,c
  6865  002E32  0100               	movlb	0	; () banked
  6866  002E34  3797               	rlcf	___fttol@lval& (0+255),f,b
  6867  002E36  0100               	movlb	0	; () banked
  6868  002E38  3798               	rlcf	(___fttol@lval+1)& (0+255),f,b
  6869  002E3A  0100               	movlb	0	; () banked
  6870  002E3C  3799               	rlcf	(___fttol@lval+2)& (0+255),f,b
  6871  002E3E  0100               	movlb	0	; () banked
  6872  002E40  379A               	rlcf	(___fttol@lval+3)& (0+255),f,b
  6873  002E42  0100               	movlb	0	; () banked
  6874  002E44  0100               	movlb	0	; () banked
  6875  002E46  079B               	decf	___fttol@exp1& (0+255),f,b
  6876  002E48                     l5076:
  6877                           
  6878                           ; BSR set to: 0
  6879  002E48  0100               	movlb	0	; () banked
  6880  002E4A  0100               	movlb	0	; () banked
  6881  002E4C  679B               	tstfsz	___fttol@exp1& (0+255),b
  6882  002E4E  D7EF               	goto	l5074
  6883  002E50                     l5078:
  6884                           
  6885                           ; BSR set to: 0
  6886  002E50  0100               	movlb	0	; () banked
  6887  002E52  0100               	movlb	0	; () banked
  6888  002E54  5196               	movf	___fttol@sign1& (0+255),w,b
  6889  002E56  B4D8               	btfsc	status,2,c
  6890  002E58  D010               	goto	l5082
  6891                           
  6892                           ; BSR set to: 0
  6893  002E5A  0100               	movlb	0	; () banked
  6894  002E5C  0100               	movlb	0	; () banked
  6895  002E5E  1F9A               	comf	(___fttol@lval+3)& (0+255),f,b
  6896  002E60  0100               	movlb	0	; () banked
  6897  002E62  1F99               	comf	(___fttol@lval+2)& (0+255),f,b
  6898  002E64  0100               	movlb	0	; () banked
  6899  002E66  1F98               	comf	(___fttol@lval+1)& (0+255),f,b
  6900  002E68  0100               	movlb	0	; () banked
  6901  002E6A  6D97               	negf	___fttol@lval& (0+255),b
  6902  002E6C  0E00               	movlw	0
  6903  002E6E  0100               	movlb	0	; () banked
  6904  002E70  2398               	addwfc	(___fttol@lval+1)& (0+255),f,b
  6905  002E72  0100               	movlb	0	; () banked
  6906  002E74  2399               	addwfc	(___fttol@lval+2)& (0+255),f,b
  6907  002E76  0100               	movlb	0	; () banked
  6908  002E78  239A               	addwfc	(___fttol@lval+3)& (0+255),f,b
  6909  002E7A                     l5082:
  6910                           
  6911                           ; BSR set to: 0
  6912  002E7A  C097  F08D         	movff	___fttol@lval,?___fttol
  6913  002E7E  C098  F08E         	movff	___fttol@lval+1,?___fttol+1
  6914  002E82  C099  F08F         	movff	___fttol@lval+2,?___fttol+2
  6915  002E86  C09A  F090         	movff	___fttol@lval+3,?___fttol+3
  6916  002E8A                     l929:
  6917                           
  6918                           ; BSR set to: 0
  6919  002E8A  0012               	return	
  6920  002E8C                     __end_of___fttol:
  6921                           	opt stack 0
  6922                           tblptru	equ	0xFF8
  6923                           tblptrh	equ	0xFF7
  6924                           tblptrl	equ	0xFF6
  6925                           tablat	equ	0xFF5
  6926                           prodh	equ	0xFF4
  6927                           prodl	equ	0xFF3
  6928                           wreg	equ	0xFE8
  6929                           indf1	equ	0xFE7
  6930                           fsr1h	equ	0xFE2
  6931                           fsr1l	equ	0xFE1
  6932                           indf2	equ	0xFDF
  6933                           postinc2	equ	0xFDE
  6934                           postdec2	equ	0xFDD
  6935                           fsr2h	equ	0xFDA
  6936                           fsr2l	equ	0xFD9
  6937                           status	equ	0xFD8
  6938                           
  6939 ;; *************** function ___ftneg *****************
  6940 ;; Defined at:
  6941 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftneg.c"
  6942 ;; Parameters:    Size  Location     Type
  6943 ;;  f1              3   44[COMRAM] float 
  6944 ;; Auto vars:     Size  Location     Type
  6945 ;;		None
  6946 ;; Return value:  Size  Location     Type
  6947 ;;                  3   44[COMRAM] float 
  6948 ;; Registers used:
  6949 ;;		wreg, status,2, status,0
  6950 ;; Tracked objects:
  6951 ;;		On entry : 0/0
  6952 ;;		On exit  : 0/0
  6953 ;;		Unchanged: 0/0
  6954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6955 ;;      Params:         3       0       0       0       0       0       0       0       0
  6956 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6957 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6958 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6959 ;;Total ram usage:        3 bytes
  6960 ;; Hardware stack levels used:    1
  6961 ;; Hardware stack levels required when called:    5
  6962 ;; This function calls:
  6963 ;;		Nothing
  6964 ;; This function is called by:
  6965 ;;		_sprintf
  6966 ;; This function uses a non-reentrant model
  6967 ;;
  6968                           
  6969                           	psect	text15
  6970  003A88                     __ptext15:
  6971                           	opt stack 0
  6972  003A88                     ___ftneg:
  6973                           	opt stack 24
  6974                           
  6975                           ; BSR set to: 0
  6976                           ;incstack = 0
  6977  003A88  0E7F               	movlw	127
  6978  003A8A  142F               	andwf	___ftneg@f1+2,w,c
  6979  003A8C  102E               	iorwf	___ftneg@f1+1,w,c
  6980  003A8E  102D               	iorwf	___ftneg@f1,w,c
  6981  003A90  B4D8               	btfsc	status,2,c
  6982  003A92  D006               	goto	l919
  6983  003A94  0E00               	movlw	0
  6984  003A96  1A2D               	xorwf	___ftneg@f1,f,c
  6985  003A98  0E00               	movlw	0
  6986  003A9A  1A2E               	xorwf	___ftneg@f1+1,f,c
  6987  003A9C  0E80               	movlw	128
  6988  003A9E  1A2F               	xorwf	___ftneg@f1+2,f,c
  6989  003AA0                     l919:
  6990  003AA0  C02D  F02D         	movff	___ftneg@f1,?___ftneg
  6991  003AA4  C02E  F02E         	movff	___ftneg@f1+1,?___ftneg+1
  6992  003AA8  C02F  F02F         	movff	___ftneg@f1+2,?___ftneg+2
  6993  003AAC  0012               	return	
  6994  003AAE                     __end_of___ftneg:
  6995                           	opt stack 0
  6996                           tblptru	equ	0xFF8
  6997                           tblptrh	equ	0xFF7
  6998                           tblptrl	equ	0xFF6
  6999                           tablat	equ	0xFF5
  7000                           prodh	equ	0xFF4
  7001                           prodl	equ	0xFF3
  7002                           wreg	equ	0xFE8
  7003                           indf1	equ	0xFE7
  7004                           fsr1h	equ	0xFE2
  7005                           fsr1l	equ	0xFE1
  7006                           indf2	equ	0xFDF
  7007                           postinc2	equ	0xFDE
  7008                           postdec2	equ	0xFDD
  7009                           fsr2h	equ	0xFDA
  7010                           fsr2l	equ	0xFD9
  7011                           status	equ	0xFD8
  7012                           
  7013 ;; *************** function ___ftge *****************
  7014 ;; Defined at:
  7015 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftge.c"
  7016 ;; Parameters:    Size  Location     Type
  7017 ;;  ff1             3   44[COMRAM] float 
  7018 ;;  ff2             3   47[COMRAM] float 
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;		None
  7021 ;; Return value:  Size  Location     Type
  7022 ;;		None               void
  7023 ;; Registers used:
  7024 ;;		wreg, status,2, status,0
  7025 ;; Tracked objects:
  7026 ;;		On entry : 0/0
  7027 ;;		On exit  : 0/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7030 ;;      Params:         6       0       0       0       0       0       0       0       0
  7031 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7032 ;;      Temps:          0       3       0       0       0       0       0       0       0
  7033 ;;      Totals:         6       3       0       0       0       0       0       0       0
  7034 ;;Total ram usage:        9 bytes
  7035 ;; Hardware stack levels used:    1
  7036 ;; Hardware stack levels required when called:    5
  7037 ;; This function calls:
  7038 ;;		Nothing
  7039 ;; This function is called by:
  7040 ;;		_sprintf
  7041 ;; This function uses a non-reentrant model
  7042 ;;
  7043                           
  7044                           	psect	text16
  7045  003432                     __ptext16:
  7046                           	opt stack 0
  7047  003432                     ___ftge:
  7048                           	opt stack 24
  7049                           
  7050                           ;incstack = 0
  7051  003432  AE2F               	btfss	___ftge@ff1+2,7,c
  7052  003434  D01A               	goto	l5022
  7053  003436  C02D  F060         	movff	___ftge@ff1,??___ftge
  7054  00343A  C02E  F061         	movff	___ftge@ff1+1,??___ftge+1
  7055  00343E  C02F  F062         	movff	___ftge@ff1+2,??___ftge+2
  7056  003442  0100               	movlb	0	; () banked
  7057  003444  1F60               	comf	??___ftge& (0+255),f,b
  7058  003446  1F61               	comf	(??___ftge+1)& (0+255),f,b
  7059  003448  1F62               	comf	(??___ftge+2)& (0+255),f,b
  7060  00344A  2B60               	incf	??___ftge& (0+255),f,b
  7061  00344C  0E00               	movlw	0
  7062  00344E  2361               	addwfc	(??___ftge+1)& (0+255),f,b
  7063  003450  2362               	addwfc	(??___ftge+2)& (0+255),f,b
  7064  003452  0E00               	movlw	0
  7065  003454  0100               	movlb	0	; () banked
  7066  003456  2560               	addwf	??___ftge& (0+255),w,b
  7067  003458  6E2D               	movwf	___ftge@ff1,c
  7068  00345A  0E00               	movlw	0
  7069  00345C  0100               	movlb	0	; () banked
  7070  00345E  2161               	addwfc	(??___ftge+1)& (0+255),w,b
  7071  003460  6E2E               	movwf	___ftge@ff1+1,c
  7072  003462  0E80               	movlw	128
  7073  003464  0100               	movlb	0	; () banked
  7074  003466  2162               	addwfc	(??___ftge+2)& (0+255),w,b
  7075  003468  6E2F               	movwf	___ftge@ff1+2,c
  7076  00346A                     l5022:
  7077  00346A  AE32               	btfss	___ftge@ff2+2,7,c
  7078  00346C  D01A               	goto	l5026
  7079  00346E  C030  F060         	movff	___ftge@ff2,??___ftge
  7080  003472  C031  F061         	movff	___ftge@ff2+1,??___ftge+1
  7081  003476  C032  F062         	movff	___ftge@ff2+2,??___ftge+2
  7082  00347A  0100               	movlb	0	; () banked
  7083  00347C  1F60               	comf	??___ftge& (0+255),f,b
  7084  00347E  1F61               	comf	(??___ftge+1)& (0+255),f,b
  7085  003480  1F62               	comf	(??___ftge+2)& (0+255),f,b
  7086  003482  2B60               	incf	??___ftge& (0+255),f,b
  7087  003484  0E00               	movlw	0
  7088  003486  2361               	addwfc	(??___ftge+1)& (0+255),f,b
  7089  003488  2362               	addwfc	(??___ftge+2)& (0+255),f,b
  7090  00348A  0E00               	movlw	0
  7091  00348C  0100               	movlb	0	; () banked
  7092  00348E  2560               	addwf	??___ftge& (0+255),w,b
  7093  003490  6E30               	movwf	___ftge@ff2,c
  7094  003492  0E00               	movlw	0
  7095  003494  0100               	movlb	0	; () banked
  7096  003496  2161               	addwfc	(??___ftge+1)& (0+255),w,b
  7097  003498  6E31               	movwf	___ftge@ff2+1,c
  7098  00349A  0E80               	movlw	128
  7099  00349C  0100               	movlb	0	; () banked
  7100  00349E  2162               	addwfc	(??___ftge+2)& (0+255),w,b
  7101  0034A0  6E32               	movwf	___ftge@ff2+2,c
  7102  0034A2                     l5026:
  7103  0034A2  0E00               	movlw	0
  7104  0034A4  1A2D               	xorwf	___ftge@ff1,f,c
  7105  0034A6  0E00               	movlw	0
  7106  0034A8  1A2E               	xorwf	___ftge@ff1+1,f,c
  7107  0034AA  0E80               	movlw	128
  7108  0034AC  1A2F               	xorwf	___ftge@ff1+2,f,c
  7109  0034AE  0E00               	movlw	0
  7110  0034B0  1A30               	xorwf	___ftge@ff2,f,c
  7111  0034B2  0E00               	movlw	0
  7112  0034B4  1A31               	xorwf	___ftge@ff2+1,f,c
  7113  0034B6  0E80               	movlw	128
  7114  0034B8  1A32               	xorwf	___ftge@ff2+2,f,c
  7115  0034BA  5030               	movf	___ftge@ff2,w,c
  7116  0034BC  5C2D               	subwf	___ftge@ff1,w,c
  7117  0034BE  5031               	movf	___ftge@ff2+1,w,c
  7118  0034C0  582E               	subwfb	___ftge@ff1+1,w,c
  7119  0034C2  5032               	movf	___ftge@ff2+2,w,c
  7120  0034C4  582F               	subwfb	___ftge@ff1+2,w,c
  7121  0034C6  B0D8               	btfsc	status,0,c
  7122  0034C8  D002               	goto	l5032
  7123  0034CA  90D8               	bcf	status,0,c
  7124  0034CC  D001               	goto	l903
  7125  0034CE                     l5032:
  7126  0034CE  80D8               	bsf	status,0,c
  7127  0034D0                     l903:
  7128  0034D0  0012               	return	
  7129  0034D2                     __end_of___ftge:
  7130                           	opt stack 0
  7131                           tblptru	equ	0xFF8
  7132                           tblptrh	equ	0xFF7
  7133                           tblptrl	equ	0xFF6
  7134                           tablat	equ	0xFF5
  7135                           prodh	equ	0xFF4
  7136                           prodl	equ	0xFF3
  7137                           wreg	equ	0xFE8
  7138                           indf1	equ	0xFE7
  7139                           fsr1h	equ	0xFE2
  7140                           fsr1l	equ	0xFE1
  7141                           indf2	equ	0xFDF
  7142                           postinc2	equ	0xFDE
  7143                           postdec2	equ	0xFDD
  7144                           fsr2h	equ	0xFDA
  7145                           fsr2l	equ	0xFD9
  7146                           status	equ	0xFD8
  7147                           
  7148 ;; *************** function ___asftsub *****************
  7149 ;; Defined at:
  7150 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\asftsub.c"
  7151 ;; Parameters:    Size  Location     Type
  7152 ;;  f1p             2   21[BANK0 ] PTR float 
  7153 ;;		 -> sprintf@fval(3), 
  7154 ;;  f2              3   23[BANK0 ] float 
  7155 ;; Auto vars:     Size  Location     Type
  7156 ;;		None
  7157 ;; Return value:  Size  Location     Type
  7158 ;;                  3   21[BANK0 ] float 
  7159 ;; Registers used:
  7160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7161 ;; Tracked objects:
  7162 ;;		On entry : 0/0
  7163 ;;		On exit  : 0/0
  7164 ;;		Unchanged: 0/0
  7165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7166 ;;      Params:         0       5       0       0       0       0       0       0       0
  7167 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7168 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7169 ;;      Totals:         0       5       0       0       0       0       0       0       0
  7170 ;;Total ram usage:        5 bytes
  7171 ;; Hardware stack levels used:    1
  7172 ;; Hardware stack levels required when called:    8
  7173 ;; This function calls:
  7174 ;;		___ftsub
  7175 ;; This function is called by:
  7176 ;;		_sprintf
  7177 ;; This function uses a non-reentrant model
  7178 ;;
  7179                           
  7180                           	psect	text17
  7181  003876                     __ptext17:
  7182                           	opt stack 0
  7183  003876                     ___asftsub:
  7184                           	opt stack 21
  7185                           
  7186                           ;	Return value of ___asftsub is never used
  7187                           
  7188                           ;incstack = 0
  7189  003876  C075  FFD9         	movff	___asftsub@f1p,fsr2l
  7190  00387A  C076  FFDA         	movff	___asftsub@f1p+1,fsr2h
  7191  00387E  0100               	movlb	0	; () banked
  7192  003880  CFDE F06F          	movff	postinc2,___ftsub@f1
  7193  003884  0100               	movlb	0	; () banked
  7194  003886  CFDE F070          	movff	postinc2,___ftsub@f1+1
  7195  00388A  0100               	movlb	0	; () banked
  7196  00388C  CFDD F071          	movff	postdec2,___ftsub@f1+2
  7197  003890  C077  F072         	movff	___asftsub@f2,___ftsub@f2
  7198  003894  C078  F073         	movff	___asftsub@f2+1,___ftsub@f2+1
  7199  003898  C079  F074         	movff	___asftsub@f2+2,___ftsub@f2+2
  7200  00389C  EC5C  F01C         	call	___ftsub	;wreg free
  7201  0038A0  C075  FFD9         	movff	___asftsub@f1p,fsr2l
  7202  0038A4  C076  FFDA         	movff	___asftsub@f1p+1,fsr2h
  7203  0038A8  C06F  FFDE         	movff	?___ftsub,postinc2
  7204  0038AC  C070  FFDE         	movff	?___ftsub+1,postinc2
  7205  0038B0  C071  FFDD         	movff	?___ftsub+2,postdec2
  7206  0038B4  52DD               	movf	postdec2,f,c
  7207  0038B6  0012               	return	
  7208  0038B8                     __end_of___asftsub:
  7209                           	opt stack 0
  7210                           tblptru	equ	0xFF8
  7211                           tblptrh	equ	0xFF7
  7212                           tblptrl	equ	0xFF6
  7213                           tablat	equ	0xFF5
  7214                           prodh	equ	0xFF4
  7215                           prodl	equ	0xFF3
  7216                           wreg	equ	0xFE8
  7217                           indf1	equ	0xFE7
  7218                           fsr1h	equ	0xFE2
  7219                           fsr1l	equ	0xFE1
  7220                           indf2	equ	0xFDF
  7221                           postinc2	equ	0xFDE
  7222                           postdec2	equ	0xFDD
  7223                           fsr2h	equ	0xFDA
  7224                           fsr2l	equ	0xFD9
  7225                           status	equ	0xFD8
  7226                           
  7227 ;; *************** function ___ftsub *****************
  7228 ;; Defined at:
  7229 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftsub.c"
  7230 ;; Parameters:    Size  Location     Type
  7231 ;;  f1              3   15[BANK0 ] float 
  7232 ;;  f2              3   18[BANK0 ] float 
  7233 ;; Auto vars:     Size  Location     Type
  7234 ;;		None
  7235 ;; Return value:  Size  Location     Type
  7236 ;;                  3   15[BANK0 ] float 
  7237 ;; Registers used:
  7238 ;;		wreg, status,2, status,0, cstack
  7239 ;; Tracked objects:
  7240 ;;		On entry : 0/0
  7241 ;;		On exit  : 0/0
  7242 ;;		Unchanged: 0/0
  7243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7244 ;;      Params:         0       6       0       0       0       0       0       0       0
  7245 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7246 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7247 ;;      Totals:         0       6       0       0       0       0       0       0       0
  7248 ;;Total ram usage:        6 bytes
  7249 ;; Hardware stack levels used:    1
  7250 ;; Hardware stack levels required when called:    7
  7251 ;; This function calls:
  7252 ;;		___ftadd
  7253 ;; This function is called by:
  7254 ;;		___asftsub
  7255 ;; This function uses a non-reentrant model
  7256 ;;
  7257                           
  7258                           	psect	text18
  7259  0038B8                     __ptext18:
  7260                           	opt stack 0
  7261  0038B8                     ___ftsub:
  7262                           	opt stack 21
  7263                           
  7264                           ;incstack = 0
  7265  0038B8  0E00               	movlw	0
  7266  0038BA  0100               	movlb	0	; () banked
  7267  0038BC  0100               	movlb	0	; () banked
  7268  0038BE  1B72               	xorwf	___ftsub@f2& (0+255),f,b
  7269  0038C0  0E00               	movlw	0
  7270  0038C2  0100               	movlb	0	; () banked
  7271  0038C4  0100               	movlb	0	; () banked
  7272  0038C6  1B73               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  7273  0038C8  0E80               	movlw	128
  7274  0038CA  0100               	movlb	0	; () banked
  7275  0038CC  0100               	movlb	0	; () banked
  7276  0038CE  1B74               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  7277                           
  7278                           ; BSR set to: 0
  7279  0038D0  C06F  F063         	movff	___ftsub@f1,___ftadd@f1
  7280  0038D4  C070  F064         	movff	___ftsub@f1+1,___ftadd@f1+1
  7281  0038D8  C071  F065         	movff	___ftsub@f1+2,___ftadd@f1+2
  7282  0038DC  C072  F066         	movff	___ftsub@f2,___ftadd@f2
  7283  0038E0  C073  F067         	movff	___ftsub@f2+1,___ftadd@f2+1
  7284  0038E4  C074  F068         	movff	___ftsub@f2+2,___ftadd@f2+2
  7285  0038E8  EC24  F010         	call	___ftadd	;wreg free
  7286  0038EC  C063  F06F         	movff	?___ftadd,?___ftsub
  7287  0038F0  C064  F070         	movff	?___ftadd+1,?___ftsub+1
  7288  0038F4  C065  F071         	movff	?___ftadd+2,?___ftsub+2
  7289  0038F8  0012               	return	
  7290  0038FA                     __end_of___ftsub:
  7291                           	opt stack 0
  7292                           tblptru	equ	0xFF8
  7293                           tblptrh	equ	0xFF7
  7294                           tblptrl	equ	0xFF6
  7295                           tablat	equ	0xFF5
  7296                           prodh	equ	0xFF4
  7297                           prodl	equ	0xFF3
  7298                           wreg	equ	0xFE8
  7299                           indf1	equ	0xFE7
  7300                           fsr1h	equ	0xFE2
  7301                           fsr1l	equ	0xFE1
  7302                           indf2	equ	0xFDF
  7303                           postinc2	equ	0xFDE
  7304                           postdec2	equ	0xFDD
  7305                           fsr2h	equ	0xFDA
  7306                           fsr2l	equ	0xFD9
  7307                           status	equ	0xFD8
  7308                           
  7309 ;; *************** function ___asftmul *****************
  7310 ;; Defined at:
  7311 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\asftmul.c"
  7312 ;; Parameters:    Size  Location     Type
  7313 ;;  f1p             2   38[BANK0 ] PTR float 
  7314 ;;		 -> sprintf@integ(3), 
  7315 ;;  f2              3   40[BANK0 ] float 
  7316 ;; Auto vars:     Size  Location     Type
  7317 ;;		None
  7318 ;; Return value:  Size  Location     Type
  7319 ;;                  3   38[BANK0 ] float 
  7320 ;; Registers used:
  7321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7322 ;; Tracked objects:
  7323 ;;		On entry : 0/0
  7324 ;;		On exit  : 0/0
  7325 ;;		Unchanged: 0/0
  7326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7327 ;;      Params:         0       5       0       0       0       0       0       0       0
  7328 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7329 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7330 ;;      Totals:         0       5       0       0       0       0       0       0       0
  7331 ;;Total ram usage:        5 bytes
  7332 ;; Hardware stack levels used:    1
  7333 ;; Hardware stack levels required when called:    7
  7334 ;; This function calls:
  7335 ;;		___ftmul
  7336 ;; This function is called by:
  7337 ;;		_sprintf
  7338 ;; This function uses a non-reentrant model
  7339 ;;
  7340                           
  7341                           	psect	text19
  7342  0038FA                     __ptext19:
  7343                           	opt stack 0
  7344  0038FA                     ___asftmul:
  7345                           	opt stack 22
  7346                           
  7347                           ;	Return value of ___asftmul is never used
  7348                           
  7349                           ;incstack = 0
  7350  0038FA  C086  FFD9         	movff	___asftmul@f1p,fsr2l
  7351  0038FE  C087  FFDA         	movff	___asftmul@f1p+1,fsr2h
  7352  003902  0100               	movlb	0	; () banked
  7353  003904  CFDE F077          	movff	postinc2,___ftmul@f1
  7354  003908  0100               	movlb	0	; () banked
  7355  00390A  CFDE F078          	movff	postinc2,___ftmul@f1+1
  7356  00390E  0100               	movlb	0	; () banked
  7357  003910  CFDD F079          	movff	postdec2,___ftmul@f1+2
  7358  003914  C088  F07A         	movff	___asftmul@f2,___ftmul@f2
  7359  003918  C089  F07B         	movff	___asftmul@f2+1,___ftmul@f2+1
  7360  00391C  C08A  F07C         	movff	___asftmul@f2+2,___ftmul@f2+2
  7361  003920  EC49  F013         	call	___ftmul	;wreg free
  7362  003924  C086  FFD9         	movff	___asftmul@f1p,fsr2l
  7363  003928  C087  FFDA         	movff	___asftmul@f1p+1,fsr2h
  7364  00392C  C077  FFDE         	movff	?___ftmul,postinc2
  7365  003930  C078  FFDE         	movff	?___ftmul+1,postinc2
  7366  003934  C079  FFDD         	movff	?___ftmul+2,postdec2
  7367  003938  52DD               	movf	postdec2,f,c
  7368  00393A  0012               	return	
  7369  00393C                     __end_of___asftmul:
  7370                           	opt stack 0
  7371                           tblptru	equ	0xFF8
  7372                           tblptrh	equ	0xFF7
  7373                           tblptrl	equ	0xFF6
  7374                           tablat	equ	0xFF5
  7375                           prodh	equ	0xFF4
  7376                           prodl	equ	0xFF3
  7377                           wreg	equ	0xFE8
  7378                           indf1	equ	0xFE7
  7379                           fsr1h	equ	0xFE2
  7380                           fsr1l	equ	0xFE1
  7381                           indf2	equ	0xFDF
  7382                           postinc2	equ	0xFDE
  7383                           postdec2	equ	0xFDD
  7384                           fsr2h	equ	0xFDA
  7385                           fsr2l	equ	0xFD9
  7386                           status	equ	0xFD8
  7387                           
  7388 ;; *************** function ___asftadd *****************
  7389 ;; Defined at:
  7390 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\asftadd.c"
  7391 ;; Parameters:    Size  Location     Type
  7392 ;;  f1p             2   48[BANK0 ] PTR float 
  7393 ;;		 -> sprintf@fval(3), 
  7394 ;;  f2              3   50[BANK0 ] float 
  7395 ;; Auto vars:     Size  Location     Type
  7396 ;;		None
  7397 ;; Return value:  Size  Location     Type
  7398 ;;                  3   48[BANK0 ] float 
  7399 ;; Registers used:
  7400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7401 ;; Tracked objects:
  7402 ;;		On entry : 0/0
  7403 ;;		On exit  : 0/0
  7404 ;;		Unchanged: 0/0
  7405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7406 ;;      Params:         0       5       0       0       0       0       0       0       0
  7407 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7408 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7409 ;;      Totals:         0       5       0       0       0       0       0       0       0
  7410 ;;Total ram usage:        5 bytes
  7411 ;; Hardware stack levels used:    1
  7412 ;; Hardware stack levels required when called:    7
  7413 ;; This function calls:
  7414 ;;		___ftadd
  7415 ;; This function is called by:
  7416 ;;		_sprintf
  7417 ;; This function uses a non-reentrant model
  7418 ;;
  7419                           
  7420                           	psect	text20
  7421  00393C                     __ptext20:
  7422                           	opt stack 0
  7423  00393C                     ___asftadd:
  7424                           	opt stack 22
  7425                           
  7426                           ;	Return value of ___asftadd is never used
  7427                           
  7428                           ;incstack = 0
  7429  00393C  C090  FFD9         	movff	___asftadd@f1p,fsr2l
  7430  003940  C091  FFDA         	movff	___asftadd@f1p+1,fsr2h
  7431  003944  0100               	movlb	0	; () banked
  7432  003946  CFDE F063          	movff	postinc2,___ftadd@f1
  7433  00394A  0100               	movlb	0	; () banked
  7434  00394C  CFDE F064          	movff	postinc2,___ftadd@f1+1
  7435  003950  0100               	movlb	0	; () banked
  7436  003952  CFDD F065          	movff	postdec2,___ftadd@f1+2
  7437  003956  C092  F066         	movff	___asftadd@f2,___ftadd@f2
  7438  00395A  C093  F067         	movff	___asftadd@f2+1,___ftadd@f2+1
  7439  00395E  C094  F068         	movff	___asftadd@f2+2,___ftadd@f2+2
  7440  003962  EC24  F010         	call	___ftadd	;wreg free
  7441  003966  C090  FFD9         	movff	___asftadd@f1p,fsr2l
  7442  00396A  C091  FFDA         	movff	___asftadd@f1p+1,fsr2h
  7443  00396E  C063  FFDE         	movff	?___ftadd,postinc2
  7444  003972  C064  FFDE         	movff	?___ftadd+1,postinc2
  7445  003976  C065  FFDD         	movff	?___ftadd+2,postdec2
  7446  00397A  52DD               	movf	postdec2,f,c
  7447  00397C  0012               	return	
  7448  00397E                     __end_of___asftadd:
  7449                           	opt stack 0
  7450                           tblptru	equ	0xFF8
  7451                           tblptrh	equ	0xFF7
  7452                           tblptrl	equ	0xFF6
  7453                           tablat	equ	0xFF5
  7454                           prodh	equ	0xFF4
  7455                           prodl	equ	0xFF3
  7456                           wreg	equ	0xFE8
  7457                           indf1	equ	0xFE7
  7458                           fsr1h	equ	0xFE2
  7459                           fsr1l	equ	0xFE1
  7460                           indf2	equ	0xFDF
  7461                           postinc2	equ	0xFDE
  7462                           postdec2	equ	0xFDD
  7463                           fsr2h	equ	0xFDA
  7464                           fsr2l	equ	0xFD9
  7465                           status	equ	0xFD8
  7466                           
  7467 ;; *************** function ___ftadd *****************
  7468 ;; Defined at:
  7469 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftadd.c"
  7470 ;; Parameters:    Size  Location     Type
  7471 ;;  f1              3    3[BANK0 ] float 
  7472 ;;  f2              3    6[BANK0 ] float 
  7473 ;; Auto vars:     Size  Location     Type
  7474 ;;  exp1            1   14[BANK0 ] unsigned char 
  7475 ;;  exp2            1   13[BANK0 ] unsigned char 
  7476 ;;  sign            1   12[BANK0 ] unsigned char 
  7477 ;; Return value:  Size  Location     Type
  7478 ;;                  3    3[BANK0 ] float 
  7479 ;; Registers used:
  7480 ;;		wreg, status,2, status,0, cstack
  7481 ;; Tracked objects:
  7482 ;;		On entry : 0/0
  7483 ;;		On exit  : 0/0
  7484 ;;		Unchanged: 0/0
  7485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7486 ;;      Params:         0       6       0       0       0       0       0       0       0
  7487 ;;      Locals:         0       3       0       0       0       0       0       0       0
  7488 ;;      Temps:          0       3       0       0       0       0       0       0       0
  7489 ;;      Totals:         0      12       0       0       0       0       0       0       0
  7490 ;;Total ram usage:       12 bytes
  7491 ;; Hardware stack levels used:    1
  7492 ;; Hardware stack levels required when called:    6
  7493 ;; This function calls:
  7494 ;;		___ftpack
  7495 ;; This function is called by:
  7496 ;;		___asftadd
  7497 ;;		___ftsub
  7498 ;; This function uses a non-reentrant model
  7499 ;;
  7500                           
  7501                           	psect	text21
  7502  002048                     __ptext21:
  7503                           	opt stack 0
  7504  002048                     ___ftadd:
  7505                           	opt stack 21
  7506                           
  7507                           ;incstack = 0
  7508  002048  0100               	movlb	0	; () banked
  7509  00204A  C065  F069         	movff	___ftadd@f1+2,??___ftadd
  7510  00204E  0100               	movlb	0	; () banked
  7511  002050  6B6A               	clrf	(??___ftadd+1)& (0+255),b
  7512  002052  6B6B               	clrf	(??___ftadd+2)& (0+255),b
  7513  002054  0100               	movlb	0	; () banked
  7514  002056  0100               	movlb	0	; () banked
  7515  002058  3564               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  7516  00205A  0100               	movlb	0	; () banked
  7517  00205C  3769               	rlcf	??___ftadd& (0+255),f,b
  7518  00205E  E301               	bnc	u3401
  7519  002060  816A               	bsf	(??___ftadd+1)& (0+255),0,b
  7520  002062                     u3401:
  7521  002062  0100               	movlb	0	; () banked
  7522  002064  5169               	movf	??___ftadd& (0+255),w,b
  7523  002066  0100               	movlb	0	; () banked
  7524  002068  0100               	movlb	0	; () banked
  7525  00206A  6F6E               	movwf	___ftadd@exp1& (0+255),b
  7526  00206C  0100               	movlb	0	; () banked
  7527  00206E  C068  F069         	movff	___ftadd@f2+2,??___ftadd
  7528  002072  0100               	movlb	0	; () banked
  7529  002074  6B6A               	clrf	(??___ftadd+1)& (0+255),b
  7530  002076  6B6B               	clrf	(??___ftadd+2)& (0+255),b
  7531  002078  0100               	movlb	0	; () banked
  7532  00207A  0100               	movlb	0	; () banked
  7533  00207C  3567               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  7534  00207E  0100               	movlb	0	; () banked
  7535  002080  3769               	rlcf	??___ftadd& (0+255),f,b
  7536  002082  E301               	bnc	u3411
  7537  002084  816A               	bsf	(??___ftadd+1)& (0+255),0,b
  7538  002086                     u3411:
  7539  002086  0100               	movlb	0	; () banked
  7540  002088  5169               	movf	??___ftadd& (0+255),w,b
  7541  00208A  0100               	movlb	0	; () banked
  7542  00208C  0100               	movlb	0	; () banked
  7543  00208E  6F6D               	movwf	___ftadd@exp2& (0+255),b
  7544                           
  7545                           ; BSR set to: 0
  7546  002090  0100               	movlb	0	; () banked
  7547  002092  0100               	movlb	0	; () banked
  7548  002094  516E               	movf	___ftadd@exp1& (0+255),w,b
  7549  002096  B4D8               	btfsc	status,2,c
  7550  002098  D016               	goto	l845
  7551                           
  7552                           ; BSR set to: 0
  7553  00209A  0100               	movlb	0	; () banked
  7554  00209C  0100               	movlb	0	; () banked
  7555  00209E  516D               	movf	___ftadd@exp2& (0+255),w,b
  7556  0020A0  0100               	movlb	0	; () banked
  7557  0020A2  0100               	movlb	0	; () banked
  7558  0020A4  5D6E               	subwf	___ftadd@exp1& (0+255),w,b
  7559  0020A6  B0D8               	btfsc	status,0,c
  7560  0020A8  D015               	goto	l4770
  7561                           
  7562                           ; BSR set to: 0
  7563  0020AA  0100               	movlb	0	; () banked
  7564  0020AC  0100               	movlb	0	; () banked
  7565  0020AE  516E               	movf	___ftadd@exp1& (0+255),w,b
  7566  0020B0  0800               	sublw	0
  7567  0020B2  0100               	movlb	0	; () banked
  7568  0020B4  0100               	movlb	0	; () banked
  7569  0020B6  256D               	addwf	___ftadd@exp2& (0+255),w,b
  7570  0020B8  0100               	movlb	0	; () banked
  7571  0020BA  6F69               	movwf	??___ftadd& (0+255),b
  7572  0020BC  0E19               	movlw	25
  7573  0020BE  0100               	movlb	0	; () banked
  7574  0020C0  5D69               	subwf	??___ftadd& (0+255),w,b
  7575  0020C2  A0D8               	btfss	status,0,c
  7576  0020C4  D007               	goto	l4770
  7577  0020C6                     l845:
  7578                           
  7579                           ; BSR set to: 0
  7580  0020C6  C066  F063         	movff	___ftadd@f2,?___ftadd
  7581  0020CA  C067  F064         	movff	___ftadd@f2+1,?___ftadd+1
  7582  0020CE  C068  F065         	movff	___ftadd@f2+2,?___ftadd+2
  7583  0020D2  D14F               	goto	l846
  7584  0020D4                     l4770:
  7585                           
  7586                           ; BSR set to: 0
  7587  0020D4  0100               	movlb	0	; () banked
  7588  0020D6  0100               	movlb	0	; () banked
  7589  0020D8  516D               	movf	___ftadd@exp2& (0+255),w,b
  7590  0020DA  B4D8               	btfsc	status,2,c
  7591  0020DC  D016               	goto	l849
  7592                           
  7593                           ; BSR set to: 0
  7594  0020DE  0100               	movlb	0	; () banked
  7595  0020E0  0100               	movlb	0	; () banked
  7596  0020E2  516E               	movf	___ftadd@exp1& (0+255),w,b
  7597  0020E4  0100               	movlb	0	; () banked
  7598  0020E6  0100               	movlb	0	; () banked
  7599  0020E8  5D6D               	subwf	___ftadd@exp2& (0+255),w,b
  7600  0020EA  B0D8               	btfsc	status,0,c
  7601  0020EC  D015               	goto	l4776
  7602                           
  7603                           ; BSR set to: 0
  7604  0020EE  0100               	movlb	0	; () banked
  7605  0020F0  0100               	movlb	0	; () banked
  7606  0020F2  516D               	movf	___ftadd@exp2& (0+255),w,b
  7607  0020F4  0800               	sublw	0
  7608  0020F6  0100               	movlb	0	; () banked
  7609  0020F8  0100               	movlb	0	; () banked
  7610  0020FA  256E               	addwf	___ftadd@exp1& (0+255),w,b
  7611  0020FC  0100               	movlb	0	; () banked
  7612  0020FE  6F69               	movwf	??___ftadd& (0+255),b
  7613  002100  0E19               	movlw	25
  7614  002102  0100               	movlb	0	; () banked
  7615  002104  5D69               	subwf	??___ftadd& (0+255),w,b
  7616  002106  A0D8               	btfss	status,0,c
  7617  002108  D007               	goto	l4776
  7618  00210A                     l849:
  7619                           
  7620                           ; BSR set to: 0
  7621  00210A  C063  F063         	movff	___ftadd@f1,?___ftadd
  7622  00210E  C064  F064         	movff	___ftadd@f1+1,?___ftadd+1
  7623  002112  C065  F065         	movff	___ftadd@f1+2,?___ftadd+2
  7624  002116  D12D               	goto	l846
  7625  002118                     l4776:
  7626                           
  7627                           ; BSR set to: 0
  7628  002118  0100               	movlb	0	; () banked
  7629  00211A  6F69               	movwf	??___ftadd& (0+255),b
  7630  00211C  0E06               	movlw	6
  7631  00211E  0100               	movlb	0	; () banked
  7632  002120  0100               	movlb	0	; () banked
  7633  002122  6F6C               	movwf	___ftadd@sign& (0+255),b
  7634  002124  0100               	movlb	0	; () banked
  7635  002126  5169               	movf	??___ftadd& (0+255),w,b
  7636                           
  7637                           ; BSR set to: 0
  7638  002128  0100               	movlb	0	; () banked
  7639  00212A  0100               	movlb	0	; () banked
  7640  00212C  AF65               	btfss	(___ftadd@f1+2)& (0+255),7,b
  7641  00212E  D003               	goto	l4782
  7642                           
  7643                           ; BSR set to: 0
  7644  002130  0100               	movlb	0	; () banked
  7645  002132  0100               	movlb	0	; () banked
  7646  002134  8F6C               	bsf	___ftadd@sign& (0+255),7,b
  7647  002136                     l4782:
  7648                           
  7649                           ; BSR set to: 0
  7650  002136  0100               	movlb	0	; () banked
  7651  002138  0100               	movlb	0	; () banked
  7652  00213A  AF68               	btfss	(___ftadd@f2+2)& (0+255),7,b
  7653  00213C  D003               	goto	l851
  7654                           
  7655                           ; BSR set to: 0
  7656  00213E  0100               	movlb	0	; () banked
  7657  002140  0100               	movlb	0	; () banked
  7658  002142  8D6C               	bsf	___ftadd@sign& (0+255),6,b
  7659  002144                     l851:
  7660                           
  7661                           ; BSR set to: 0
  7662  002144  0100               	movlb	0	; () banked
  7663  002146  0100               	movlb	0	; () banked
  7664  002148  8F64               	bsf	(___ftadd@f1+1)& (0+255),7,b
  7665                           
  7666                           ; BSR set to: 0
  7667  00214A  0EFF               	movlw	255
  7668  00214C  0100               	movlb	0	; () banked
  7669  00214E  0100               	movlb	0	; () banked
  7670  002150  1763               	andwf	___ftadd@f1& (0+255),f,b
  7671  002152  0EFF               	movlw	255
  7672  002154  0100               	movlb	0	; () banked
  7673  002156  0100               	movlb	0	; () banked
  7674  002158  1764               	andwf	(___ftadd@f1+1)& (0+255),f,b
  7675  00215A  0E00               	movlw	0
  7676  00215C  0100               	movlb	0	; () banked
  7677  00215E  0100               	movlb	0	; () banked
  7678  002160  1765               	andwf	(___ftadd@f1+2)& (0+255),f,b
  7679  002162  0100               	movlb	0	; () banked
  7680  002164  0100               	movlb	0	; () banked
  7681  002166  8F67               	bsf	(___ftadd@f2+1)& (0+255),7,b
  7682                           
  7683                           ; BSR set to: 0
  7684  002168  0EFF               	movlw	255
  7685  00216A  0100               	movlb	0	; () banked
  7686  00216C  0100               	movlb	0	; () banked
  7687  00216E  1766               	andwf	___ftadd@f2& (0+255),f,b
  7688  002170  0EFF               	movlw	255
  7689  002172  0100               	movlb	0	; () banked
  7690  002174  0100               	movlb	0	; () banked
  7691  002176  1767               	andwf	(___ftadd@f2+1)& (0+255),f,b
  7692  002178  0E00               	movlw	0
  7693  00217A  0100               	movlb	0	; () banked
  7694  00217C  0100               	movlb	0	; () banked
  7695  00217E  1768               	andwf	(___ftadd@f2+2)& (0+255),f,b
  7696                           
  7697                           ; BSR set to: 0
  7698  002180  0100               	movlb	0	; () banked
  7699  002182  0100               	movlb	0	; () banked
  7700  002184  516D               	movf	___ftadd@exp2& (0+255),w,b
  7701  002186  0100               	movlb	0	; () banked
  7702  002188  0100               	movlb	0	; () banked
  7703  00218A  5D6E               	subwf	___ftadd@exp1& (0+255),w,b
  7704  00218C  B0D8               	btfsc	status,0,c
  7705  00218E  D031               	goto	l4802
  7706  002190                     l4792:
  7707                           
  7708                           ; BSR set to: 0
  7709  002190  0100               	movlb	0	; () banked
  7710  002192  90D8               	bcf	status,0,c
  7711  002194  0100               	movlb	0	; () banked
  7712  002196  3766               	rlcf	___ftadd@f2& (0+255),f,b
  7713  002198  0100               	movlb	0	; () banked
  7714  00219A  3767               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  7715  00219C  0100               	movlb	0	; () banked
  7716  00219E  3768               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  7717  0021A0  0100               	movlb	0	; () banked
  7718  0021A2  0100               	movlb	0	; () banked
  7719  0021A4  076D               	decf	___ftadd@exp2& (0+255),f,b
  7720                           
  7721                           ; BSR set to: 0
  7722  0021A6  0100               	movlb	0	; () banked
  7723  0021A8  0100               	movlb	0	; () banked
  7724  0021AA  516D               	movf	___ftadd@exp2& (0+255),w,b
  7725  0021AC  0100               	movlb	0	; () banked
  7726  0021AE  0100               	movlb	0	; () banked
  7727  0021B0  196E               	xorwf	___ftadd@exp1& (0+255),w,b
  7728  0021B2  B4D8               	btfsc	status,2,c
  7729  0021B4  D016               	goto	l4800
  7730                           
  7731                           ; BSR set to: 0
  7732  0021B6  0100               	movlb	0	; () banked
  7733  0021B8  0100               	movlb	0	; () banked
  7734  0021BA  076C               	decf	___ftadd@sign& (0+255),f,b
  7735  0021BC  C06C  F069         	movff	___ftadd@sign,??___ftadd
  7736  0021C0  0E07               	movlw	7
  7737  0021C2  0100               	movlb	0	; () banked
  7738  0021C4  1769               	andwf	??___ftadd& (0+255),f,b
  7739  0021C6  B4D8               	btfsc	status,2,c
  7740  0021C8  D00C               	goto	l4800
  7741  0021CA  D7E2               	goto	l4792
  7742  0021CC                     l4798:
  7743                           
  7744                           ; BSR set to: 0
  7745  0021CC  0100               	movlb	0	; () banked
  7746  0021CE  90D8               	bcf	status,0,c
  7747  0021D0  0100               	movlb	0	; () banked
  7748  0021D2  3365               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  7749  0021D4  0100               	movlb	0	; () banked
  7750  0021D6  3364               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  7751  0021D8  0100               	movlb	0	; () banked
  7752  0021DA  3363               	rrcf	___ftadd@f1& (0+255),f,b
  7753  0021DC  0100               	movlb	0	; () banked
  7754  0021DE  0100               	movlb	0	; () banked
  7755  0021E0  2B6E               	incf	___ftadd@exp1& (0+255),f,b
  7756  0021E2                     l4800:
  7757                           
  7758                           ; BSR set to: 0
  7759  0021E2  0100               	movlb	0	; () banked
  7760  0021E4  0100               	movlb	0	; () banked
  7761  0021E6  516D               	movf	___ftadd@exp2& (0+255),w,b
  7762  0021E8  0100               	movlb	0	; () banked
  7763  0021EA  0100               	movlb	0	; () banked
  7764  0021EC  636E               	cpfseq	___ftadd@exp1& (0+255),b
  7765  0021EE  D7EE               	goto	l4798
  7766  0021F0  D038               	goto	l860
  7767  0021F2                     l4802:
  7768                           
  7769                           ; BSR set to: 0
  7770  0021F2  0100               	movlb	0	; () banked
  7771  0021F4  0100               	movlb	0	; () banked
  7772  0021F6  516E               	movf	___ftadd@exp1& (0+255),w,b
  7773  0021F8  0100               	movlb	0	; () banked
  7774  0021FA  0100               	movlb	0	; () banked
  7775  0021FC  5D6D               	subwf	___ftadd@exp2& (0+255),w,b
  7776  0021FE  B0D8               	btfsc	status,0,c
  7777  002200  D030               	goto	l860
  7778  002202                     l4804:
  7779                           
  7780                           ; BSR set to: 0
  7781  002202  0100               	movlb	0	; () banked
  7782  002204  90D8               	bcf	status,0,c
  7783  002206  0100               	movlb	0	; () banked
  7784  002208  3763               	rlcf	___ftadd@f1& (0+255),f,b
  7785  00220A  0100               	movlb	0	; () banked
  7786  00220C  3764               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  7787  00220E  0100               	movlb	0	; () banked
  7788  002210  3765               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  7789  002212  0100               	movlb	0	; () banked
  7790  002214  0100               	movlb	0	; () banked
  7791  002216  076E               	decf	___ftadd@exp1& (0+255),f,b
  7792                           
  7793                           ; BSR set to: 0
  7794  002218  0100               	movlb	0	; () banked
  7795  00221A  0100               	movlb	0	; () banked
  7796  00221C  516D               	movf	___ftadd@exp2& (0+255),w,b
  7797  00221E  0100               	movlb	0	; () banked
  7798  002220  0100               	movlb	0	; () banked
  7799  002222  196E               	xorwf	___ftadd@exp1& (0+255),w,b
  7800  002224  B4D8               	btfsc	status,2,c
  7801  002226  D016               	goto	l4812
  7802                           
  7803                           ; BSR set to: 0
  7804  002228  0100               	movlb	0	; () banked
  7805  00222A  0100               	movlb	0	; () banked
  7806  00222C  076C               	decf	___ftadd@sign& (0+255),f,b
  7807  00222E  C06C  F069         	movff	___ftadd@sign,??___ftadd
  7808  002232  0E07               	movlw	7
  7809  002234  0100               	movlb	0	; () banked
  7810  002236  1769               	andwf	??___ftadd& (0+255),f,b
  7811  002238  B4D8               	btfsc	status,2,c
  7812  00223A  D00C               	goto	l4812
  7813  00223C  D7E2               	goto	l4804
  7814  00223E                     l4810:
  7815                           
  7816                           ; BSR set to: 0
  7817  00223E  0100               	movlb	0	; () banked
  7818  002240  90D8               	bcf	status,0,c
  7819  002242  0100               	movlb	0	; () banked
  7820  002244  3368               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  7821  002246  0100               	movlb	0	; () banked
  7822  002248  3367               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  7823  00224A  0100               	movlb	0	; () banked
  7824  00224C  3366               	rrcf	___ftadd@f2& (0+255),f,b
  7825  00224E  0100               	movlb	0	; () banked
  7826  002250  0100               	movlb	0	; () banked
  7827  002252  2B6D               	incf	___ftadd@exp2& (0+255),f,b
  7828  002254                     l4812:
  7829                           
  7830                           ; BSR set to: 0
  7831  002254  0100               	movlb	0	; () banked
  7832  002256  0100               	movlb	0	; () banked
  7833  002258  516D               	movf	___ftadd@exp2& (0+255),w,b
  7834  00225A  0100               	movlb	0	; () banked
  7835  00225C  0100               	movlb	0	; () banked
  7836  00225E  636E               	cpfseq	___ftadd@exp1& (0+255),b
  7837  002260  D7EE               	goto	l4810
  7838  002262                     l860:
  7839                           
  7840                           ; BSR set to: 0
  7841  002262  0100               	movlb	0	; () banked
  7842  002264  0100               	movlb	0	; () banked
  7843  002266  AF6C               	btfss	___ftadd@sign& (0+255),7,b
  7844  002268  D018               	goto	l869
  7845                           
  7846                           ; BSR set to: 0
  7847  00226A  0EFF               	movlw	255
  7848  00226C  0100               	movlb	0	; () banked
  7849  00226E  0100               	movlb	0	; () banked
  7850  002270  1B63               	xorwf	___ftadd@f1& (0+255),f,b
  7851  002272  0EFF               	movlw	255
  7852  002274  0100               	movlb	0	; () banked
  7853  002276  0100               	movlb	0	; () banked
  7854  002278  1B64               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  7855  00227A  0EFF               	movlw	255
  7856  00227C  0100               	movlb	0	; () banked
  7857  00227E  0100               	movlb	0	; () banked
  7858  002280  1B65               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  7859  002282  0E01               	movlw	1
  7860  002284  0100               	movlb	0	; () banked
  7861  002286  0100               	movlb	0	; () banked
  7862  002288  2763               	addwf	___ftadd@f1& (0+255),f,b
  7863  00228A  0E00               	movlw	0
  7864  00228C  0100               	movlb	0	; () banked
  7865  00228E  0100               	movlb	0	; () banked
  7866  002290  2364               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  7867  002292  0E00               	movlw	0
  7868  002294  0100               	movlb	0	; () banked
  7869  002296  0100               	movlb	0	; () banked
  7870  002298  2365               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  7871  00229A                     l869:
  7872                           
  7873                           ; BSR set to: 0
  7874  00229A  0100               	movlb	0	; () banked
  7875  00229C  0100               	movlb	0	; () banked
  7876  00229E  AD6C               	btfss	___ftadd@sign& (0+255),6,b
  7877  0022A0  D018               	goto	l4818
  7878                           
  7879                           ; BSR set to: 0
  7880  0022A2  0EFF               	movlw	255
  7881  0022A4  0100               	movlb	0	; () banked
  7882  0022A6  0100               	movlb	0	; () banked
  7883  0022A8  1B66               	xorwf	___ftadd@f2& (0+255),f,b
  7884  0022AA  0EFF               	movlw	255
  7885  0022AC  0100               	movlb	0	; () banked
  7886  0022AE  0100               	movlb	0	; () banked
  7887  0022B0  1B67               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  7888  0022B2  0EFF               	movlw	255
  7889  0022B4  0100               	movlb	0	; () banked
  7890  0022B6  0100               	movlb	0	; () banked
  7891  0022B8  1B68               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  7892  0022BA  0E01               	movlw	1
  7893  0022BC  0100               	movlb	0	; () banked
  7894  0022BE  0100               	movlb	0	; () banked
  7895  0022C0  2766               	addwf	___ftadd@f2& (0+255),f,b
  7896  0022C2  0E00               	movlw	0
  7897  0022C4  0100               	movlb	0	; () banked
  7898  0022C6  0100               	movlb	0	; () banked
  7899  0022C8  2367               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7900  0022CA  0E00               	movlw	0
  7901  0022CC  0100               	movlb	0	; () banked
  7902  0022CE  0100               	movlb	0	; () banked
  7903  0022D0  2368               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7904  0022D2                     l4818:
  7905                           
  7906                           ; BSR set to: 0
  7907  0022D2  0100               	movlb	0	; () banked
  7908  0022D4  6F69               	movwf	??___ftadd& (0+255),b
  7909  0022D6  0E00               	movlw	0
  7910  0022D8  0100               	movlb	0	; () banked
  7911  0022DA  0100               	movlb	0	; () banked
  7912  0022DC  6F6C               	movwf	___ftadd@sign& (0+255),b
  7913  0022DE  0100               	movlb	0	; () banked
  7914  0022E0  5169               	movf	??___ftadd& (0+255),w,b
  7915                           
  7916                           ; BSR set to: 0
  7917  0022E2  0100               	movlb	0	; () banked
  7918  0022E4  0100               	movlb	0	; () banked
  7919  0022E6  5163               	movf	___ftadd@f1& (0+255),w,b
  7920  0022E8  0100               	movlb	0	; () banked
  7921  0022EA  0100               	movlb	0	; () banked
  7922  0022EC  2766               	addwf	___ftadd@f2& (0+255),f,b
  7923  0022EE  0100               	movlb	0	; () banked
  7924  0022F0  0100               	movlb	0	; () banked
  7925  0022F2  5164               	movf	(___ftadd@f1+1)& (0+255),w,b
  7926  0022F4  0100               	movlb	0	; () banked
  7927  0022F6  0100               	movlb	0	; () banked
  7928  0022F8  2367               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7929  0022FA  0100               	movlb	0	; () banked
  7930  0022FC  0100               	movlb	0	; () banked
  7931  0022FE  5165               	movf	(___ftadd@f1+2)& (0+255),w,b
  7932  002300  0100               	movlb	0	; () banked
  7933  002302  0100               	movlb	0	; () banked
  7934  002304  2368               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7935                           
  7936                           ; BSR set to: 0
  7937  002306  0100               	movlb	0	; () banked
  7938  002308  0100               	movlb	0	; () banked
  7939  00230A  AF68               	btfss	(___ftadd@f2+2)& (0+255),7,b
  7940  00230C  D020               	goto	l4828
  7941                           
  7942                           ; BSR set to: 0
  7943  00230E  0EFF               	movlw	255
  7944  002310  0100               	movlb	0	; () banked
  7945  002312  0100               	movlb	0	; () banked
  7946  002314  1B66               	xorwf	___ftadd@f2& (0+255),f,b
  7947  002316  0EFF               	movlw	255
  7948  002318  0100               	movlb	0	; () banked
  7949  00231A  0100               	movlb	0	; () banked
  7950  00231C  1B67               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  7951  00231E  0EFF               	movlw	255
  7952  002320  0100               	movlb	0	; () banked
  7953  002322  0100               	movlb	0	; () banked
  7954  002324  1B68               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  7955  002326  0E01               	movlw	1
  7956  002328  0100               	movlb	0	; () banked
  7957  00232A  0100               	movlb	0	; () banked
  7958  00232C  2766               	addwf	___ftadd@f2& (0+255),f,b
  7959  00232E  0E00               	movlw	0
  7960  002330  0100               	movlb	0	; () banked
  7961  002332  0100               	movlb	0	; () banked
  7962  002334  2367               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7963  002336  0E00               	movlw	0
  7964  002338  0100               	movlb	0	; () banked
  7965  00233A  0100               	movlb	0	; () banked
  7966  00233C  2368               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7967                           
  7968                           ; BSR set to: 0
  7969  00233E  0100               	movlb	0	; () banked
  7970  002340  6F69               	movwf	??___ftadd& (0+255),b
  7971  002342  0E01               	movlw	1
  7972  002344  0100               	movlb	0	; () banked
  7973  002346  0100               	movlb	0	; () banked
  7974  002348  6F6C               	movwf	___ftadd@sign& (0+255),b
  7975  00234A  0100               	movlb	0	; () banked
  7976  00234C  5169               	movf	??___ftadd& (0+255),w,b
  7977  00234E                     l4828:
  7978                           
  7979                           ; BSR set to: 0
  7980  00234E  C066  F02D         	movff	___ftadd@f2,___ftpack@arg
  7981  002352  C067  F02E         	movff	___ftadd@f2+1,___ftpack@arg+1
  7982  002356  C068  F02F         	movff	___ftadd@f2+2,___ftpack@arg+2
  7983  00235A  C06E  F030         	movff	___ftadd@exp1,___ftpack@exp
  7984  00235E  C06C  F031         	movff	___ftadd@sign,___ftpack@sign
  7985  002362  ECB7  F018         	call	___ftpack	;wreg free
  7986  002366  C02D  F063         	movff	?___ftpack,?___ftadd
  7987  00236A  C02E  F064         	movff	?___ftpack+1,?___ftadd+1
  7988  00236E  C02F  F065         	movff	?___ftpack+2,?___ftadd+2
  7989  002372                     l846:
  7990  002372  0012               	return	
  7991  002374                     __end_of___ftadd:
  7992                           	opt stack 0
  7993                           tblptru	equ	0xFF8
  7994                           tblptrh	equ	0xFF7
  7995                           tblptrl	equ	0xFF6
  7996                           tablat	equ	0xFF5
  7997                           prodh	equ	0xFF4
  7998                           prodl	equ	0xFF3
  7999                           wreg	equ	0xFE8
  8000                           indf1	equ	0xFE7
  8001                           fsr1h	equ	0xFE2
  8002                           fsr1l	equ	0xFE1
  8003                           indf2	equ	0xFDF
  8004                           postinc2	equ	0xFDE
  8005                           postdec2	equ	0xFDD
  8006                           fsr2h	equ	0xFDA
  8007                           fsr2l	equ	0xFD9
  8008                           status	equ	0xFD8
  8009                           
  8010 ;; *************** function _memset *****************
  8011 ;; Defined at:
  8012 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memset.c"
  8013 ;; Parameters:    Size  Location     Type
  8014 ;;  p1              2   44[COMRAM] PTR void 
  8015 ;;		 -> main@buffer(16), 
  8016 ;;  c               2   46[COMRAM] int 
  8017 ;;  n               2   48[COMRAM] unsigned int 
  8018 ;; Auto vars:     Size  Location     Type
  8019 ;;  p               2    0[BANK0 ] PTR unsigned char 
  8020 ;;		 -> main@buffer(16), 
  8021 ;; Return value:  Size  Location     Type
  8022 ;;                  2   44[COMRAM] PTR void 
  8023 ;; Registers used:
  8024 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8025 ;; Tracked objects:
  8026 ;;		On entry : 0/0
  8027 ;;		On exit  : 0/0
  8028 ;;		Unchanged: 0/0
  8029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8030 ;;      Params:         6       0       0       0       0       0       0       0       0
  8031 ;;      Locals:         0       2       0       0       0       0       0       0       0
  8032 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8033 ;;      Totals:         6       2       0       0       0       0       0       0       0
  8034 ;;Total ram usage:        8 bytes
  8035 ;; Hardware stack levels used:    1
  8036 ;; Hardware stack levels required when called:    5
  8037 ;; This function calls:
  8038 ;;		Nothing
  8039 ;; This function is called by:
  8040 ;;		_main
  8041 ;; This function uses a non-reentrant model
  8042 ;;
  8043                           
  8044                           	psect	text22
  8045  003A2A                     __ptext22:
  8046                           	opt stack 0
  8047  003A2A                     _memset:
  8048                           	opt stack 25
  8049                           
  8050                           ;incstack = 0
  8051  003A2A  0100               	movlb	0	; () banked
  8052  003A2C  C02E  F061         	movff	memset@p1+1,memset@p+1
  8053  003A30  0100               	movlb	0	; () banked
  8054  003A32  C02D  F060         	movff	memset@p1,memset@p
  8055  003A36  D00A               	goto	l4178
  8056  003A38                     l4174:
  8057  003A38  C060  FFD9         	movff	memset@p,fsr2l
  8058  003A3C  C061  FFDA         	movff	memset@p+1,fsr2h
  8059  003A40  C02F  FFDF         	movff	memset@c,indf2
  8060  003A44  0100               	movlb	0	; () banked
  8061  003A46  0100               	movlb	0	; () banked
  8062  003A48  4B60               	infsnz	memset@p& (0+255),f,b
  8063  003A4A  2B61               	incf	(memset@p+1)& (0+255),f,b
  8064  003A4C                     l4178:
  8065                           
  8066                           ; BSR set to: 0
  8067  003A4C  0631               	decf	memset@n,f,c
  8068  003A4E  A0D8               	btfss	status,0,c
  8069  003A50  0632               	decf	memset@n+1,f,c
  8070  003A52  2831               	incf	memset@n& (0+255),w,c
  8071  003A54  B4D8               	btfsc	status,2,c
  8072  003A56  2832               	incf	(memset@n+1)& (0+255),w,c
  8073  003A58  B4D8               	btfsc	status,2,c
  8074                           
  8075                           ;	Return value of _memset is never used
  8076  003A5A  0012               	return	
  8077  003A5C  D7ED               	goto	l4174
  8078  003A5E                     __end_of_memset:
  8079                           	opt stack 0
  8080                           tblptru	equ	0xFF8
  8081                           tblptrh	equ	0xFF7
  8082                           tblptrl	equ	0xFF6
  8083                           tablat	equ	0xFF5
  8084                           prodh	equ	0xFF4
  8085                           prodl	equ	0xFF3
  8086                           wreg	equ	0xFE8
  8087                           indf1	equ	0xFE7
  8088                           fsr1h	equ	0xFE2
  8089                           fsr1l	equ	0xFE1
  8090                           indf2	equ	0xFDF
  8091                           postinc2	equ	0xFDE
  8092                           postdec2	equ	0xFDD
  8093                           fsr2h	equ	0xFDA
  8094                           fsr2l	equ	0xFD9
  8095                           status	equ	0xFD8
  8096                           
  8097 ;; *************** function _lcd_write_buffer *****************
  8098 ;; Defined at:
  8099 ;;		line 54 in file "lcd.c"
  8100 ;; Parameters:    Size  Location     Type
  8101 ;;  buffer          2   46[COMRAM] PTR const unsigned char 
  8102 ;;		 -> main@buffer(16), STR_1(15), 
  8103 ;;  size            1   48[COMRAM] unsigned char 
  8104 ;; Auto vars:     Size  Location     Type
  8105 ;;  pos             2    5[BANK0 ] int 
  8106 ;; Return value:  Size  Location     Type
  8107 ;;		None               void
  8108 ;; Registers used:
  8109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  8110 ;; Tracked objects:
  8111 ;;		On entry : 0/0
  8112 ;;		On exit  : 0/0
  8113 ;;		Unchanged: 0/0
  8114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8115 ;;      Params:         3       0       0       0       0       0       0       0       0
  8116 ;;      Locals:         0       4       0       0       0       0       0       0       0
  8117 ;;      Temps:          0       3       0       0       0       0       0       0       0
  8118 ;;      Totals:         3       7       0       0       0       0       0       0       0
  8119 ;;Total ram usage:       10 bytes
  8120 ;; Hardware stack levels used:    1
  8121 ;; Hardware stack levels required when called:    7
  8122 ;; This function calls:
  8123 ;;		_lcd_write
  8124 ;; This function is called by:
  8125 ;;		_main
  8126 ;; This function uses a non-reentrant model
  8127 ;;
  8128                           
  8129                           	psect	text23
  8130  003226                     __ptext23:
  8131                           	opt stack 0
  8132  003226                     _lcd_write_buffer:
  8133                           	opt stack 23
  8134                           
  8135                           ;lcd.c: 55: int pos = 0;
  8136                           
  8137                           ;incstack = 0
  8138  003226  0E00               	movlw	0
  8139  003228  0100               	movlb	0	; () banked
  8140  00322A  0100               	movlb	0	; () banked
  8141  00322C  6F66               	movwf	(lcd_write_buffer@pos+1)& (0+255),b
  8142  00322E  0E00               	movlw	0
  8143  003230  0100               	movlb	0	; () banked
  8144  003232  6F65               	movwf	lcd_write_buffer@pos& (0+255),b
  8145                           
  8146                           ; BSR set to: 0
  8147                           ;lcd.c: 56: size = (size > 0x10) ? size = 0x10 : size;
  8148  003234  0E11               	movlw	17
  8149  003236  5C31               	subwf	lcd_write_buffer@size,w,c
  8150  003238  A0D8               	btfss	status,0,c
  8151  00323A  D006               	goto	L15
  8152                           
  8153                           ; BSR set to: 0
  8154                           
  8155                           ; BSR set to: 0
  8156                           
  8157                           ; BSR set to: 0
  8158  00323C  0100               	movlb	0	; () banked
  8159  00323E  6F60               	movwf	??_lcd_write_buffer& (0+255),b
  8160  003240  0E10               	movlw	16
  8161  003242  6E31               	movwf	lcd_write_buffer@size,c
  8162  003244  0100               	movlb	0	; () banked
  8163  003246  5160               	movf	??_lcd_write_buffer& (0+255),w,b
  8164  003248                     L15:
  8165  003248  0100               	movlb	0	; () banked
  8166  00324A  C031  F063         	movff	lcd_write_buffer@size,_lcd_write_buffer$1753
  8167  00324E  0100               	movlb	0	; () banked
  8168  003250  0100               	movlb	0	; () banked
  8169  003252  6B64               	clrf	(_lcd_write_buffer$1753+1)& (0+255),b
  8170                           
  8171                           ; BSR set to: 0
  8172                           
  8173                           ; BSR set to: 0
  8174  003254  C063  F031         	movff	_lcd_write_buffer$1753,lcd_write_buffer@size
  8175                           
  8176                           ; BSR set to: 0
  8177                           ;lcd.c: 57: for (pos = 0; pos < size; pos++)
  8178  003258  0E00               	movlw	0
  8179  00325A  0100               	movlb	0	; () banked
  8180  00325C  0100               	movlb	0	; () banked
  8181  00325E  6F66               	movwf	(lcd_write_buffer@pos+1)& (0+255),b
  8182  003260  0E00               	movlw	0
  8183  003262  0100               	movlb	0	; () banked
  8184  003264  6F65               	movwf	lcd_write_buffer@pos& (0+255),b
  8185  003266  D024               	goto	l3980
  8186  003268                     l3976:
  8187                           
  8188                           ; BSR set to: 0
  8189                           ;lcd.c: 58: {
  8190                           ;lcd.c: 59: lcd_write(buffer[pos]);
  8191  003268  C02F  F060         	movff	lcd_write_buffer@buffer,??_lcd_write_buffer
  8192  00326C  C030  F061         	movff	lcd_write_buffer@buffer+1,??_lcd_write_buffer+1
  8193  003270  0100               	movlb	0	; () banked
  8194  003272  0100               	movlb	0	; () banked
  8195  003274  5165               	movf	lcd_write_buffer@pos& (0+255),w,b
  8196  003276  0100               	movlb	0	; () banked
  8197  003278  2760               	addwf	??_lcd_write_buffer& (0+255),f,b
  8198  00327A  0100               	movlb	0	; () banked
  8199  00327C  0100               	movlb	0	; () banked
  8200  00327E  5166               	movf	(lcd_write_buffer@pos+1)& (0+255),w,b
  8201  003280  0100               	movlb	0	; () banked
  8202  003282  2361               	addwfc	(??_lcd_write_buffer+1)& (0+255),f,b
  8203  003284  C060  FFF6         	movff	??_lcd_write_buffer,tblptrl
  8204  003288  C061  FFF7         	movff	??_lcd_write_buffer+1,tblptrh
  8205  00328C  6AF8               	clrf	tblptru,c
  8206  00328E  0E07               	movlw	(high __ramtop+-1)
  8207  003290  64F7               	cpfsgt	tblptrh,c
  8208  003292  D003               	bra	u2297
  8209  003294  0008               	tblrd		*
  8210  003296  50F5               	movf	tablat,w,c
  8211  003298  D005               	bra	u2290
  8212  00329A                     u2297:
  8213  00329A  CFF6 FFE9          	movff	tblptrl,fsr0l
  8214  00329E  CFF7 FFEA          	movff	tblptrh,fsr0h
  8215  0032A2  50EF               	movf	indf0,w,c
  8216  0032A4                     u2290:
  8217  0032A4  EC63  F01D         	call	_lcd_write
  8218  0032A8  0100               	movlb	0	; () banked
  8219  0032AA  0100               	movlb	0	; () banked
  8220  0032AC  4B65               	infsnz	lcd_write_buffer@pos& (0+255),f,b
  8221  0032AE  2B66               	incf	(lcd_write_buffer@pos+1)& (0+255),f,b
  8222  0032B0                     l3980:
  8223                           
  8224                           ; BSR set to: 0
  8225  0032B0  5031               	movf	lcd_write_buffer@size,w,c
  8226  0032B2  0100               	movlb	0	; () banked
  8227  0032B4  6F60               	movwf	??_lcd_write_buffer& (0+255),b
  8228  0032B6  6B61               	clrf	(??_lcd_write_buffer+1)& (0+255),b
  8229  0032B8  0100               	movlb	0	; () banked
  8230  0032BA  0100               	movlb	0	; () banked
  8231  0032BC  5166               	movf	(lcd_write_buffer@pos+1)& (0+255),w,b
  8232  0032BE  0A80               	xorlw	128
  8233  0032C0  0100               	movlb	0	; () banked
  8234  0032C2  6F62               	movwf	(??_lcd_write_buffer+2)& (0+255),b
  8235  0032C4  5160               	movf	??_lcd_write_buffer& (0+255),w,b
  8236  0032C6  0100               	movlb	0	; () banked
  8237  0032C8  0100               	movlb	0	; () banked
  8238  0032CA  5D65               	subwf	lcd_write_buffer@pos& (0+255),w,b
  8239  0032CC  0100               	movlb	0	; () banked
  8240  0032CE  5161               	movf	(??_lcd_write_buffer+1)& (0+255),w,b
  8241  0032D0  0A80               	xorlw	128
  8242  0032D2  0100               	movlb	0	; () banked
  8243  0032D4  5962               	subwfb	(??_lcd_write_buffer+2)& (0+255),w,b
  8244  0032D6  B0D8               	btfsc	status,0,c
  8245                           
  8246                           ; BSR set to: 0
  8247                           
  8248                           ; BSR set to: 0
  8249  0032D8  0012               	return	
  8250  0032DA  D7C6               	goto	l3976
  8251  0032DC                     __end_of_lcd_write_buffer:
  8252                           	opt stack 0
  8253                           tblptru	equ	0xFF8
  8254                           tblptrh	equ	0xFF7
  8255                           tblptrl	equ	0xFF6
  8256                           tablat	equ	0xFF5
  8257                           prodh	equ	0xFF4
  8258                           prodl	equ	0xFF3
  8259                           indf0	equ	0xFEF
  8260                           fsr0h	equ	0xFEA
  8261                           fsr0l	equ	0xFE9
  8262                           wreg	equ	0xFE8
  8263                           indf1	equ	0xFE7
  8264                           fsr1h	equ	0xFE2
  8265                           fsr1l	equ	0xFE1
  8266                           indf2	equ	0xFDF
  8267                           postinc2	equ	0xFDE
  8268                           postdec2	equ	0xFDD
  8269                           fsr2h	equ	0xFDA
  8270                           fsr2l	equ	0xFD9
  8271                           status	equ	0xFD8
  8272                           
  8273 ;; *************** function _lcd_test *****************
  8274 ;; Defined at:
  8275 ;;		line 22 in file "lcd.c"
  8276 ;; Parameters:    Size  Location     Type
  8277 ;;		None
  8278 ;; Auto vars:     Size  Location     Type
  8279 ;;  msgTest        16    0[BANK0 ] const unsigned char [16]
  8280 ;;  pos             2   18[BANK0 ] int 
  8281 ;;  ln              2   16[BANK0 ] int 
  8282 ;; Return value:  Size  Location     Type
  8283 ;;		None               void
  8284 ;; Registers used:
  8285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  8286 ;; Tracked objects:
  8287 ;;		On entry : 0/0
  8288 ;;		On exit  : 0/0
  8289 ;;		Unchanged: 0/0
  8290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8291 ;;      Params:         0       0       0       0       0       0       0       0       0
  8292 ;;      Locals:         0      20       0       0       0       0       0       0       0
  8293 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8294 ;;      Totals:         1      20       0       0       0       0       0       0       0
  8295 ;;Total ram usage:       21 bytes
  8296 ;; Hardware stack levels used:    1
  8297 ;; Hardware stack levels required when called:    8
  8298 ;; This function calls:
  8299 ;;		_lcd_pos
  8300 ;;		_lcd_write
  8301 ;; This function is called by:
  8302 ;;		_main
  8303 ;; This function uses a non-reentrant model
  8304 ;;
  8305                           
  8306                           	psect	text24
  8307  003390                     __ptext24:
  8308                           	opt stack 0
  8309  003390                     _lcd_test:
  8310                           	opt stack 22
  8311                           
  8312                           ;lcd.c: 23: int ln;
  8313                           ;lcd.c: 24: int pos;
  8314                           ;lcd.c: 25: const char msgTest[ ] = {'T', 'E', 'S', 'T', 'E', 'T', 'E', 'S', 'T', 'E', '
      +                          T', 'E', 'S', 'T', 'E', '.'};
  8315                           
  8316                           ; BSR set to: 0
  8317                           ;incstack = 0
  8318  003390  0E77               	movlw	low lcd_test@F5277
  8319  003392  6EF6               	movwf	tblptrl,c
  8320  003394  0E08               	movlw	high lcd_test@F5277
  8321  003396  6EF7               	movwf	tblptrh,c
  8322  003398  EE20  F060         	lfsr	2,lcd_test@msgTest
  8323  00339C  0E10               	movlw	16
  8324  00339E                     u2410:
  8325  00339E  0009               	tblrd		*+
  8326  0033A0  CFF5 FFDE          	movff	tablat,postinc2
  8327  0033A4  2EE8               	decfsz	wreg,f,c
  8328  0033A6  D7FB               	bra	u2410
  8329                           
  8330                           ;lcd.c: 27: for (ln = 1; ln < 3; ln++) {
  8331  0033A8  0E00               	movlw	0
  8332  0033AA  0100               	movlb	0	; () banked
  8333  0033AC  0100               	movlb	0	; () banked
  8334  0033AE  6F71               	movwf	(lcd_test@ln+1)& (0+255),b
  8335  0033B0  0E01               	movlw	1
  8336  0033B2  0100               	movlb	0	; () banked
  8337  0033B4  6F70               	movwf	lcd_test@ln& (0+255),b
  8338  0033B6                     
  8339                           ; BSR set to: 0
  8340  0033B6  0100               	movlb	0	; () banked
  8341  0033B8  0100               	movlb	0	; () banked
  8342  0033BA  5171               	movf	(lcd_test@ln+1)& (0+255),w,b
  8343  0033BC  0A80               	xorlw	128
  8344  0033BE  0F80               	addlw	-128
  8345  0033C0  0E03               	movlw	3
  8346  0033C2  B4D8               	btfsc	status,2,c
  8347  0033C4  5D70               	subwf	lcd_test@ln& (0+255),w,b
  8348  0033C6  B0D8               	btfsc	status,0,c
  8349  0033C8  D033               	goto	l335
  8350                           
  8351                           ; BSR set to: 0
  8352                           ;lcd.c: 28: lcd_pos(ln, 1);
  8353                           
  8354                           ; BSR set to: 0
  8355                           
  8356                           ; BSR set to: 0
  8357  0033CA  6E32               	movwf	??_lcd_test& (0+255),c
  8358  0033CC  0E01               	movlw	1
  8359  0033CE  6E2F               	movwf	lcd_pos@coluna,c
  8360  0033D0  5032               	movf	??_lcd_test& (0+255),w,c
  8361  0033D2  0100               	movlb	0	; () banked
  8362  0033D4  0100               	movlb	0	; () banked
  8363  0033D6  5170               	movf	lcd_test@ln& (0+255),w,b
  8364  0033D8  ECDC  F01C         	call	_lcd_pos
  8365                           
  8366                           ;lcd.c: 29: for (pos = 0; pos < 0x10; pos++)
  8367  0033DC  0E00               	movlw	0
  8368  0033DE  0100               	movlb	0	; () banked
  8369  0033E0  0100               	movlb	0	; () banked
  8370  0033E2  6F73               	movwf	(lcd_test@pos+1)& (0+255),b
  8371  0033E4  0E00               	movlw	0
  8372  0033E6  0100               	movlb	0	; () banked
  8373  0033E8  6F72               	movwf	lcd_test@pos& (0+255),b
  8374  0033EA                     
  8375                           ; BSR set to: 0
  8376  0033EA  0100               	movlb	0	; () banked
  8377  0033EC  0100               	movlb	0	; () banked
  8378  0033EE  5173               	movf	(lcd_test@pos+1)& (0+255),w,b
  8379  0033F0  0A80               	xorlw	128
  8380  0033F2  0F80               	addlw	-128
  8381  0033F4  0E10               	movlw	16
  8382  0033F6  B4D8               	btfsc	status,2,c
  8383  0033F8  5D72               	subwf	lcd_test@pos& (0+255),w,b
  8384  0033FA  B0D8               	btfsc	status,0,c
  8385  0033FC  D014               	goto	l4152
  8386                           
  8387                           ; BSR set to: 0
  8388                           ;lcd.c: 30: {
  8389                           ;lcd.c: 31: lcd_write(msgTest[pos]);
  8390                           
  8391                           ; BSR set to: 0
  8392                           
  8393                           ; BSR set to: 0
  8394  0033FE  0100               	movlb	0	; () banked
  8395  003400  0E60               	movlw	low lcd_test@msgTest
  8396  003402  0100               	movlb	0	; () banked
  8397  003404  0100               	movlb	0	; () banked
  8398  003406  2572               	addwf	lcd_test@pos& (0+255),w,b
  8399  003408  6ED9               	movwf	fsr2l,c
  8400  00340A  0100               	movlb	0	; () banked
  8401  00340C  0E00               	movlw	high lcd_test@msgTest
  8402  00340E  0100               	movlb	0	; () banked
  8403  003410  0100               	movlb	0	; () banked
  8404  003412  2173               	addwfc	(lcd_test@pos+1)& (0+255),w,b
  8405  003414  6EDA               	movwf	fsr2h,c
  8406  003416  50DF               	movf	indf2,w,c
  8407  003418  EC63  F01D         	call	_lcd_write
  8408  00341C  0100               	movlb	0	; () banked
  8409  00341E  0100               	movlb	0	; () banked
  8410  003420  4B72               	infsnz	lcd_test@pos& (0+255),f,b
  8411  003422  2B73               	incf	(lcd_test@pos+1)& (0+255),f,b
  8412  003424  D7E2               	goto	L16
  8413  003426                     l4152:
  8414                           
  8415                           ; BSR set to: 0
  8416  003426  0100               	movlb	0	; () banked
  8417  003428  0100               	movlb	0	; () banked
  8418  00342A  4B70               	infsnz	lcd_test@ln& (0+255),f,b
  8419  00342C  2B71               	incf	(lcd_test@ln+1)& (0+255),f,b
  8420  00342E  D7C3               	goto	L17
  8421  003430                     l335:
  8422                           
  8423                           ; BSR set to: 0
  8424  003430  0012               	return	
  8425  003432                     __end_of_lcd_test:
  8426                           	opt stack 0
  8427                           tblptru	equ	0xFF8
  8428                           tblptrh	equ	0xFF7
  8429                           tblptrl	equ	0xFF6
  8430                           tablat	equ	0xFF5
  8431                           prodh	equ	0xFF4
  8432                           prodl	equ	0xFF3
  8433                           indf0	equ	0xFEF
  8434                           fsr0h	equ	0xFEA
  8435                           fsr0l	equ	0xFE9
  8436                           wreg	equ	0xFE8
  8437                           indf1	equ	0xFE7
  8438                           fsr1h	equ	0xFE2
  8439                           fsr1l	equ	0xFE1
  8440                           indf2	equ	0xFDF
  8441                           postinc2	equ	0xFDE
  8442                           postdec2	equ	0xFDD
  8443                           fsr2h	equ	0xFDA
  8444                           fsr2l	equ	0xFD9
  8445                           status	equ	0xFD8
  8446                           
  8447 ;; *************** function _lcd_write *****************
  8448 ;; Defined at:
  8449 ;;		line 36 in file "lcd.c"
  8450 ;; Parameters:    Size  Location     Type
  8451 ;;  x               1    wreg     unsigned char 
  8452 ;; Auto vars:     Size  Location     Type
  8453 ;;  x               1   45[COMRAM] unsigned char 
  8454 ;; Return value:  Size  Location     Type
  8455 ;;		None               void
  8456 ;; Registers used:
  8457 ;;		wreg, cstack
  8458 ;; Tracked objects:
  8459 ;;		On entry : 0/0
  8460 ;;		On exit  : 0/0
  8461 ;;		Unchanged: 0/0
  8462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8463 ;;      Params:         0       0       0       0       0       0       0       0       0
  8464 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8465 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8466 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8467 ;;Total ram usage:        1 bytes
  8468 ;; Hardware stack levels used:    1
  8469 ;; Hardware stack levels required when called:    6
  8470 ;; This function calls:
  8471 ;;		_lcd_delay
  8472 ;; This function is called by:
  8473 ;;		_lcd_test
  8474 ;;		_lcd_write_buffer
  8475 ;; This function uses a non-reentrant model
  8476 ;;
  8477                           
  8478                           	psect	text25
  8479  003AC6                     __ptext25:
  8480                           	opt stack 0
  8481  003AC6                     _lcd_write:
  8482                           	opt stack 23
  8483                           
  8484                           ; BSR set to: 0
  8485                           ;incstack = 0
  8486                           ;lcd_write@x stored from wreg
  8487  003AC6  CFE8 F02E          	movff	wreg,lcd_write@x
  8488                           
  8489                           ;lcd.c: 37: PORTD = x;
  8490  003ACA  C02E  FF83         	movff	lcd_write@x,3971	;volatile
  8491                           
  8492                           ;lcd.c: 38: PORTAbits.RA1 = 1;
  8493  003ACE  8280               	bsf	3968,1,c	;volatile
  8494                           
  8495                           ;lcd.c: 39: PORTAbits.RA2 = 0;
  8496  003AD0  9480               	bcf	3968,2,c	;volatile
  8497                           
  8498                           ;lcd.c: 40: PORTAbits.RA3 = 0;
  8499  003AD2  9680               	bcf	3968,3,c	;volatile
  8500                           
  8501                           ;lcd.c: 41: lcd_delay();
  8502  003AD4  EC99  F01D         	call	_lcd_delay	;wreg free
  8503                           
  8504                           ;lcd.c: 42: PORTAbits.RA3 = 1;
  8505  003AD8  8680               	bsf	3968,3,c	;volatile
  8506  003ADA  0012               	return	
  8507  003ADC                     __end_of_lcd_write:
  8508                           	opt stack 0
  8509                           tblptru	equ	0xFF8
  8510                           tblptrh	equ	0xFF7
  8511                           tblptrl	equ	0xFF6
  8512                           tablat	equ	0xFF5
  8513                           prodh	equ	0xFF4
  8514                           prodl	equ	0xFF3
  8515                           indf0	equ	0xFEF
  8516                           fsr0h	equ	0xFEA
  8517                           fsr0l	equ	0xFE9
  8518                           wreg	equ	0xFE8
  8519                           indf1	equ	0xFE7
  8520                           fsr1h	equ	0xFE2
  8521                           fsr1l	equ	0xFE1
  8522                           indf2	equ	0xFDF
  8523                           postinc2	equ	0xFDE
  8524                           postdec2	equ	0xFDD
  8525                           fsr2h	equ	0xFDA
  8526                           fsr2l	equ	0xFD9
  8527                           status	equ	0xFD8
  8528                           
  8529 ;; *************** function _lcd_pos *****************
  8530 ;; Defined at:
  8531 ;;		line 71 in file "lcd.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;  linha           1    wreg     unsigned char 
  8534 ;;  coluna          1   46[COMRAM] unsigned char 
  8535 ;; Auto vars:     Size  Location     Type
  8536 ;;  linha           1   48[COMRAM] unsigned char 
  8537 ;; Return value:  Size  Location     Type
  8538 ;;		None               void
  8539 ;; Registers used:
  8540 ;;		wreg, status,2, status,0, cstack
  8541 ;; Tracked objects:
  8542 ;;		On entry : 0/0
  8543 ;;		On exit  : 0/0
  8544 ;;		Unchanged: 0/0
  8545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8546 ;;      Params:         1       0       0       0       0       0       0       0       0
  8547 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8548 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8549 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8550 ;;Total ram usage:        3 bytes
  8551 ;; Hardware stack levels used:    1
  8552 ;; Hardware stack levels required when called:    7
  8553 ;; This function calls:
  8554 ;;		_lcd_write_cmd
  8555 ;; This function is called by:
  8556 ;;		_main
  8557 ;;		_lcd_test
  8558 ;; This function uses a non-reentrant model
  8559 ;;
  8560                           
  8561                           	psect	text26
  8562  0039B8                     __ptext26:
  8563                           	opt stack 0
  8564  0039B8                     _lcd_pos:
  8565                           	opt stack 22
  8566                           
  8567                           ;incstack = 0
  8568                           ;lcd_pos@linha stored from wreg
  8569  0039B8  CFE8 F031          	movff	wreg,lcd_pos@linha
  8570                           
  8571                           ;lcd.c: 73: if (linha <= 1) {
  8572  0039BC  0E02               	movlw	2
  8573  0039BE  5C31               	subwf	lcd_pos@linha,w,c
  8574  0039C0  B0D8               	btfsc	status,0,c
  8575  0039C2  D003               	goto	l4160
  8576                           
  8577                           ;lcd.c: 74: linha = 0x80;
  8578  0039C4  6E30               	movwf	??_lcd_pos& (0+255),c
  8579  0039C6  0E80               	movlw	128
  8580  0039C8  D005               	goto	L18
  8581  0039CA                     l4160:
  8582                           
  8583                           ;lcd.c: 76: if (linha >= 2) {
  8584  0039CA  0E01               	movlw	1
  8585  0039CC  6431               	cpfsgt	lcd_pos@linha,c
  8586  0039CE  D004               	goto	l4164
  8587                           
  8588                           ;lcd.c: 77: linha = 0xC0;
  8589  0039D0  6E30               	movwf	??_lcd_pos& (0+255),c
  8590  0039D2  0EC0               	movlw	192
  8591  0039D4                     L18:
  8592  0039D4  6E31               	movwf	lcd_pos@linha,c
  8593  0039D6  5030               	movf	??_lcd_pos& (0+255),w,c
  8594  0039D8                     l4164:
  8595                           
  8596                           ;lcd.c: 78: }
  8597                           ;lcd.c: 79: }
  8598                           ;lcd.c: 81: if ((coluna > 1) && (coluna <= 16)) linha += coluna;
  8599  0039D8  0E01               	movlw	1
  8600  0039DA  642F               	cpfsgt	lcd_pos@coluna,c
  8601  0039DC  D006               	goto	l4170
  8602  0039DE  0E11               	movlw	17
  8603  0039E0  5C2F               	subwf	lcd_pos@coluna,w,c
  8604  0039E2  B0D8               	btfsc	status,0,c
  8605  0039E4  D002               	goto	l4170
  8606  0039E6  502F               	movf	lcd_pos@coluna,w,c
  8607  0039E8  2631               	addwf	lcd_pos@linha,f,c
  8608  0039EA                     l4170:
  8609                           
  8610                           ;lcd.c: 82: lcd_write_cmd(linha);
  8611  0039EA  5031               	movf	lcd_pos@linha,w,c
  8612  0039EC  EC6E  F01D         	call	_lcd_write_cmd
  8613  0039F0  0012               	return	
  8614  0039F2                     __end_of_lcd_pos:
  8615                           	opt stack 0
  8616                           tblptru	equ	0xFF8
  8617                           tblptrh	equ	0xFF7
  8618                           tblptrl	equ	0xFF6
  8619                           tablat	equ	0xFF5
  8620                           prodh	equ	0xFF4
  8621                           prodl	equ	0xFF3
  8622                           indf0	equ	0xFEF
  8623                           fsr0h	equ	0xFEA
  8624                           fsr0l	equ	0xFE9
  8625                           wreg	equ	0xFE8
  8626                           indf1	equ	0xFE7
  8627                           fsr1h	equ	0xFE2
  8628                           fsr1l	equ	0xFE1
  8629                           indf2	equ	0xFDF
  8630                           postinc2	equ	0xFDE
  8631                           postdec2	equ	0xFDD
  8632                           fsr2h	equ	0xFDA
  8633                           fsr2l	equ	0xFD9
  8634                           status	equ	0xFD8
  8635                           
  8636 ;; *************** function _lcd_init *****************
  8637 ;; Defined at:
  8638 ;;		line 3 in file "lcd.c"
  8639 ;; Parameters:    Size  Location     Type
  8640 ;;		None
  8641 ;; Auto vars:     Size  Location     Type
  8642 ;;		None
  8643 ;; Return value:  Size  Location     Type
  8644 ;;		None               void
  8645 ;; Registers used:
  8646 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  8647 ;; Tracked objects:
  8648 ;;		On entry : 0/0
  8649 ;;		On exit  : 0/0
  8650 ;;		Unchanged: 0/0
  8651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8652 ;;      Params:         0       0       0       0       0       0       0       0       0
  8653 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8654 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8655 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8656 ;;Total ram usage:        1 bytes
  8657 ;; Hardware stack levels used:    1
  8658 ;; Hardware stack levels required when called:    7
  8659 ;; This function calls:
  8660 ;;		_lcd_enable
  8661 ;; This function is called by:
  8662 ;;		_main
  8663 ;; This function uses a non-reentrant model
  8664 ;;
  8665                           
  8666                           	psect	text27
  8667  003832                     __ptext27:
  8668                           	opt stack 0
  8669  003832                     _lcd_init:
  8670                           	opt stack 23
  8671                           
  8672                           ;lcd.c: 4: TRISAbits.RA1 = 0;
  8673                           
  8674                           ;incstack = 0
  8675  003832  9292               	bcf	3986,1,c	;volatile
  8676                           
  8677                           ;lcd.c: 5: TRISAbits.RA2 = 0;
  8678  003834  9492               	bcf	3986,2,c	;volatile
  8679                           
  8680                           ;lcd.c: 6: TRISAbits.RA3 = 0;
  8681  003836  9692               	bcf	3986,3,c	;volatile
  8682                           
  8683                           ;lcd.c: 7: TRISD = 0X00;
  8684  003838  0E00               	movlw	0
  8685  00383A  6E95               	movwf	3989,c	;volatile
  8686                           
  8687                           ;lcd.c: 9: _delay((unsigned long)((10)*(48000000L/4000.0)));
  8688  00383C  0E9C               	movlw	156
  8689  00383E  6E2E               	movwf	??_lcd_init& (0+255),c
  8690  003840  0ED7               	movlw	215
  8691  003842                     u4937:
  8692  003842  2EE8               	decfsz	wreg,f,c
  8693  003844  D7FE               	goto	u4937
  8694  003846  2E2E               	decfsz	??_lcd_init& (0+255),f,c
  8695  003848  D7FC               	goto	u4937
  8696  00384A  F000               	nop	
  8697                           
  8698                           ;lcd.c: 10: PORTD = 0X1;
  8699  00384C  0E01               	movlw	1
  8700  00384E  6E83               	movwf	3971,c	;volatile
  8701                           
  8702                           ;lcd.c: 11: lcd_enable();
  8703  003850  ECA9  F01D         	call	_lcd_enable	;wreg free
  8704                           
  8705                           ;lcd.c: 12: PORTD = 0X38;
  8706  003854  0E38               	movlw	56
  8707  003856  6E83               	movwf	3971,c	;volatile
  8708                           
  8709                           ;lcd.c: 13: lcd_enable();
  8710  003858  ECA9  F01D         	call	_lcd_enable	;wreg free
  8711                           
  8712                           ;lcd.c: 14: PORTD = 0X0e;
  8713  00385C  0E0E               	movlw	14
  8714  00385E  6E83               	movwf	3971,c	;volatile
  8715                           
  8716                           ;lcd.c: 15: lcd_enable();
  8717  003860  ECA9  F01D         	call	_lcd_enable	;wreg free
  8718                           
  8719                           ;lcd.c: 16: PORTD = 0X06;
  8720  003864  0E06               	movlw	6
  8721  003866  6E83               	movwf	3971,c	;volatile
  8722                           
  8723                           ;lcd.c: 17: lcd_enable();
  8724  003868  ECA9  F01D         	call	_lcd_enable	;wreg free
  8725                           
  8726                           ;lcd.c: 18: PORTD = 0X80;
  8727  00386C  0E80               	movlw	128
  8728  00386E  6E83               	movwf	3971,c	;volatile
  8729                           
  8730                           ;lcd.c: 19: lcd_enable();
  8731  003870  ECA9  F01D         	call	_lcd_enable	;wreg free
  8732  003874  0012               	return	
  8733  003876                     __end_of_lcd_init:
  8734                           	opt stack 0
  8735                           tblptru	equ	0xFF8
  8736                           tblptrh	equ	0xFF7
  8737                           tblptrl	equ	0xFF6
  8738                           tablat	equ	0xFF5
  8739                           prodh	equ	0xFF4
  8740                           prodl	equ	0xFF3
  8741                           indf0	equ	0xFEF
  8742                           fsr0h	equ	0xFEA
  8743                           fsr0l	equ	0xFE9
  8744                           wreg	equ	0xFE8
  8745                           indf1	equ	0xFE7
  8746                           fsr1h	equ	0xFE2
  8747                           fsr1l	equ	0xFE1
  8748                           indf2	equ	0xFDF
  8749                           postinc2	equ	0xFDE
  8750                           postdec2	equ	0xFDD
  8751                           fsr2h	equ	0xFDA
  8752                           fsr2l	equ	0xFD9
  8753                           status	equ	0xFD8
  8754                           
  8755 ;; *************** function _lcd_enable *****************
  8756 ;; Defined at:
  8757 ;;		line 63 in file "lcd.c"
  8758 ;; Parameters:    Size  Location     Type
  8759 ;;		None
  8760 ;; Auto vars:     Size  Location     Type
  8761 ;;		None
  8762 ;; Return value:  Size  Location     Type
  8763 ;;		None               void
  8764 ;; Registers used:
  8765 ;;		wreg, cstack
  8766 ;; Tracked objects:
  8767 ;;		On entry : 0/0
  8768 ;;		On exit  : 0/0
  8769 ;;		Unchanged: 0/0
  8770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8771 ;;      Params:         0       0       0       0       0       0       0       0       0
  8772 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8773 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8774 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8775 ;;Total ram usage:        0 bytes
  8776 ;; Hardware stack levels used:    1
  8777 ;; Hardware stack levels required when called:    6
  8778 ;; This function calls:
  8779 ;;		_lcd_delay
  8780 ;; This function is called by:
  8781 ;;		_main
  8782 ;;		_lcd_init
  8783 ;; This function uses a non-reentrant model
  8784 ;;
  8785                           
  8786                           	psect	text28
  8787  003B52                     __ptext28:
  8788                           	opt stack 0
  8789  003B52                     _lcd_enable:
  8790                           	opt stack 23
  8791                           
  8792                           ;lcd.c: 64: PORTAbits.RA1 = 0;
  8793                           
  8794                           ;incstack = 0
  8795  003B52  9280               	bcf	3968,1,c	;volatile
  8796                           
  8797                           ;lcd.c: 65: PORTAbits.RA2 = 0;
  8798  003B54  9480               	bcf	3968,2,c	;volatile
  8799                           
  8800                           ;lcd.c: 66: PORTAbits.RA3 = 0;
  8801  003B56  9680               	bcf	3968,3,c	;volatile
  8802                           
  8803                           ;lcd.c: 67: lcd_delay();
  8804  003B58  EC99  F01D         	call	_lcd_delay	;wreg free
  8805                           
  8806                           ;lcd.c: 68: PORTAbits.RA3 = 1;
  8807  003B5C  8680               	bsf	3968,3,c	;volatile
  8808  003B5E  0012               	return	
  8809  003B60                     __end_of_lcd_enable:
  8810                           	opt stack 0
  8811                           tblptru	equ	0xFF8
  8812                           tblptrh	equ	0xFF7
  8813                           tblptrl	equ	0xFF6
  8814                           tablat	equ	0xFF5
  8815                           prodh	equ	0xFF4
  8816                           prodl	equ	0xFF3
  8817                           indf0	equ	0xFEF
  8818                           fsr0h	equ	0xFEA
  8819                           fsr0l	equ	0xFE9
  8820                           wreg	equ	0xFE8
  8821                           indf1	equ	0xFE7
  8822                           fsr1h	equ	0xFE2
  8823                           fsr1l	equ	0xFE1
  8824                           indf2	equ	0xFDF
  8825                           postinc2	equ	0xFDE
  8826                           postdec2	equ	0xFDD
  8827                           fsr2h	equ	0xFDA
  8828                           fsr2l	equ	0xFD9
  8829                           status	equ	0xFD8
  8830                           
  8831 ;; *************** function _lcd_cursor_off *****************
  8832 ;; Defined at:
  8833 ;;		line 93 in file "lcd.c"
  8834 ;; Parameters:    Size  Location     Type
  8835 ;;		None
  8836 ;; Auto vars:     Size  Location     Type
  8837 ;;		None
  8838 ;; Return value:  Size  Location     Type
  8839 ;;		None               void
  8840 ;; Registers used:
  8841 ;;		wreg, cstack
  8842 ;; Tracked objects:
  8843 ;;		On entry : 0/0
  8844 ;;		On exit  : 0/0
  8845 ;;		Unchanged: 0/0
  8846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8847 ;;      Params:         0       0       0       0       0       0       0       0       0
  8848 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8849 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8850 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8851 ;;Total ram usage:        0 bytes
  8852 ;; Hardware stack levels used:    1
  8853 ;; Hardware stack levels required when called:    7
  8854 ;; This function calls:
  8855 ;;		_lcd_write_cmd
  8856 ;; This function is called by:
  8857 ;;		_main
  8858 ;; This function uses a non-reentrant model
  8859 ;;
  8860                           
  8861                           	psect	text29
  8862  003B82                     __ptext29:
  8863                           	opt stack 0
  8864  003B82                     _lcd_cursor_off:
  8865                           	opt stack 23
  8866                           
  8867                           ;lcd.c: 94: lcd_write_cmd(0x0C);
  8868                           
  8869                           ;incstack = 0
  8870  003B82  0E0C               	movlw	12
  8871  003B84  EC6E  F01D         	call	_lcd_write_cmd
  8872  003B88  0012               	return	
  8873  003B8A                     __end_of_lcd_cursor_off:
  8874                           	opt stack 0
  8875                           tblptru	equ	0xFF8
  8876                           tblptrh	equ	0xFF7
  8877                           tblptrl	equ	0xFF6
  8878                           tablat	equ	0xFF5
  8879                           prodh	equ	0xFF4
  8880                           prodl	equ	0xFF3
  8881                           indf0	equ	0xFEF
  8882                           fsr0h	equ	0xFEA
  8883                           fsr0l	equ	0xFE9
  8884                           wreg	equ	0xFE8
  8885                           indf1	equ	0xFE7
  8886                           fsr1h	equ	0xFE2
  8887                           fsr1l	equ	0xFE1
  8888                           indf2	equ	0xFDF
  8889                           postinc2	equ	0xFDE
  8890                           postdec2	equ	0xFDD
  8891                           fsr2h	equ	0xFDA
  8892                           fsr2l	equ	0xFD9
  8893                           status	equ	0xFD8
  8894                           
  8895 ;; *************** function _lcd_clear *****************
  8896 ;; Defined at:
  8897 ;;		line 89 in file "lcd.c"
  8898 ;; Parameters:    Size  Location     Type
  8899 ;;		None
  8900 ;; Auto vars:     Size  Location     Type
  8901 ;;		None
  8902 ;; Return value:  Size  Location     Type
  8903 ;;		None               void
  8904 ;; Registers used:
  8905 ;;		wreg, cstack
  8906 ;; Tracked objects:
  8907 ;;		On entry : 0/0
  8908 ;;		On exit  : 0/0
  8909 ;;		Unchanged: 0/0
  8910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8911 ;;      Params:         0       0       0       0       0       0       0       0       0
  8912 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8913 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8914 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8915 ;;Total ram usage:        0 bytes
  8916 ;; Hardware stack levels used:    1
  8917 ;; Hardware stack levels required when called:    7
  8918 ;; This function calls:
  8919 ;;		_lcd_write_cmd
  8920 ;; This function is called by:
  8921 ;;		_main
  8922 ;; This function uses a non-reentrant model
  8923 ;;
  8924                           
  8925                           	psect	text30
  8926  003B8A                     __ptext30:
  8927                           	opt stack 0
  8928  003B8A                     _lcd_clear:
  8929                           	opt stack 23
  8930                           
  8931                           ;lcd.c: 90: lcd_write_cmd(0x01);
  8932                           
  8933                           ;incstack = 0
  8934  003B8A  0E01               	movlw	1
  8935  003B8C  EC6E  F01D         	call	_lcd_write_cmd
  8936  003B90  0012               	return	
  8937  003B92                     __end_of_lcd_clear:
  8938                           	opt stack 0
  8939                           tblptru	equ	0xFF8
  8940                           tblptrh	equ	0xFF7
  8941                           tblptrl	equ	0xFF6
  8942                           tablat	equ	0xFF5
  8943                           prodh	equ	0xFF4
  8944                           prodl	equ	0xFF3
  8945                           indf0	equ	0xFEF
  8946                           fsr0h	equ	0xFEA
  8947                           fsr0l	equ	0xFE9
  8948                           wreg	equ	0xFE8
  8949                           indf1	equ	0xFE7
  8950                           fsr1h	equ	0xFE2
  8951                           fsr1l	equ	0xFE1
  8952                           indf2	equ	0xFDF
  8953                           postinc2	equ	0xFDE
  8954                           postdec2	equ	0xFDD
  8955                           fsr2h	equ	0xFDA
  8956                           fsr2l	equ	0xFD9
  8957                           status	equ	0xFD8
  8958                           
  8959 ;; *************** function _lcd_write_cmd *****************
  8960 ;; Defined at:
  8961 ;;		line 45 in file "lcd.c"
  8962 ;; Parameters:    Size  Location     Type
  8963 ;;  x               1    wreg     unsigned char 
  8964 ;; Auto vars:     Size  Location     Type
  8965 ;;  x               1   45[COMRAM] unsigned char 
  8966 ;; Return value:  Size  Location     Type
  8967 ;;		None               void
  8968 ;; Registers used:
  8969 ;;		wreg, cstack
  8970 ;; Tracked objects:
  8971 ;;		On entry : 0/0
  8972 ;;		On exit  : 0/0
  8973 ;;		Unchanged: 0/0
  8974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8975 ;;      Params:         0       0       0       0       0       0       0       0       0
  8976 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8977 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8978 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8979 ;;Total ram usage:        1 bytes
  8980 ;; Hardware stack levels used:    1
  8981 ;; Hardware stack levels required when called:    6
  8982 ;; This function calls:
  8983 ;;		_lcd_delay
  8984 ;; This function is called by:
  8985 ;;		_lcd_pos
  8986 ;;		_lcd_clear
  8987 ;;		_lcd_cursor_off
  8988 ;; This function uses a non-reentrant model
  8989 ;;
  8990                           
  8991                           	psect	text31
  8992  003ADC                     __ptext31:
  8993                           	opt stack 0
  8994  003ADC                     _lcd_write_cmd:
  8995                           	opt stack 22
  8996                           
  8997                           ;incstack = 0
  8998                           ;lcd_write_cmd@x stored from wreg
  8999  003ADC  CFE8 F02E          	movff	wreg,lcd_write_cmd@x
  9000                           
  9001                           ;lcd.c: 46: PORTD = x;
  9002  003AE0  C02E  FF83         	movff	lcd_write_cmd@x,3971	;volatile
  9003                           
  9004                           ;lcd.c: 47: PORTAbits.RA1 = 0;
  9005  003AE4  9280               	bcf	3968,1,c	;volatile
  9006                           
  9007                           ;lcd.c: 48: PORTAbits.RA2 = 0;
  9008  003AE6  9480               	bcf	3968,2,c	;volatile
  9009                           
  9010                           ;lcd.c: 49: PORTAbits.RA3 = 0;
  9011  003AE8  9680               	bcf	3968,3,c	;volatile
  9012                           
  9013                           ;lcd.c: 50: lcd_delay();
  9014  003AEA  EC99  F01D         	call	_lcd_delay	;wreg free
  9015                           
  9016                           ;lcd.c: 51: PORTAbits.RA3 = 1;
  9017  003AEE  8680               	bsf	3968,3,c	;volatile
  9018  003AF0  0012               	return	
  9019  003AF2                     __end_of_lcd_write_cmd:
  9020                           	opt stack 0
  9021                           tblptru	equ	0xFF8
  9022                           tblptrh	equ	0xFF7
  9023                           tblptrl	equ	0xFF6
  9024                           tablat	equ	0xFF5
  9025                           prodh	equ	0xFF4
  9026                           prodl	equ	0xFF3
  9027                           indf0	equ	0xFEF
  9028                           fsr0h	equ	0xFEA
  9029                           fsr0l	equ	0xFE9
  9030                           wreg	equ	0xFE8
  9031                           indf1	equ	0xFE7
  9032                           fsr1h	equ	0xFE2
  9033                           fsr1l	equ	0xFE1
  9034                           indf2	equ	0xFDF
  9035                           postinc2	equ	0xFDE
  9036                           postdec2	equ	0xFDD
  9037                           fsr2h	equ	0xFDA
  9038                           fsr2l	equ	0xFD9
  9039                           status	equ	0xFD8
  9040                           
  9041 ;; *************** function _lcd_delay *****************
  9042 ;; Defined at:
  9043 ;;		line 85 in file "lcd.c"
  9044 ;; Parameters:    Size  Location     Type
  9045 ;;		None
  9046 ;; Auto vars:     Size  Location     Type
  9047 ;;		None
  9048 ;; Return value:  Size  Location     Type
  9049 ;;		None               void
  9050 ;; Registers used:
  9051 ;;		wreg
  9052 ;; Tracked objects:
  9053 ;;		On entry : 0/0
  9054 ;;		On exit  : 0/0
  9055 ;;		Unchanged: 0/0
  9056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9057 ;;      Params:         0       0       0       0       0       0       0       0       0
  9058 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9059 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9060 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9061 ;;Total ram usage:        1 bytes
  9062 ;; Hardware stack levels used:    1
  9063 ;; Hardware stack levels required when called:    5
  9064 ;; This function calls:
  9065 ;;		Nothing
  9066 ;; This function is called by:
  9067 ;;		_lcd_write
  9068 ;;		_lcd_write_cmd
  9069 ;;		_lcd_enable
  9070 ;; This function uses a non-reentrant model
  9071 ;;
  9072                           
  9073                           	psect	text32
  9074  003B32                     __ptext32:
  9075                           	opt stack 0
  9076  003B32                     _lcd_delay:
  9077                           	opt stack 23
  9078                           
  9079                           ;lcd.c: 86: _delay((unsigned long)((2)*(48000000L/4000.0)));
  9080                           
  9081                           ;incstack = 0
  9082  003B32  0E20               	movlw	32
  9083  003B34  6E2D               	movwf	??_lcd_delay& (0+255),c
  9084  003B36  0E2A               	movlw	42
  9085  003B38                     u4947:
  9086  003B38  2EE8               	decfsz	wreg,f,c
  9087  003B3A  D7FE               	goto	u4947
  9088  003B3C  2E2D               	decfsz	??_lcd_delay& (0+255),f,c
  9089  003B3E  D7FC               	goto	u4947
  9090  003B40  0012               	return	
  9091  003B42                     __end_of_lcd_delay:
  9092                           	opt stack 0
  9093                           tblptru	equ	0xFF8
  9094                           tblptrh	equ	0xFF7
  9095                           tblptrl	equ	0xFF6
  9096                           tablat	equ	0xFF5
  9097                           prodh	equ	0xFF4
  9098                           prodl	equ	0xFF3
  9099                           indf0	equ	0xFEF
  9100                           fsr0h	equ	0xFEA
  9101                           fsr0l	equ	0xFE9
  9102                           wreg	equ	0xFE8
  9103                           indf1	equ	0xFE7
  9104                           fsr1h	equ	0xFE2
  9105                           fsr1l	equ	0xFE1
  9106                           indf2	equ	0xFDF
  9107                           postinc2	equ	0xFDE
  9108                           postdec2	equ	0xFDD
  9109                           fsr2h	equ	0xFDA
  9110                           fsr2l	equ	0xFD9
  9111                           status	equ	0xFD8
  9112                           
  9113 ;; *************** function ___lwtoft *****************
  9114 ;; Defined at:
  9115 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwtoft.c"
  9116 ;; Parameters:    Size  Location     Type
  9117 ;;  c               2    3[BANK0 ] unsigned int 
  9118 ;; Auto vars:     Size  Location     Type
  9119 ;;		None
  9120 ;; Return value:  Size  Location     Type
  9121 ;;                  3    3[BANK0 ] float 
  9122 ;; Registers used:
  9123 ;;		wreg, status,2, status,0, cstack
  9124 ;; Tracked objects:
  9125 ;;		On entry : 0/0
  9126 ;;		On exit  : 0/0
  9127 ;;		Unchanged: 0/0
  9128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9129 ;;      Params:         0       3       0       0       0       0       0       0       0
  9130 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9131 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9132 ;;      Totals:         0       5       0       0       0       0       0       0       0
  9133 ;;Total ram usage:        5 bytes
  9134 ;; Hardware stack levels used:    1
  9135 ;; Hardware stack levels required when called:    6
  9136 ;; This function calls:
  9137 ;;		___ftpack
  9138 ;; This function is called by:
  9139 ;;		_main
  9140 ;; This function uses a non-reentrant model
  9141 ;;
  9142                           
  9143                           	psect	text33
  9144  0039F2                     __ptext33:
  9145                           	opt stack 0
  9146  0039F2                     ___lwtoft:
  9147                           	opt stack 24
  9148                           
  9149                           ;incstack = 0
  9150  0039F2  0100               	movlb	0	; () banked
  9151  0039F4  C063  F02D         	movff	___lwtoft@c,___ftpack@arg
  9152  0039F8  0100               	movlb	0	; () banked
  9153  0039FA  C064  F02E         	movff	___lwtoft@c+1,___ftpack@arg+1
  9154  0039FE  6A2F               	clrf	___ftpack@arg+2,c
  9155  003A00  0100               	movlb	0	; () banked
  9156  003A02  6F66               	movwf	??___lwtoft& (0+255),b
  9157  003A04  0E8E               	movlw	142
  9158  003A06  6E30               	movwf	___ftpack@exp,c
  9159  003A08  0100               	movlb	0	; () banked
  9160  003A0A  5166               	movf	??___lwtoft& (0+255),w,b
  9161  003A0C  0100               	movlb	0	; () banked
  9162  003A0E  6F67               	movwf	(??___lwtoft+1)& (0+255),b
  9163  003A10  0E00               	movlw	0
  9164  003A12  6E31               	movwf	___ftpack@sign,c
  9165  003A14  0100               	movlb	0	; () banked
  9166  003A16  5167               	movf	(??___lwtoft+1)& (0+255),w,b
  9167  003A18  ECB7  F018         	call	___ftpack	;wreg free
  9168  003A1C  C02D  F063         	movff	?___ftpack,?___lwtoft
  9169  003A20  C02E  F064         	movff	?___ftpack+1,?___lwtoft+1
  9170  003A24  C02F  F065         	movff	?___ftpack+2,?___lwtoft+2
  9171  003A28  0012               	return	
  9172  003A2A                     __end_of___lwtoft:
  9173                           	opt stack 0
  9174                           tblptru	equ	0xFF8
  9175                           tblptrh	equ	0xFF7
  9176                           tblptrl	equ	0xFF6
  9177                           tablat	equ	0xFF5
  9178                           prodh	equ	0xFF4
  9179                           prodl	equ	0xFF3
  9180                           indf0	equ	0xFEF
  9181                           fsr0h	equ	0xFEA
  9182                           fsr0l	equ	0xFE9
  9183                           wreg	equ	0xFE8
  9184                           indf1	equ	0xFE7
  9185                           fsr1h	equ	0xFE2
  9186                           fsr1l	equ	0xFE1
  9187                           indf2	equ	0xFDF
  9188                           postinc2	equ	0xFDE
  9189                           postdec2	equ	0xFDD
  9190                           fsr2h	equ	0xFDA
  9191                           fsr2l	equ	0xFD9
  9192                           status	equ	0xFD8
  9193                           
  9194 ;; *************** function ___ftdiv *****************
  9195 ;; Defined at:
  9196 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftdiv.c"
  9197 ;; Parameters:    Size  Location     Type
  9198 ;;  f1              3    8[BANK0 ] float 
  9199 ;;  f2              3   11[BANK0 ] float 
  9200 ;; Auto vars:     Size  Location     Type
  9201 ;;  f3              3   18[BANK0 ] float 
  9202 ;;  sign            1   22[BANK0 ] unsigned char 
  9203 ;;  exp             1   21[BANK0 ] unsigned char 
  9204 ;;  cntr            1   17[BANK0 ] unsigned char 
  9205 ;; Return value:  Size  Location     Type
  9206 ;;                  3    8[BANK0 ] float 
  9207 ;; Registers used:
  9208 ;;		wreg, status,2, status,0, cstack
  9209 ;; Tracked objects:
  9210 ;;		On entry : 0/0
  9211 ;;		On exit  : 0/0
  9212 ;;		Unchanged: 0/0
  9213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9214 ;;      Params:         0       6       0       0       0       0       0       0       0
  9215 ;;      Locals:         0       6       0       0       0       0       0       0       0
  9216 ;;      Temps:          0       3       0       0       0       0       0       0       0
  9217 ;;      Totals:         0      15       0       0       0       0       0       0       0
  9218 ;;Total ram usage:       15 bytes
  9219 ;; Hardware stack levels used:    1
  9220 ;; Hardware stack levels required when called:    6
  9221 ;; This function calls:
  9222 ;;		___ftpack
  9223 ;; This function is called by:
  9224 ;;		_main
  9225 ;; This function uses a non-reentrant model
  9226 ;;
  9227                           
  9228                           	psect	text34
  9229  002A00                     __ptext34:
  9230                           	opt stack 0
  9231  002A00                     ___ftdiv:
  9232                           	opt stack 24
  9233                           
  9234                           ;incstack = 0
  9235  002A00  0100               	movlb	0	; () banked
  9236  002A02  C06A  F06E         	movff	___ftdiv@f1+2,??___ftdiv
  9237  002A06  0100               	movlb	0	; () banked
  9238  002A08  6B6F               	clrf	(??___ftdiv+1)& (0+255),b
  9239  002A0A  6B70               	clrf	(??___ftdiv+2)& (0+255),b
  9240  002A0C  0100               	movlb	0	; () banked
  9241  002A0E  0100               	movlb	0	; () banked
  9242  002A10  3569               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  9243  002A12  0100               	movlb	0	; () banked
  9244  002A14  376E               	rlcf	??___ftdiv& (0+255),f,b
  9245  002A16  E301               	bnc	u3611
  9246  002A18  816F               	bsf	(??___ftdiv+1)& (0+255),0,b
  9247  002A1A                     u3611:
  9248  002A1A  0100               	movlb	0	; () banked
  9249  002A1C  516E               	movf	??___ftdiv& (0+255),w,b
  9250  002A1E  0100               	movlb	0	; () banked
  9251  002A20  0100               	movlb	0	; () banked
  9252  002A22  6F75               	movwf	___ftdiv@exp& (0+255),b
  9253  002A24  0100               	movlb	0	; () banked
  9254  002A26  6775               	tstfsz	___ftdiv@exp& (0+255),b
  9255  002A28  D001               	goto	l4838
  9256  002A2A  D015               	goto	u3640
  9257  002A2C                     l4838:
  9258                           
  9259                           ; BSR set to: 0
  9260  002A2C  0100               	movlb	0	; () banked
  9261  002A2E  C06D  F06E         	movff	___ftdiv@f2+2,??___ftdiv
  9262  002A32  0100               	movlb	0	; () banked
  9263  002A34  6B6F               	clrf	(??___ftdiv+1)& (0+255),b
  9264  002A36  6B70               	clrf	(??___ftdiv+2)& (0+255),b
  9265  002A38  0100               	movlb	0	; () banked
  9266  002A3A  0100               	movlb	0	; () banked
  9267  002A3C  356C               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  9268  002A3E  0100               	movlb	0	; () banked
  9269  002A40  376E               	rlcf	??___ftdiv& (0+255),f,b
  9270  002A42  E301               	bnc	u3631
  9271  002A44  816F               	bsf	(??___ftdiv+1)& (0+255),0,b
  9272  002A46                     u3631:
  9273  002A46  0100               	movlb	0	; () banked
  9274  002A48  516E               	movf	??___ftdiv& (0+255),w,b
  9275  002A4A  0100               	movlb	0	; () banked
  9276  002A4C  0100               	movlb	0	; () banked
  9277  002A4E  6F76               	movwf	___ftdiv@sign& (0+255),b
  9278  002A50  0100               	movlb	0	; () banked
  9279  002A52  6776               	tstfsz	___ftdiv@sign& (0+255),b
  9280  002A54  D00D               	goto	l4844
  9281  002A56                     u3640:
  9282                           
  9283                           ; BSR set to: 0
  9284  002A56  0E00               	movlw	0
  9285  002A58  0100               	movlb	0	; () banked
  9286  002A5A  0100               	movlb	0	; () banked
  9287  002A5C  6F68               	movwf	?___ftdiv& (0+255),b
  9288  002A5E  0E00               	movlw	0
  9289  002A60  0100               	movlb	0	; () banked
  9290  002A62  0100               	movlb	0	; () banked
  9291  002A64  6F69               	movwf	(?___ftdiv+1)& (0+255),b
  9292  002A66  0E00               	movlw	0
  9293  002A68  0100               	movlb	0	; () banked
  9294  002A6A  0100               	movlb	0	; () banked
  9295  002A6C  6F6A               	movwf	(?___ftdiv+2)& (0+255),b
  9296  002A6E  D094               	goto	l877
  9297  002A70                     l4844:
  9298                           
  9299                           ; BSR set to: 0
  9300  002A70  0E00               	movlw	0
  9301  002A72  0100               	movlb	0	; () banked
  9302  002A74  0100               	movlb	0	; () banked
  9303  002A76  6F72               	movwf	___ftdiv@f3& (0+255),b
  9304  002A78  0E00               	movlw	0
  9305  002A7A  0100               	movlb	0	; () banked
  9306  002A7C  0100               	movlb	0	; () banked
  9307  002A7E  6F73               	movwf	(___ftdiv@f3+1)& (0+255),b
  9308  002A80  0E00               	movlw	0
  9309  002A82  0100               	movlb	0	; () banked
  9310  002A84  0100               	movlb	0	; () banked
  9311  002A86  6F74               	movwf	(___ftdiv@f3+2)& (0+255),b
  9312                           
  9313                           ; BSR set to: 0
  9314  002A88  0100               	movlb	0	; () banked
  9315  002A8A  0100               	movlb	0	; () banked
  9316  002A8C  5176               	movf	___ftdiv@sign& (0+255),w,b
  9317  002A8E  0F89               	addlw	137
  9318  002A90  0100               	movlb	0	; () banked
  9319  002A92  0100               	movlb	0	; () banked
  9320  002A94  5F75               	subwf	___ftdiv@exp& (0+255),f,b
  9321                           
  9322                           ; BSR set to: 0
  9323  002A96  C06A  F076         	movff	___ftdiv@f1+2,___ftdiv@sign
  9324                           
  9325                           ; BSR set to: 0
  9326  002A9A  0100               	movlb	0	; () banked
  9327  002A9C  0100               	movlb	0	; () banked
  9328  002A9E  516D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9329  002AA0  0100               	movlb	0	; () banked
  9330  002AA2  0100               	movlb	0	; () banked
  9331  002AA4  1B76               	xorwf	___ftdiv@sign& (0+255),f,b
  9332                           
  9333                           ; BSR set to: 0
  9334  002AA6  0E80               	movlw	128
  9335  002AA8  0100               	movlb	0	; () banked
  9336  002AAA  0100               	movlb	0	; () banked
  9337  002AAC  1776               	andwf	___ftdiv@sign& (0+255),f,b
  9338                           
  9339                           ; BSR set to: 0
  9340  002AAE  0100               	movlb	0	; () banked
  9341  002AB0  0100               	movlb	0	; () banked
  9342  002AB2  8F69               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  9343                           
  9344                           ; BSR set to: 0
  9345  002AB4  0EFF               	movlw	255
  9346  002AB6  0100               	movlb	0	; () banked
  9347  002AB8  0100               	movlb	0	; () banked
  9348  002ABA  1768               	andwf	___ftdiv@f1& (0+255),f,b
  9349  002ABC  0EFF               	movlw	255
  9350  002ABE  0100               	movlb	0	; () banked
  9351  002AC0  0100               	movlb	0	; () banked
  9352  002AC2  1769               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  9353  002AC4  0E00               	movlw	0
  9354  002AC6  0100               	movlb	0	; () banked
  9355  002AC8  0100               	movlb	0	; () banked
  9356  002ACA  176A               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  9357                           
  9358                           ; BSR set to: 0
  9359  002ACC  0100               	movlb	0	; () banked
  9360  002ACE  0100               	movlb	0	; () banked
  9361  002AD0  8F6C               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  9362                           
  9363                           ; BSR set to: 0
  9364  002AD2  0EFF               	movlw	255
  9365  002AD4  0100               	movlb	0	; () banked
  9366  002AD6  0100               	movlb	0	; () banked
  9367  002AD8  176B               	andwf	___ftdiv@f2& (0+255),f,b
  9368  002ADA  0EFF               	movlw	255
  9369  002ADC  0100               	movlb	0	; () banked
  9370  002ADE  0100               	movlb	0	; () banked
  9371  002AE0  176C               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  9372  002AE2  0E00               	movlw	0
  9373  002AE4  0100               	movlb	0	; () banked
  9374  002AE6  0100               	movlb	0	; () banked
  9375  002AE8  176D               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  9376                           
  9377                           ; BSR set to: 0
  9378  002AEA  0100               	movlb	0	; () banked
  9379  002AEC  6F6E               	movwf	??___ftdiv& (0+255),b
  9380  002AEE  0E18               	movlw	24
  9381  002AF0  0100               	movlb	0	; () banked
  9382  002AF2  0100               	movlb	0	; () banked
  9383  002AF4  6F71               	movwf	___ftdiv@cntr& (0+255),b
  9384  002AF6  0100               	movlb	0	; () banked
  9385  002AF8  516E               	movf	??___ftdiv& (0+255),w,b
  9386  002AFA                     l879:
  9387                           
  9388                           ; BSR set to: 0
  9389  002AFA  0100               	movlb	0	; () banked
  9390  002AFC  90D8               	bcf	status,0,c
  9391  002AFE  0100               	movlb	0	; () banked
  9392  002B00  3772               	rlcf	___ftdiv@f3& (0+255),f,b
  9393  002B02  0100               	movlb	0	; () banked
  9394  002B04  3773               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  9395  002B06  0100               	movlb	0	; () banked
  9396  002B08  3774               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  9397                           
  9398                           ; BSR set to: 0
  9399  002B0A  0100               	movlb	0	; () banked
  9400  002B0C  0100               	movlb	0	; () banked
  9401  002B0E  516B               	movf	___ftdiv@f2& (0+255),w,b
  9402  002B10  0100               	movlb	0	; () banked
  9403  002B12  0100               	movlb	0	; () banked
  9404  002B14  5D68               	subwf	___ftdiv@f1& (0+255),w,b
  9405  002B16  0100               	movlb	0	; () banked
  9406  002B18  0100               	movlb	0	; () banked
  9407  002B1A  516C               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9408  002B1C  0100               	movlb	0	; () banked
  9409  002B1E  0100               	movlb	0	; () banked
  9410  002B20  5969               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  9411  002B22  0100               	movlb	0	; () banked
  9412  002B24  0100               	movlb	0	; () banked
  9413  002B26  516D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9414  002B28  0100               	movlb	0	; () banked
  9415  002B2A  0100               	movlb	0	; () banked
  9416  002B2C  596A               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  9417  002B2E  A0D8               	btfss	status,0,c
  9418  002B30  D015               	goto	l880
  9419                           
  9420                           ; BSR set to: 0
  9421  002B32  0100               	movlb	0	; () banked
  9422  002B34  0100               	movlb	0	; () banked
  9423  002B36  516B               	movf	___ftdiv@f2& (0+255),w,b
  9424  002B38  0100               	movlb	0	; () banked
  9425  002B3A  0100               	movlb	0	; () banked
  9426  002B3C  5F68               	subwf	___ftdiv@f1& (0+255),f,b
  9427  002B3E  0100               	movlb	0	; () banked
  9428  002B40  0100               	movlb	0	; () banked
  9429  002B42  516C               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9430  002B44  0100               	movlb	0	; () banked
  9431  002B46  0100               	movlb	0	; () banked
  9432  002B48  5B69               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  9433  002B4A  0100               	movlb	0	; () banked
  9434  002B4C  0100               	movlb	0	; () banked
  9435  002B4E  516D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9436  002B50  0100               	movlb	0	; () banked
  9437  002B52  0100               	movlb	0	; () banked
  9438  002B54  5B6A               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  9439                           
  9440                           ; BSR set to: 0
  9441  002B56  0100               	movlb	0	; () banked
  9442  002B58  0100               	movlb	0	; () banked
  9443  002B5A  8172               	bsf	___ftdiv@f3& (0+255),0,b
  9444  002B5C                     l880:
  9445                           
  9446                           ; BSR set to: 0
  9447  002B5C  0100               	movlb	0	; () banked
  9448  002B5E  90D8               	bcf	status,0,c
  9449  002B60  0100               	movlb	0	; () banked
  9450  002B62  3768               	rlcf	___ftdiv@f1& (0+255),f,b
  9451  002B64  0100               	movlb	0	; () banked
  9452  002B66  3769               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  9453  002B68  0100               	movlb	0	; () banked
  9454  002B6A  376A               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  9455                           
  9456                           ; BSR set to: 0
  9457  002B6C  0100               	movlb	0	; () banked
  9458  002B6E  0100               	movlb	0	; () banked
  9459  002B70  2F71               	decfsz	___ftdiv@cntr& (0+255),f,b
  9460  002B72  D7C3               	goto	l879
  9461                           
  9462                           ; BSR set to: 0
  9463                           
  9464                           ; BSR set to: 0
  9465  002B74  C072  F02D         	movff	___ftdiv@f3,___ftpack@arg
  9466  002B78  C073  F02E         	movff	___ftdiv@f3+1,___ftpack@arg+1
  9467  002B7C  C074  F02F         	movff	___ftdiv@f3+2,___ftpack@arg+2
  9468  002B80  C075  F030         	movff	___ftdiv@exp,___ftpack@exp
  9469  002B84  C076  F031         	movff	___ftdiv@sign,___ftpack@sign
  9470  002B88  ECB7  F018         	call	___ftpack	;wreg free
  9471  002B8C  C02D  F068         	movff	?___ftpack,?___ftdiv
  9472  002B90  C02E  F069         	movff	?___ftpack+1,?___ftdiv+1
  9473  002B94  C02F  F06A         	movff	?___ftpack+2,?___ftdiv+2
  9474  002B98                     l877:
  9475  002B98  0012               	return	
  9476  002B9A                     __end_of___ftdiv:
  9477                           	opt stack 0
  9478                           tblptru	equ	0xFF8
  9479                           tblptrh	equ	0xFF7
  9480                           tblptrl	equ	0xFF6
  9481                           tablat	equ	0xFF5
  9482                           prodh	equ	0xFF4
  9483                           prodl	equ	0xFF3
  9484                           indf0	equ	0xFEF
  9485                           fsr0h	equ	0xFEA
  9486                           fsr0l	equ	0xFE9
  9487                           wreg	equ	0xFE8
  9488                           indf1	equ	0xFE7
  9489                           fsr1h	equ	0xFE2
  9490                           fsr1l	equ	0xFE1
  9491                           indf2	equ	0xFDF
  9492                           postinc2	equ	0xFDE
  9493                           postdec2	equ	0xFDD
  9494                           fsr2h	equ	0xFDA
  9495                           fsr2l	equ	0xFD9
  9496                           status	equ	0xFD8
  9497                           
  9498 ;; *************** function _WriteUSART *****************
  9499 ;; Defined at:
  9500 ;;		line 13 in file "plib/uwrite.c"
  9501 ;; Parameters:    Size  Location     Type
  9502 ;;  data            1    wreg     unsigned char 
  9503 ;; Auto vars:     Size  Location     Type
  9504 ;;  data            1   44[COMRAM] unsigned char 
  9505 ;; Return value:  Size  Location     Type
  9506 ;;		None               void
  9507 ;; Registers used:
  9508 ;;		wreg
  9509 ;; Tracked objects:
  9510 ;;		On entry : 0/0
  9511 ;;		On exit  : 0/0
  9512 ;;		Unchanged: 0/0
  9513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9514 ;;      Params:         0       0       0       0       0       0       0       0       0
  9515 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9516 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9517 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9518 ;;Total ram usage:        1 bytes
  9519 ;; Hardware stack levels used:    1
  9520 ;; Hardware stack levels required when called:    5
  9521 ;; This function calls:
  9522 ;;		Nothing
  9523 ;; This function is called by:
  9524 ;;		_main
  9525 ;;		_putrsUSART
  9526 ;;		_putsUSART
  9527 ;; This function uses a non-reentrant model
  9528 ;;
  9529                           
  9530                           	psect	text35
  9531  003B1E                     __ptext35:
  9532                           	opt stack 0
  9533  003B1E                     _WriteUSART:
  9534                           	opt stack 25
  9535                           
  9536                           ;incstack = 0
  9537                           ;WriteUSART@data stored from wreg
  9538  003B1E  CFE8 F02D          	movff	wreg,WriteUSART@data
  9539                           
  9540                           ;uwrite.c: 15: if(TXSTAbits.TX9)
  9541  003B22  ACAC               	btfss	4012,6,c	;volatile
  9542  003B24  D003               	goto	l3944
  9543                           
  9544                           ;uwrite.c: 16: {
  9545                           ;uwrite.c: 17: TXSTAbits.TX9D = 0;
  9546  003B26  90AC               	bcf	4012,0,c	;volatile
  9547                           
  9548                           ;uwrite.c: 18: if(USART_Status.TX_NINE)
  9549  003B28  B233               	btfsc	_USART_Status,1,c
  9550                           
  9551                           ;uwrite.c: 19: TXSTAbits.TX9D = 1;
  9552  003B2A  80AC               	bsf	4012,0,c	;volatile
  9553  003B2C                     l3944:
  9554                           
  9555                           ;uwrite.c: 20: }
  9556                           ;uwrite.c: 22: TXREG = data;
  9557  003B2C  C02D  FFAD         	movff	WriteUSART@data,4013	;volatile
  9558  003B30  0012               	return	
  9559  003B32                     __end_of_WriteUSART:
  9560                           	opt stack 0
  9561                           tblptru	equ	0xFF8
  9562                           tblptrh	equ	0xFF7
  9563                           tblptrl	equ	0xFF6
  9564                           tablat	equ	0xFF5
  9565                           prodh	equ	0xFF4
  9566                           prodl	equ	0xFF3
  9567                           indf0	equ	0xFEF
  9568                           fsr0h	equ	0xFEA
  9569                           fsr0l	equ	0xFE9
  9570                           wreg	equ	0xFE8
  9571                           indf1	equ	0xFE7
  9572                           fsr1h	equ	0xFE2
  9573                           fsr1l	equ	0xFE1
  9574                           indf2	equ	0xFDF
  9575                           postinc2	equ	0xFDE
  9576                           postdec2	equ	0xFDD
  9577                           fsr2h	equ	0xFDA
  9578                           fsr2l	equ	0xFD9
  9579                           status	equ	0xFD8
  9580                           
  9581 ;; *************** function _ReadADC *****************
  9582 ;; Defined at:
  9583 ;;		line 24 in file "plib/adcread.c"
  9584 ;; Parameters:    Size  Location     Type
  9585 ;;		None
  9586 ;; Auto vars:     Size  Location     Type
  9587 ;;		None
  9588 ;; Return value:  Size  Location     Type
  9589 ;;                  2   44[COMRAM] int 
  9590 ;; Registers used:
  9591 ;;		wreg, status,2
  9592 ;; Tracked objects:
  9593 ;;		On entry : 0/0
  9594 ;;		On exit  : 0/0
  9595 ;;		Unchanged: 0/0
  9596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9597 ;;      Params:         2       0       0       0       0       0       0       0       0
  9598 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9599 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9600 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9601 ;;Total ram usage:        2 bytes
  9602 ;; Hardware stack levels used:    1
  9603 ;; Hardware stack levels required when called:    5
  9604 ;; This function calls:
  9605 ;;		Nothing
  9606 ;; This function is called by:
  9607 ;;		_main
  9608 ;; This function uses a non-reentrant model
  9609 ;;
  9610                           
  9611                           	psect	text36
  9612  003B78                     __ptext36:
  9613                           	opt stack 0
  9614  003B78                     _ReadADC:
  9615                           	opt stack 25
  9616                           
  9617                           ;adcread.c: 26: return (((unsigned int)ADRESH)<<8)|(ADRESL);
  9618                           
  9619                           ;incstack = 0
  9620  003B78  50C4               	movf	4036,w,c	;volatile
  9621  003B7A  6E2E               	movwf	?_ReadADC+1,c
  9622  003B7C  50C3               	movf	4035,w,c	;volatile
  9623  003B7E  6E2D               	movwf	?_ReadADC,c
  9624  003B80  0012               	return	
  9625  003B82                     __end_of_ReadADC:
  9626                           	opt stack 0
  9627                           tblptru	equ	0xFF8
  9628                           tblptrh	equ	0xFF7
  9629                           tblptrl	equ	0xFF6
  9630                           tablat	equ	0xFF5
  9631                           prodh	equ	0xFF4
  9632                           prodl	equ	0xFF3
  9633                           indf0	equ	0xFEF
  9634                           fsr0h	equ	0xFEA
  9635                           fsr0l	equ	0xFE9
  9636                           wreg	equ	0xFE8
  9637                           indf1	equ	0xFE7
  9638                           fsr1h	equ	0xFE2
  9639                           fsr1l	equ	0xFE1
  9640                           indf2	equ	0xFDF
  9641                           postinc2	equ	0xFDE
  9642                           postdec2	equ	0xFDD
  9643                           fsr2h	equ	0xFDA
  9644                           fsr2l	equ	0xFD9
  9645                           status	equ	0xFD8
  9646                           
  9647 ;; *************** function _InitApp *****************
  9648 ;; Defined at:
  9649 ;;		line 10 in file "user.c"
  9650 ;; Parameters:    Size  Location     Type
  9651 ;;		None
  9652 ;; Auto vars:     Size  Location     Type
  9653 ;;		None
  9654 ;; Return value:  Size  Location     Type
  9655 ;;		None               void
  9656 ;; Registers used:
  9657 ;;		wreg, status,2, status,0, cstack
  9658 ;; Tracked objects:
  9659 ;;		On entry : 0/0
  9660 ;;		On exit  : 0/0
  9661 ;;		Unchanged: 0/0
  9662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9663 ;;      Params:         0       0       0       0       0       0       0       0       0
  9664 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9665 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9666 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9667 ;;Total ram usage:        2 bytes
  9668 ;; Hardware stack levels used:    1
  9669 ;; Hardware stack levels required when called:    6
  9670 ;; This function calls:
  9671 ;;		_OpenADC
  9672 ;;		_OpenUSART
  9673 ;;		_SetChanADC
  9674 ;; This function is called by:
  9675 ;;		_main
  9676 ;; This function uses a non-reentrant model
  9677 ;;
  9678                           
  9679                           	psect	text37
  9680  0035FE                     __ptext37:
  9681                           	opt stack 0
  9682  0035FE                     _InitApp:
  9683                           	opt stack 24
  9684                           
  9685                           ;user.c: 12: TRISA = 0x00000001;
  9686                           
  9687                           ;incstack = 0
  9688  0035FE  0E01               	movlw	1
  9689  003600  6E92               	movwf	3986,c	;volatile
  9690                           
  9691                           ;user.c: 13: TRISB = 0b00000001;
  9692  003602  0E01               	movlw	1
  9693  003604  6E93               	movwf	3987,c	;volatile
  9694                           
  9695                           ;user.c: 14: TRISC = 0x00;
  9696  003606  0E00               	movlw	0
  9697  003608  6E94               	movwf	3988,c	;volatile
  9698                           
  9699                           ;user.c: 15: TRISD = 0x00;
  9700  00360A  0E00               	movlw	0
  9701  00360C  6E95               	movwf	3989,c	;volatile
  9702                           
  9703                           ;user.c: 16: TRISE = 0x00;
  9704  00360E  0E00               	movlw	0
  9705  003610  6E96               	movwf	3990,c	;volatile
  9706                           
  9707                           ;user.c: 18: ADCON1 = 0x0F;
  9708  003612  0E0F               	movlw	15
  9709  003614  6EC1               	movwf	4033,c	;volatile
  9710                           
  9711                           ;user.c: 19: CMCON = 0x07;
  9712  003616  0E07               	movlw	7
  9713  003618  6EB4               	movwf	4020,c	;volatile
  9714                           
  9715                           ;user.c: 21: PORTA = 0X00;
  9716  00361A  0E00               	movlw	0
  9717  00361C  6E80               	movwf	3968,c	;volatile
  9718                           
  9719                           ;user.c: 22: PORTB = 0X00;
  9720  00361E  0E00               	movlw	0
  9721  003620  6E81               	movwf	3969,c	;volatile
  9722                           
  9723                           ;user.c: 23: PORTC = 0X00;
  9724  003622  0E00               	movlw	0
  9725  003624  6E82               	movwf	3970,c	;volatile
  9726                           
  9727                           ;user.c: 24: PORTD = 0X00;
  9728  003626  0E00               	movlw	0
  9729  003628  6E83               	movwf	3971,c	;volatile
  9730                           
  9731                           ;user.c: 25: PORTE = 0X00;
  9732  00362A  0E00               	movlw	0
  9733  00362C  6E84               	movwf	3972,c	;volatile
  9734                           
  9735                           ;user.c: 27: INTCON2bits.INTEDG0 = 0;
  9736  00362E  9CF1               	bcf	intcon2,6,c	;volatile
  9737                           
  9738                           ;user.c: 28: INTCON2bits.RBIP = 1;
  9739  003630  80F1               	bsf	intcon2,0,c	;volatile
  9740                           
  9741                           ;user.c: 30: INTCONbits.INT0IF = 0;
  9742  003632  92F2               	bcf	intcon,1,c	;volatile
  9743                           
  9744                           ;user.c: 31: INTCONbits.INT0IE = 1;
  9745  003634  88F2               	bsf	intcon,4,c	;volatile
  9746                           
  9747                           ;user.c: 33: RCONbits.IPEN = 1;
  9748  003636  8ED0               	bsf	4048,7,c	;volatile
  9749                           
  9750                           ;user.c: 34: INTCONbits.GIEH = 1;
  9751  003638  8EF2               	bsf	intcon,7,c	;volatile
  9752                           
  9753                           ;user.c: 35: INTCONbits.GIEL = 0;
  9754  00363A  9CF2               	bcf	intcon,6,c	;volatile
  9755                           
  9756                           ;user.c: 38: OpenADC(0b11011111 & 0b11111111 & 0b11110011,
  9757                           ;user.c: 39: 0b10000111 & 0b01111111 & 0b11111110 & 0b11111101,
  9758                           ;user.c: 40: 0b11111110);
  9759  00363C  0100               	movlb	0	; () banked
  9760  00363E  6F60               	movwf	??_InitApp& (0+255),b
  9761  003640  0E04               	movlw	4
  9762  003642  6E2D               	movwf	OpenADC@config2,c
  9763  003644  0100               	movlb	0	; () banked
  9764  003646  5160               	movf	??_InitApp& (0+255),w,b
  9765  003648  0100               	movlb	0	; () banked
  9766  00364A  6F61               	movwf	(??_InitApp+1)& (0+255),b
  9767  00364C  0EFE               	movlw	254
  9768  00364E  6E2E               	movwf	OpenADC@portconfig,c
  9769  003650  0100               	movlb	0	; () banked
  9770  003652  5161               	movf	(??_InitApp+1)& (0+255),w,b
  9771  003654  0ED3               	movlw	211
  9772  003656  ECE9  F01B         	call	_OpenADC
  9773                           
  9774                           ;user.c: 41: SetChanADC(0b10000111);
  9775  00365A  0E87               	movlw	135
  9776  00365C  EC57  F01D         	call	_SetChanADC
  9777                           
  9778                           ;user.c: 42: _delay((unsigned long)((1)*(48000000L/4000.0)));
  9779  003660  0E10               	movlw	16
  9780  003662  0100               	movlb	0	; () banked
  9781  003664  6F60               	movwf	??_InitApp& (0+255),b
  9782  003666  0E94               	movlw	148
  9783  003668                     u4957:
  9784  003668  2EE8               	decfsz	wreg,f,c
  9785  00366A  D7FE               	goto	u4957
  9786  00366C  2F60               	decfsz	??_InitApp& (0+255),f,b
  9787  00366E  D7FC               	goto	u4957
  9788  003670  D000               	nop2	
  9789                           
  9790                           ;user.c: 45: TRISCbits.RC6 = 0;
  9791  003672  9C94               	bcf	3988,6,c	;volatile
  9792                           
  9793                           ;user.c: 46: TRISCbits.RC7 = 1;
  9794  003674  8E94               	bsf	3988,7,c	;volatile
  9795                           
  9796                           ;user.c: 47: OpenUSART(0b01111111 & 0b10111111 &
  9797                           ;user.c: 48: 0b11111110 & 0b11111101 & 0b11111111, 155);
  9798  003676  0E00               	movlw	0
  9799  003678  6E2E               	movwf	OpenUSART@spbrg+1,c
  9800  00367A  0E9B               	movlw	155
  9801  00367C  6E2D               	movwf	OpenUSART@spbrg,c
  9802  00367E  0E3C               	movlw	60
  9803  003680  EC83  F01B         	call	_OpenUSART
  9804  003684  0012               	return	
  9805  003686                     __end_of_InitApp:
  9806                           	opt stack 0
  9807                           tblptru	equ	0xFF8
  9808                           tblptrh	equ	0xFF7
  9809                           tblptrl	equ	0xFF6
  9810                           tablat	equ	0xFF5
  9811                           prodh	equ	0xFF4
  9812                           prodl	equ	0xFF3
  9813                           intcon	equ	0xFF2
  9814                           intcon2	equ	0xFF1
  9815                           indf0	equ	0xFEF
  9816                           fsr0h	equ	0xFEA
  9817                           fsr0l	equ	0xFE9
  9818                           wreg	equ	0xFE8
  9819                           indf1	equ	0xFE7
  9820                           fsr1h	equ	0xFE2
  9821                           fsr1l	equ	0xFE1
  9822                           indf2	equ	0xFDF
  9823                           postinc2	equ	0xFDE
  9824                           postdec2	equ	0xFDD
  9825                           fsr2h	equ	0xFDA
  9826                           fsr2l	equ	0xFD9
  9827                           status	equ	0xFD8
  9828                           
  9829 ;; *************** function _SetChanADC *****************
  9830 ;; Defined at:
  9831 ;;		line 30 in file "plib/adcsetch.c"
  9832 ;; Parameters:    Size  Location     Type
  9833 ;;  channel         1    wreg     unsigned char 
  9834 ;; Auto vars:     Size  Location     Type
  9835 ;;  channel         1   45[COMRAM] unsigned char 
  9836 ;; Return value:  Size  Location     Type
  9837 ;;		None               void
  9838 ;; Registers used:
  9839 ;;		wreg, status,2, status,0
  9840 ;; Tracked objects:
  9841 ;;		On entry : 0/0
  9842 ;;		On exit  : 0/0
  9843 ;;		Unchanged: 0/0
  9844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9845 ;;      Params:         0       0       0       0       0       0       0       0       0
  9846 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9847 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9848 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9849 ;;Total ram usage:        2 bytes
  9850 ;; Hardware stack levels used:    1
  9851 ;; Hardware stack levels required when called:    5
  9852 ;; This function calls:
  9853 ;;		Nothing
  9854 ;; This function is called by:
  9855 ;;		_InitApp
  9856 ;; This function uses a non-reentrant model
  9857 ;;
  9858                           
  9859                           	psect	text38
  9860  003AAE                     __ptext38:
  9861                           	opt stack 0
  9862  003AAE                     _SetChanADC:
  9863                           	opt stack 24
  9864                           
  9865                           ;incstack = 0
  9866                           ;SetChanADC@channel stored from wreg
  9867  003AAE  CFE8 F02E          	movff	wreg,SetChanADC@channel
  9868                           
  9869                           ;adcsetch.c: 33: ADCON0 = ((channel >> 1) & 0b00111100) |
  9870                           ;adcsetch.c: 34: (ADCON0 & 0b11000011);
  9871  003AB2  CFC2 F02D          	movff	4034,??_SetChanADC	;volatile
  9872  003AB6  0EC3               	movlw	195
  9873  003AB8  162D               	andwf	??_SetChanADC,f,c
  9874  003ABA  90D8               	bcf	status,0,c
  9875  003ABC  302E               	rrcf	SetChanADC@channel,w,c
  9876  003ABE  0B3C               	andlw	60
  9877  003AC0  102D               	iorwf	??_SetChanADC,w,c
  9878  003AC2  6EC2               	movwf	4034,c	;volatile
  9879  003AC4  0012               	return	
  9880  003AC6                     __end_of_SetChanADC:
  9881                           	opt stack 0
  9882                           tblptru	equ	0xFF8
  9883                           tblptrh	equ	0xFF7
  9884                           tblptrl	equ	0xFF6
  9885                           tablat	equ	0xFF5
  9886                           prodh	equ	0xFF4
  9887                           prodl	equ	0xFF3
  9888                           intcon	equ	0xFF2
  9889                           intcon2	equ	0xFF1
  9890                           indf0	equ	0xFEF
  9891                           fsr0h	equ	0xFEA
  9892                           fsr0l	equ	0xFE9
  9893                           wreg	equ	0xFE8
  9894                           indf1	equ	0xFE7
  9895                           fsr1h	equ	0xFE2
  9896                           fsr1l	equ	0xFE1
  9897                           indf2	equ	0xFDF
  9898                           postinc2	equ	0xFDE
  9899                           postdec2	equ	0xFDD
  9900                           fsr2h	equ	0xFDA
  9901                           fsr2l	equ	0xFD9
  9902                           status	equ	0xFD8
  9903                           
  9904 ;; *************** function _OpenUSART *****************
  9905 ;; Defined at:
  9906 ;;		line 73 in file "plib/uopen.c"
  9907 ;; Parameters:    Size  Location     Type
  9908 ;;  config          1    wreg     unsigned char 
  9909 ;;  spbrg           2   44[COMRAM] unsigned int 
  9910 ;; Auto vars:     Size  Location     Type
  9911 ;;  config          1   49[COMRAM] unsigned char 
  9912 ;; Return value:  Size  Location     Type
  9913 ;;		None               void
  9914 ;; Registers used:
  9915 ;;		wreg, status,2
  9916 ;; Tracked objects:
  9917 ;;		On entry : 0/0
  9918 ;;		On exit  : 0/0
  9919 ;;		Unchanged: 0/0
  9920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9921 ;;      Params:         2       0       0       0       0       0       0       0       0
  9922 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9923 ;;      Temps:          3       0       0       0       0       0       0       0       0
  9924 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9925 ;;Total ram usage:        6 bytes
  9926 ;; Hardware stack levels used:    1
  9927 ;; Hardware stack levels required when called:    5
  9928 ;; This function calls:
  9929 ;;		Nothing
  9930 ;; This function is called by:
  9931 ;;		_InitApp
  9932 ;; This function uses a non-reentrant model
  9933 ;;
  9934                           
  9935                           	psect	text39
  9936  003706                     __ptext39:
  9937                           	opt stack 0
  9938  003706                     _OpenUSART:
  9939                           	opt stack 24
  9940                           
  9941                           ;incstack = 0
  9942                           ;OpenUSART@config stored from wreg
  9943  003706  CFE8 F032          	movff	wreg,OpenUSART@config
  9944                           
  9945                           ;uopen.c: 75: TXSTA = 0;
  9946  00370A  0E00               	movlw	0
  9947  00370C  6EAC               	movwf	4012,c	;volatile
  9948                           
  9949                           ;uopen.c: 76: RCSTA = 0;
  9950  00370E  0E00               	movlw	0
  9951  003710  6EAB               	movwf	4011,c	;volatile
  9952                           
  9953                           ;uopen.c: 78: if(config&0x01)
  9954  003712  B032               	btfsc	OpenUSART@config,0,c
  9955                           
  9956                           ;uopen.c: 79: TXSTAbits.SYNC = 1;
  9957  003714  88AC               	bsf	4012,4,c	;volatile
  9958                           
  9959                           ;uopen.c: 81: if(config&0x02)
  9960  003716  A232               	btfss	OpenUSART@config,1,c
  9961  003718  D002               	goto	l3894
  9962                           
  9963                           ;uopen.c: 82: {
  9964                           ;uopen.c: 83: TXSTAbits.TX9 = 1;
  9965  00371A  8CAC               	bsf	4012,6,c	;volatile
  9966                           
  9967                           ;uopen.c: 84: RCSTAbits.RX9 = 1;
  9968  00371C  8CAB               	bsf	4011,6,c	;volatile
  9969  00371E                     l3894:
  9970                           
  9971                           ;uopen.c: 85: }
  9972                           ;uopen.c: 87: if(config&0x04)
  9973  00371E  B432               	btfsc	OpenUSART@config,2,c
  9974                           
  9975                           ;uopen.c: 88: TXSTAbits.CSRC = 1;
  9976  003720  8EAC               	bsf	4012,7,c	;volatile
  9977                           
  9978                           ;uopen.c: 90: if(config&0x08)
  9979  003722  A632               	btfss	OpenUSART@config,3,c
  9980  003724  D002               	goto	l119
  9981                           
  9982                           ;uopen.c: 91: RCSTAbits.CREN = 1;
  9983  003726  88AB               	bsf	4011,4,c	;volatile
  9984  003728  D001               	goto	l3902
  9985  00372A                     l119:
  9986                           
  9987                           ;uopen.c: 92: else
  9988                           ;uopen.c: 93: RCSTAbits.SREN = 1;
  9989  00372A  8AAB               	bsf	4011,5,c	;volatile
  9990  00372C                     l3902:
  9991                           
  9992                           ;uopen.c: 95: if(config&0x10)
  9993  00372C  B832               	btfsc	OpenUSART@config,4,c
  9994                           
  9995                           ;uopen.c: 96: TXSTAbits.BRGH = 1;
  9996  00372E  84AC               	bsf	4012,2,c	;volatile
  9997                           
  9998                           ;uopen.c: 98: PIR1bits.TXIF = 0;
  9999  003730  989E               	bcf	3998,4,c	;volatile
 10000                           
 10001                           ;uopen.c: 100: if(config&0x20)
 10002  003732  BA32               	btfsc	OpenUSART@config,5,c
 10003                           
 10004                           ;uopen.c: 101: RCSTAbits.ADEN = 1;
 10005  003734  86AB               	bsf	4011,3,c	;volatile
 10006                           
 10007                           ;uopen.c: 103: if(config&0x40)
 10008  003736  AC32               	btfss	OpenUSART@config,6,c
 10009  003738  D002               	goto	l123
 10010                           
 10011                           ;uopen.c: 104: PIE1bits.RCIE = 1;
 10012  00373A  8A9D               	bsf	3997,5,c	;volatile
 10013  00373C  D001               	goto	l124
 10014  00373E                     l123:
 10015                           
 10016                           ;uopen.c: 105: else
 10017                           ;uopen.c: 106: PIE1bits.RCIE = 0;
 10018  00373E  9A9D               	bcf	3997,5,c	;volatile
 10019  003740                     l124:
 10020                           
 10021                           ;uopen.c: 108: PIR1bits.RCIF = 0;
 10022  003740  9A9E               	bcf	3998,5,c	;volatile
 10023                           
 10024                           ;uopen.c: 110: if(config&0x80)
 10025  003742  AE32               	btfss	OpenUSART@config,7,c
 10026  003744  D002               	goto	l125
 10027                           
 10028                           ;uopen.c: 111: PIE1bits.TXIE = 1;
 10029  003746  889D               	bsf	3997,4,c	;volatile
 10030  003748  D001               	goto	l126
 10031  00374A                     l125:
 10032                           
 10033                           ;uopen.c: 112: else
 10034                           ;uopen.c: 113: PIE1bits.TXIE = 0;
 10035  00374A  989D               	bcf	3997,4,c	;volatile
 10036  00374C                     l126:
 10037                           
 10038                           ;uopen.c: 115: SPBRG = spbrg;
 10039  00374C  C02D  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
 10040                           
 10041                           ;uopen.c: 116: SPBRGH = spbrg >> 8;
 10042  003750  C02E  F02F         	movff	OpenUSART@spbrg+1,??_OpenUSART
 10043  003754  C02F  F030         	movff	??_OpenUSART,??_OpenUSART+1
 10044  003758  6A31               	clrf	(??_OpenUSART+2)& (0+255),c
 10045  00375A  5030               	movf	??_OpenUSART+1,w,c
 10046  00375C  6EB0               	movwf	4016,c	;volatile
 10047                           
 10048                           ;uopen.c: 118: TXSTAbits.TXEN = 1;
 10049  00375E  8AAC               	bsf	4012,5,c	;volatile
 10050                           
 10051                           ;uopen.c: 119: RCSTAbits.SPEN = 1;
 10052  003760  8EAB               	bsf	4011,7,c	;volatile
 10053                           
 10054                           ;uopen.c: 137: TRISCbits.TRISC6 = 0;TRISCbits.TRISC7 = 1;
 10055  003762  9C94               	bcf	3988,6,c	;volatile
 10056  003764  8E94               	bsf	3988,7,c	;volatile
 10057                           
 10058                           ;uopen.c: 138: if(TXSTAbits.SYNC && !TXSTAbits.CSRC)
 10059  003766  B8AC               	btfsc	4012,4,c	;volatile
 10060  003768  BEAC               	btfsc	4012,7,c	;volatile
 10061  00376A  D001               	goto	l128
 10062                           
 10063                           ;uopen.c: 139: TRISCbits.TRISC6 = 1;
 10064  00376C  8C94               	bsf	3988,6,c	;volatile
 10065  00376E                     l128:
 10066  00376E  0012               	return	
 10067  003770                     __end_of_OpenUSART:
 10068                           	opt stack 0
 10069                           tblptru	equ	0xFF8
 10070                           tblptrh	equ	0xFF7
 10071                           tblptrl	equ	0xFF6
 10072                           tablat	equ	0xFF5
 10073                           prodh	equ	0xFF4
 10074                           prodl	equ	0xFF3
 10075                           intcon	equ	0xFF2
 10076                           intcon2	equ	0xFF1
 10077                           indf0	equ	0xFEF
 10078                           fsr0h	equ	0xFEA
 10079                           fsr0l	equ	0xFE9
 10080                           wreg	equ	0xFE8
 10081                           indf1	equ	0xFE7
 10082                           fsr1h	equ	0xFE2
 10083                           fsr1l	equ	0xFE1
 10084                           indf2	equ	0xFDF
 10085                           postinc2	equ	0xFDE
 10086                           postdec2	equ	0xFDD
 10087                           fsr2h	equ	0xFDA
 10088                           fsr2l	equ	0xFD9
 10089                           status	equ	0xFD8
 10090                           
 10091 ;; *************** function _OpenADC *****************
 10092 ;; Defined at:
 10093 ;;		line 68 in file "plib/adcopen.c"
 10094 ;; Parameters:    Size  Location     Type
 10095 ;;  config          1    wreg     unsigned char 
 10096 ;;  config2         1   44[COMRAM] unsigned char 
 10097 ;;  portconfig      1   45[COMRAM] unsigned char 
 10098 ;; Auto vars:     Size  Location     Type
 10099 ;;  config          1   48[COMRAM] unsigned char 
 10100 ;; Return value:  Size  Location     Type
 10101 ;;		None               void
 10102 ;; Registers used:
 10103 ;;		wreg, status,2, status,0
 10104 ;; Tracked objects:
 10105 ;;		On entry : 0/0
 10106 ;;		On exit  : 0/0
 10107 ;;		Unchanged: 0/0
 10108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10109 ;;      Params:         2       0       0       0       0       0       0       0       0
 10110 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10111 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10112 ;;      Totals:         5       0       0       0       0       0       0       0       0
 10113 ;;Total ram usage:        5 bytes
 10114 ;; Hardware stack levels used:    1
 10115 ;; Hardware stack levels required when called:    5
 10116 ;; This function calls:
 10117 ;;		Nothing
 10118 ;; This function is called by:
 10119 ;;		_InitApp
 10120 ;; This function uses a non-reentrant model
 10121 ;;
 10122                           
 10123                           	psect	text40
 10124  0037D2                     __ptext40:
 10125                           	opt stack 0
 10126  0037D2                     _OpenADC:
 10127                           	opt stack 24
 10128                           
 10129                           ;incstack = 0
 10130                           ;OpenADC@config stored from wreg
 10131  0037D2  CFE8 F031          	movff	wreg,OpenADC@config
 10132                           
 10133                           ;adcopen.c: 72: ADCON0 = 0;
 10134  0037D6  0E00               	movlw	0
 10135  0037D8  6EC2               	movwf	4034,c	;volatile
 10136                           
 10137                           ;adcopen.c: 73: ADCON2 = 0;
 10138  0037DA  0E00               	movlw	0
 10139  0037DC  6EC0               	movwf	4032,c	;volatile
 10140                           
 10141                           ;adcopen.c: 75: ADCON0 = (config2 >> 1) & 0b00111100;
 10142  0037DE  90D8               	bcf	status,0,c
 10143  0037E0  302D               	rrcf	OpenADC@config2,w,c
 10144  0037E2  0B3C               	andlw	60
 10145  0037E4  6EC2               	movwf	4034,c	;volatile
 10146                           
 10147                           ;adcopen.c: 76: ADCON1 = (portconfig & 0b00001111) |
 10148                           ;adcopen.c: 77: ((config2 << 4) & 0b00110000);
 10149  0037E6  C02D  F02F         	movff	OpenADC@config2,??_OpenADC
 10150  0037EA  3A2F               	swapf	??_OpenADC,f,c
 10151  0037EC  0EF0               	movlw	240
 10152  0037EE  162F               	andwf	??_OpenADC,f,c
 10153  0037F0  0E30               	movlw	48
 10154  0037F2  162F               	andwf	??_OpenADC,f,c
 10155  0037F4  502E               	movf	OpenADC@portconfig,w,c
 10156  0037F6  0B0F               	andlw	15
 10157  0037F8  102F               	iorwf	??_OpenADC,w,c
 10158  0037FA  6EC1               	movwf	4033,c	;volatile
 10159                           
 10160                           ;adcopen.c: 78: ADCON2 = (config & 0b10000000) |
 10161                           ;adcopen.c: 79: ((config >> 4) & 0b00000111) |
 10162                           ;adcopen.c: 80: ((config << 2) & 0b00111000);
 10163  0037FC  C031  F02F         	movff	OpenADC@config,??_OpenADC
 10164  003800  90D8               	bcf	status,0,c
 10165  003802  362F               	rlcf	??_OpenADC,f,c
 10166  003804  90D8               	bcf	status,0,c
 10167  003806  362F               	rlcf	??_OpenADC,f,c
 10168  003808  0E38               	movlw	56
 10169  00380A  162F               	andwf	??_OpenADC,f,c
 10170  00380C  C031  F030         	movff	OpenADC@config,??_OpenADC+1
 10171  003810  3A30               	swapf	??_OpenADC+1,f,c
 10172  003812  0E0F               	movlw	15
 10173  003814  1630               	andwf	??_OpenADC+1,f,c
 10174  003816  0E07               	movlw	7
 10175  003818  1630               	andwf	??_OpenADC+1,f,c
 10176  00381A  5031               	movf	OpenADC@config,w,c
 10177  00381C  0B80               	andlw	128
 10178  00381E  1030               	iorwf	??_OpenADC+1,w,c
 10179  003820  102F               	iorwf	??_OpenADC,w,c
 10180  003822  6EC0               	movwf	4032,c	;volatile
 10181                           
 10182                           ;adcopen.c: 82: if( config2 & 0b10000000 )
 10183  003824  AE2D               	btfss	OpenADC@config2,7,c
 10184  003826  D003               	goto	l34
 10185                           
 10186                           ;adcopen.c: 83: {
 10187                           ;adcopen.c: 84: PIR1bits.ADIF = 0;
 10188  003828  9C9E               	bcf	3998,6,c	;volatile
 10189                           
 10190                           ;adcopen.c: 85: PIE1bits.ADIE = 1;
 10191  00382A  8C9D               	bsf	3997,6,c	;volatile
 10192                           
 10193                           ;adcopen.c: 86: INTCONbits.PEIE = 1;
 10194  00382C  8CF2               	bsf	intcon,6,c	;volatile
 10195  00382E                     l34:
 10196                           
 10197                           ;adcopen.c: 87: }
 10198                           ;adcopen.c: 88: ADCON0bits.ADON = 1;
 10199  00382E  80C2               	bsf	4034,0,c	;volatile
 10200  003830  0012               	return	
 10201  003832                     __end_of_OpenADC:
 10202                           	opt stack 0
 10203                           tblptru	equ	0xFF8
 10204                           tblptrh	equ	0xFF7
 10205                           tblptrl	equ	0xFF6
 10206                           tablat	equ	0xFF5
 10207                           prodh	equ	0xFF4
 10208                           prodl	equ	0xFF3
 10209                           intcon	equ	0xFF2
 10210                           intcon2	equ	0xFF1
 10211                           indf0	equ	0xFEF
 10212                           fsr0h	equ	0xFEA
 10213                           fsr0l	equ	0xFE9
 10214                           wreg	equ	0xFE8
 10215                           indf1	equ	0xFE7
 10216                           fsr1h	equ	0xFE2
 10217                           fsr1l	equ	0xFE1
 10218                           indf2	equ	0xFDF
 10219                           postinc2	equ	0xFDE
 10220                           postdec2	equ	0xFDD
 10221                           fsr2h	equ	0xFDA
 10222                           fsr2l	equ	0xFD9
 10223                           status	equ	0xFD8
 10224                           
 10225 ;; *************** function _ConvertADC *****************
 10226 ;; Defined at:
 10227 ;;		line 22 in file "plib/adcconv.c"
 10228 ;; Parameters:    Size  Location     Type
 10229 ;;		None
 10230 ;; Auto vars:     Size  Location     Type
 10231 ;;		None
 10232 ;; Return value:  Size  Location     Type
 10233 ;;		None               void
 10234 ;; Registers used:
 10235 ;;		None
 10236 ;; Tracked objects:
 10237 ;;		On entry : 0/0
 10238 ;;		On exit  : 0/0
 10239 ;;		Unchanged: 0/0
 10240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10241 ;;      Params:         0       0       0       0       0       0       0       0       0
 10242 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10243 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10244 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10245 ;;Total ram usage:        0 bytes
 10246 ;; Hardware stack levels used:    1
 10247 ;; Hardware stack levels required when called:    5
 10248 ;; This function calls:
 10249 ;;		Nothing
 10250 ;; This function is called by:
 10251 ;;		_main
 10252 ;; This function uses a non-reentrant model
 10253 ;;
 10254                           
 10255                           	psect	text41
 10256  003B9A                     __ptext41:
 10257                           	opt stack 0
 10258  003B9A                     _ConvertADC:
 10259                           	opt stack 25
 10260                           
 10261                           ;adcconv.c: 24: ADCON0bits.GO = 1;
 10262                           
 10263                           ;incstack = 0
 10264  003B9A  82C2               	bsf	4034,1,c	;volatile
 10265  003B9C  0012               	return	
 10266  003B9E                     __end_of_ConvertADC:
 10267                           	opt stack 0
 10268                           tblptru	equ	0xFF8
 10269                           tblptrh	equ	0xFF7
 10270                           tblptrl	equ	0xFF6
 10271                           tablat	equ	0xFF5
 10272                           prodh	equ	0xFF4
 10273                           prodl	equ	0xFF3
 10274                           intcon	equ	0xFF2
 10275                           intcon2	equ	0xFF1
 10276                           indf0	equ	0xFEF
 10277                           fsr0h	equ	0xFEA
 10278                           fsr0l	equ	0xFE9
 10279                           wreg	equ	0xFE8
 10280                           indf1	equ	0xFE7
 10281                           fsr1h	equ	0xFE2
 10282                           fsr1l	equ	0xFE1
 10283                           indf2	equ	0xFDF
 10284                           postinc2	equ	0xFDE
 10285                           postdec2	equ	0xFDD
 10286                           fsr2h	equ	0xFDA
 10287                           fsr2l	equ	0xFD9
 10288                           status	equ	0xFD8
 10289                           
 10290 ;; *************** function _ConfigureOscillator *****************
 10291 ;; Defined at:
 10292 ;;		line 6 in file "system.c"
 10293 ;; Parameters:    Size  Location     Type
 10294 ;;		None
 10295 ;; Auto vars:     Size  Location     Type
 10296 ;;		None
 10297 ;; Return value:  Size  Location     Type
 10298 ;;		None               void
 10299 ;; Registers used:
 10300 ;;		None
 10301 ;; Tracked objects:
 10302 ;;		On entry : 0/0
 10303 ;;		On exit  : 0/0
 10304 ;;		Unchanged: 0/0
 10305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10306 ;;      Params:         0       0       0       0       0       0       0       0       0
 10307 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10308 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10309 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10310 ;;Total ram usage:        0 bytes
 10311 ;; Hardware stack levels used:    1
 10312 ;; Hardware stack levels required when called:    5
 10313 ;; This function calls:
 10314 ;;		Nothing
 10315 ;; This function is called by:
 10316 ;;		_main
 10317 ;; This function uses a non-reentrant model
 10318 ;;
 10319                           
 10320                           	psect	text42
 10321  003B9E                     __ptext42:
 10322                           	opt stack 0
 10323  003B9E                     _ConfigureOscillator:
 10324                           	opt stack 25
 10325                           
 10326                           ;incstack = 0
 10327  003B9E  0012               	return	
 10328  003BA0                     __end_of_ConfigureOscillator:
 10329                           	opt stack 0
 10330                           tblptru	equ	0xFF8
 10331                           tblptrh	equ	0xFF7
 10332                           tblptrl	equ	0xFF6
 10333                           tablat	equ	0xFF5
 10334                           prodh	equ	0xFF4
 10335                           prodl	equ	0xFF3
 10336                           intcon	equ	0xFF2
 10337                           intcon2	equ	0xFF1
 10338                           indf0	equ	0xFEF
 10339                           fsr0h	equ	0xFEA
 10340                           fsr0l	equ	0xFE9
 10341                           wreg	equ	0xFE8
 10342                           indf1	equ	0xFE7
 10343                           fsr1h	equ	0xFE2
 10344                           fsr1l	equ	0xFE1
 10345                           indf2	equ	0xFDF
 10346                           postinc2	equ	0xFDE
 10347                           postdec2	equ	0xFDD
 10348                           fsr2h	equ	0xFDA
 10349                           fsr2l	equ	0xFD9
 10350                           status	equ	0xFD8
 10351                           
 10352 ;; *************** function _BusyADC *****************
 10353 ;; Defined at:
 10354 ;;		line 26 in file "plib/adcbusy.c"
 10355 ;; Parameters:    Size  Location     Type
 10356 ;;		None
 10357 ;; Auto vars:     Size  Location     Type
 10358 ;;		None
 10359 ;; Return value:  Size  Location     Type
 10360 ;;                  1    wreg      unsigned char 
 10361 ;; Registers used:
 10362 ;;		wreg
 10363 ;; Tracked objects:
 10364 ;;		On entry : 0/0
 10365 ;;		On exit  : 0/0
 10366 ;;		Unchanged: 0/0
 10367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10368 ;;      Params:         0       0       0       0       0       0       0       0       0
 10369 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10370 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10371 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10372 ;;Total ram usage:        0 bytes
 10373 ;; Hardware stack levels used:    1
 10374 ;; Hardware stack levels required when called:    5
 10375 ;; This function calls:
 10376 ;;		Nothing
 10377 ;; This function is called by:
 10378 ;;		_main
 10379 ;; This function uses a non-reentrant model
 10380 ;;
 10381                           
 10382                           	psect	text43
 10383  003B6C                     __ptext43:
 10384                           	opt stack 0
 10385  003B6C                     _BusyADC:
 10386                           	opt stack 25
 10387                           
 10388                           ;adcbusy.c: 28: return(ADCON0bits.GO);
 10389                           
 10390                           ;incstack = 0
 10391  003B6C  A2C2               	btfss	4034,1,c	;volatile
 10392  003B6E  D002               	goto	u2080
 10393  003B70  0E01               	movlw	1
 10394  003B72  D001               	goto	l5
 10395  003B74                     u2080:
 10396  003B74  0E00               	movlw	0
 10397  003B76                     l5:
 10398  003B76  0012               	return	
 10399  003B78                     __end_of_BusyADC:
 10400                           	opt stack 0
 10401                           tblptru	equ	0xFF8
 10402                           tblptrh	equ	0xFF7
 10403                           tblptrl	equ	0xFF6
 10404                           tablat	equ	0xFF5
 10405                           prodh	equ	0xFF4
 10406                           prodl	equ	0xFF3
 10407                           intcon	equ	0xFF2
 10408                           intcon2	equ	0xFF1
 10409                           indf0	equ	0xFEF
 10410                           fsr0h	equ	0xFEA
 10411                           fsr0l	equ	0xFE9
 10412                           wreg	equ	0xFE8
 10413                           indf1	equ	0xFE7
 10414                           fsr1h	equ	0xFE2
 10415                           fsr1l	equ	0xFE1
 10416                           indf2	equ	0xFDF
 10417                           postinc2	equ	0xFDE
 10418                           postdec2	equ	0xFDD
 10419                           fsr2h	equ	0xFDA
 10420                           fsr2l	equ	0xFD9
 10421                           status	equ	0xFD8
 10422                           
 10423 ;; *************** function ___ftpack *****************
 10424 ;; Defined at:
 10425 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\float.c"
 10426 ;; Parameters:    Size  Location     Type
 10427 ;;  arg             3   44[COMRAM] unsigned um
 10428 ;;  exp             1   47[COMRAM] unsigned char 
 10429 ;;  sign            1   48[COMRAM] unsigned char 
 10430 ;; Auto vars:     Size  Location     Type
 10431 ;;		None
 10432 ;; Return value:  Size  Location     Type
 10433 ;;                  3   44[COMRAM] float 
 10434 ;; Registers used:
 10435 ;;		wreg, status,2, status,0
 10436 ;; Tracked objects:
 10437 ;;		On entry : 0/0
 10438 ;;		On exit  : 0/0
 10439 ;;		Unchanged: 0/0
 10440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10441 ;;      Params:         5       0       0       0       0       0       0       0       0
 10442 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10443 ;;      Temps:          0       3       0       0       0       0       0       0       0
 10444 ;;      Totals:         5       3       0       0       0       0       0       0       0
 10445 ;;Total ram usage:        8 bytes
 10446 ;; Hardware stack levels used:    1
 10447 ;; Hardware stack levels required when called:    5
 10448 ;; This function calls:
 10449 ;;		Nothing
 10450 ;; This function is called by:
 10451 ;;		___ftadd
 10452 ;;		___ftdiv
 10453 ;;		___ftmul
 10454 ;;		___lltoft
 10455 ;;		___lwtoft
 10456 ;; This function uses a non-reentrant model
 10457 ;;
 10458                           
 10459                           	psect	text44
 10460  00316E                     __ptext44:
 10461                           	opt stack 0
 10462  00316E                     ___ftpack:
 10463                           	opt stack 22
 10464                           
 10465                           ;incstack = 0
 10466  00316E  5030               	movf	___ftpack@exp,w,c
 10467  003170  B4D8               	btfsc	status,2,c
 10468  003172  D005               	goto	l4728
 10469  003174  502D               	movf	___ftpack@arg,w,c
 10470  003176  102E               	iorwf	___ftpack@arg+1,w,c
 10471  003178  102F               	iorwf	___ftpack@arg+2,w,c
 10472  00317A  A4D8               	btfss	status,2,c
 10473  00317C  D00C               	goto	l4734
 10474  00317E                     l4728:
 10475  00317E  0E00               	movlw	0
 10476  003180  6E2D               	movwf	?___ftpack,c
 10477  003182  0E00               	movlw	0
 10478  003184  6E2E               	movwf	?___ftpack+1,c
 10479  003186  0E00               	movlw	0
 10480  003188  6E2F               	movwf	?___ftpack+2,c
 10481  00318A  D04C               	goto	l808
 10482  00318C                     l4732:
 10483  00318C  2A30               	incf	___ftpack@exp,f,c
 10484  00318E  90D8               	bcf	status,0,c
 10485  003190  322F               	rrcf	___ftpack@arg+2,f,c
 10486  003192  322E               	rrcf	___ftpack@arg+1,f,c
 10487  003194  322D               	rrcf	___ftpack@arg,f,c
 10488  003196                     l4734:
 10489  003196  0E00               	movlw	0
 10490  003198  142D               	andwf	___ftpack@arg,w,c
 10491  00319A  0100               	movlb	0	; () banked
 10492  00319C  6F60               	movwf	??___ftpack& (0+255),b
 10493  00319E  0E00               	movlw	0
 10494  0031A0  142E               	andwf	___ftpack@arg+1,w,c
 10495  0031A2  0100               	movlb	0	; () banked
 10496  0031A4  6F61               	movwf	(??___ftpack+1)& (0+255),b
 10497  0031A6  0EFE               	movlw	254
 10498  0031A8  142F               	andwf	___ftpack@arg+2,w,c
 10499  0031AA  0100               	movlb	0	; () banked
 10500  0031AC  6F62               	movwf	(??___ftpack+2)& (0+255),b
 10501  0031AE  0100               	movlb	0	; () banked
 10502  0031B0  5160               	movf	??___ftpack& (0+255),w,b
 10503  0031B2  1161               	iorwf	(??___ftpack+1)& (0+255),w,b
 10504  0031B4  1162               	iorwf	(??___ftpack+2)& (0+255),w,b
 10505  0031B6  B4D8               	btfsc	status,2,c
 10506  0031B8  D00C               	goto	l4740
 10507  0031BA  D7E8               	goto	l4732
 10508  0031BC                     l4736:
 10509                           
 10510                           ; BSR set to: 0
 10511  0031BC  2A30               	incf	___ftpack@exp,f,c
 10512                           
 10513                           ; BSR set to: 0
 10514  0031BE  0E01               	movlw	1
 10515  0031C0  262D               	addwf	___ftpack@arg,f,c
 10516  0031C2  0E00               	movlw	0
 10517  0031C4  222E               	addwfc	___ftpack@arg+1,f,c
 10518  0031C6  0E00               	movlw	0
 10519  0031C8  222F               	addwfc	___ftpack@arg+2,f,c
 10520  0031CA  90D8               	bcf	status,0,c
 10521  0031CC  322F               	rrcf	___ftpack@arg+2,f,c
 10522  0031CE  322E               	rrcf	___ftpack@arg+1,f,c
 10523  0031D0  322D               	rrcf	___ftpack@arg,f,c
 10524  0031D2                     l4740:
 10525                           
 10526                           ; BSR set to: 0
 10527  0031D2  0E00               	movlw	0
 10528  0031D4  142D               	andwf	___ftpack@arg,w,c
 10529  0031D6  0100               	movlb	0	; () banked
 10530  0031D8  6F60               	movwf	??___ftpack& (0+255),b
 10531  0031DA  0E00               	movlw	0
 10532  0031DC  142E               	andwf	___ftpack@arg+1,w,c
 10533  0031DE  0100               	movlb	0	; () banked
 10534  0031E0  6F61               	movwf	(??___ftpack+1)& (0+255),b
 10535  0031E2  0EFF               	movlw	255
 10536  0031E4  142F               	andwf	___ftpack@arg+2,w,c
 10537  0031E6  0100               	movlb	0	; () banked
 10538  0031E8  6F62               	movwf	(??___ftpack+2)& (0+255),b
 10539  0031EA  0100               	movlb	0	; () banked
 10540  0031EC  5160               	movf	??___ftpack& (0+255),w,b
 10541  0031EE  1161               	iorwf	(??___ftpack+1)& (0+255),w,b
 10542  0031F0  1162               	iorwf	(??___ftpack+2)& (0+255),w,b
 10543  0031F2  B4D8               	btfsc	status,2,c
 10544  0031F4  D006               	goto	l4744
 10545  0031F6  D7E2               	goto	l4736
 10546  0031F8                     l4742:
 10547  0031F8  0630               	decf	___ftpack@exp,f,c
 10548  0031FA  90D8               	bcf	status,0,c
 10549  0031FC  362D               	rlcf	___ftpack@arg,f,c
 10550  0031FE  362E               	rlcf	___ftpack@arg+1,f,c
 10551  003200  362F               	rlcf	___ftpack@arg+2,f,c
 10552  003202                     l4744:
 10553  003202  AE2E               	btfss	___ftpack@arg+1,7,c
 10554  003204  D7F9               	goto	l4742
 10555  003206  A030               	btfss	___ftpack@exp,0,c
 10556  003208  9E2E               	bcf	___ftpack@arg+1,7,c
 10557  00320A  90D8               	bcf	status,0,c
 10558  00320C  3230               	rrcf	___ftpack@exp,f,c
 10559  00320E  5030               	movf	___ftpack@exp,w,c
 10560  003210  122F               	iorwf	___ftpack@arg+2,f,c
 10561  003212  5031               	movf	___ftpack@sign,w,c
 10562  003214  A4D8               	btfss	status,2,c
 10563  003216  8E2F               	bsf	___ftpack@arg+2,7,c
 10564  003218  C02D  F02D         	movff	___ftpack@arg,?___ftpack
 10565  00321C  C02E  F02E         	movff	___ftpack@arg+1,?___ftpack+1
 10566  003220  C02F  F02F         	movff	___ftpack@arg+2,?___ftpack+2
 10567  003224                     l808:
 10568  003224  0012               	return	
 10569  003226                     __end_of___ftpack:
 10570                           	opt stack 0
 10571                           tblptru	equ	0xFF8
 10572                           tblptrh	equ	0xFF7
 10573                           tblptrl	equ	0xFF6
 10574                           tablat	equ	0xFF5
 10575                           prodh	equ	0xFF4
 10576                           prodl	equ	0xFF3
 10577                           intcon	equ	0xFF2
 10578                           intcon2	equ	0xFF1
 10579                           indf0	equ	0xFEF
 10580                           fsr0h	equ	0xFEA
 10581                           fsr0l	equ	0xFE9
 10582                           wreg	equ	0xFE8
 10583                           indf1	equ	0xFE7
 10584                           fsr1h	equ	0xFE2
 10585                           fsr1l	equ	0xFE1
 10586                           indf2	equ	0xFDF
 10587                           postinc2	equ	0xFDE
 10588                           postdec2	equ	0xFDD
 10589                           fsr2h	equ	0xFDA
 10590                           fsr2l	equ	0xFD9
 10591                           status	equ	0xFD8
 10592                           
 10593 ;; *************** function ___ftmul *****************
 10594 ;; Defined at:
 10595 ;;		line 51 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftmul.c"
 10596 ;; Parameters:    Size  Location     Type
 10597 ;;  f1              3   23[BANK0 ] float 
 10598 ;;  f2              3   26[BANK0 ] float 
 10599 ;; Auto vars:     Size  Location     Type
 10600 ;;  f3_as_produc    3   33[BANK0 ] unsigned um
 10601 ;;  sign            1   37[BANK0 ] unsigned char 
 10602 ;;  cntr            1   36[BANK0 ] unsigned char 
 10603 ;;  exp             1   32[BANK0 ] unsigned char 
 10604 ;; Return value:  Size  Location     Type
 10605 ;;                  3   23[BANK0 ] float 
 10606 ;; Registers used:
 10607 ;;		wreg, status,2, status,0, cstack
 10608 ;; Tracked objects:
 10609 ;;		On entry : 0/0
 10610 ;;		On exit  : 0/0
 10611 ;;		Unchanged: 0/0
 10612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10613 ;;      Params:         0       6       0       0       0       0       0       0       0
 10614 ;;      Locals:         0       6       0       0       0       0       0       0       0
 10615 ;;      Temps:          0       3       0       0       0       0       0       0       0
 10616 ;;      Totals:         0      15       0       0       0       0       0       0       0
 10617 ;;Total ram usage:       15 bytes
 10618 ;; Hardware stack levels used:    1
 10619 ;; Hardware stack levels required when called:    6
 10620 ;; This function calls:
 10621 ;;		___ftpack
 10622 ;; This function is called by:
 10623 ;;		_main
 10624 ;;		_fround
 10625 ;;		_scale
 10626 ;;		_sprintf
 10627 ;;		___asftmul
 10628 ;; This function uses a non-reentrant model
 10629 ;;
 10630                           
 10631                           	psect	text45
 10632  002692                     __ptext45:
 10633                           	opt stack 0
 10634  002692                     ___ftmul:
 10635                           	opt stack 22
 10636                           
 10637                           ;incstack = 0
 10638  002692  0100               	movlb	0	; () banked
 10639  002694  C079  F07D         	movff	___ftmul@f1+2,??___ftmul
 10640  002698  0100               	movlb	0	; () banked
 10641  00269A  6B7E               	clrf	(??___ftmul+1)& (0+255),b
 10642  00269C  6B7F               	clrf	(??___ftmul+2)& (0+255),b
 10643  00269E  0100               	movlb	0	; () banked
 10644  0026A0  0100               	movlb	0	; () banked
 10645  0026A2  3578               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 10646  0026A4  0100               	movlb	0	; () banked
 10647  0026A6  377D               	rlcf	??___ftmul& (0+255),f,b
 10648  0026A8  E301               	bnc	u3661
 10649  0026AA  817E               	bsf	(??___ftmul+1)& (0+255),0,b
 10650  0026AC                     u3661:
 10651  0026AC  0100               	movlb	0	; () banked
 10652  0026AE  517D               	movf	??___ftmul& (0+255),w,b
 10653  0026B0  0100               	movlb	0	; () banked
 10654  0026B2  0100               	movlb	0	; () banked
 10655  0026B4  6F80               	movwf	___ftmul@exp& (0+255),b
 10656  0026B6  0100               	movlb	0	; () banked
 10657  0026B8  6780               	tstfsz	___ftmul@exp& (0+255),b
 10658  0026BA  D001               	goto	l4886
 10659  0026BC  D015               	goto	u3690
 10660  0026BE                     l4886:
 10661                           
 10662                           ; BSR set to: 0
 10663  0026BE  0100               	movlb	0	; () banked
 10664  0026C0  C07C  F07D         	movff	___ftmul@f2+2,??___ftmul
 10665  0026C4  0100               	movlb	0	; () banked
 10666  0026C6  6B7E               	clrf	(??___ftmul+1)& (0+255),b
 10667  0026C8  6B7F               	clrf	(??___ftmul+2)& (0+255),b
 10668  0026CA  0100               	movlb	0	; () banked
 10669  0026CC  0100               	movlb	0	; () banked
 10670  0026CE  357B               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 10671  0026D0  0100               	movlb	0	; () banked
 10672  0026D2  377D               	rlcf	??___ftmul& (0+255),f,b
 10673  0026D4  E301               	bnc	u3681
 10674  0026D6  817E               	bsf	(??___ftmul+1)& (0+255),0,b
 10675  0026D8                     u3681:
 10676  0026D8  0100               	movlb	0	; () banked
 10677  0026DA  517D               	movf	??___ftmul& (0+255),w,b
 10678  0026DC  0100               	movlb	0	; () banked
 10679  0026DE  0100               	movlb	0	; () banked
 10680  0026E0  6F85               	movwf	___ftmul@sign& (0+255),b
 10681  0026E2  0100               	movlb	0	; () banked
 10682  0026E4  6785               	tstfsz	___ftmul@sign& (0+255),b
 10683  0026E6  D00D               	goto	l4892
 10684  0026E8                     u3690:
 10685                           
 10686                           ; BSR set to: 0
 10687  0026E8  0E00               	movlw	0
 10688  0026EA  0100               	movlb	0	; () banked
 10689  0026EC  0100               	movlb	0	; () banked
 10690  0026EE  6F77               	movwf	?___ftmul& (0+255),b
 10691  0026F0  0E00               	movlw	0
 10692  0026F2  0100               	movlb	0	; () banked
 10693  0026F4  0100               	movlb	0	; () banked
 10694  0026F6  6F78               	movwf	(?___ftmul+1)& (0+255),b
 10695  0026F8  0E00               	movlw	0
 10696  0026FA  0100               	movlb	0	; () banked
 10697  0026FC  0100               	movlb	0	; () banked
 10698  0026FE  6F79               	movwf	(?___ftmul+2)& (0+255),b
 10699  002700  D0A7               	goto	l909
 10700  002702                     l4892:
 10701                           
 10702                           ; BSR set to: 0
 10703  002702  0100               	movlb	0	; () banked
 10704  002704  0100               	movlb	0	; () banked
 10705  002706  5185               	movf	___ftmul@sign& (0+255),w,b
 10706  002708  0F7B               	addlw	123
 10707  00270A  0100               	movlb	0	; () banked
 10708  00270C  0100               	movlb	0	; () banked
 10709  00270E  2780               	addwf	___ftmul@exp& (0+255),f,b
 10710                           
 10711                           ; BSR set to: 0
 10712  002710  C079  F085         	movff	___ftmul@f1+2,___ftmul@sign
 10713  002714  0100               	movlb	0	; () banked
 10714  002716  0100               	movlb	0	; () banked
 10715  002718  517C               	movf	(___ftmul@f2+2)& (0+255),w,b
 10716  00271A  0100               	movlb	0	; () banked
 10717  00271C  0100               	movlb	0	; () banked
 10718  00271E  1B85               	xorwf	___ftmul@sign& (0+255),f,b
 10719  002720  0E80               	movlw	128
 10720  002722  0100               	movlb	0	; () banked
 10721  002724  0100               	movlb	0	; () banked
 10722  002726  1785               	andwf	___ftmul@sign& (0+255),f,b
 10723                           
 10724                           ; BSR set to: 0
 10725  002728  0100               	movlb	0	; () banked
 10726  00272A  0100               	movlb	0	; () banked
 10727  00272C  8F78               	bsf	(___ftmul@f1+1)& (0+255),7,b
 10728                           
 10729                           ; BSR set to: 0
 10730  00272E  0100               	movlb	0	; () banked
 10731  002730  0100               	movlb	0	; () banked
 10732  002732  8F7B               	bsf	(___ftmul@f2+1)& (0+255),7,b
 10733                           
 10734                           ; BSR set to: 0
 10735  002734  0EFF               	movlw	255
 10736  002736  0100               	movlb	0	; () banked
 10737  002738  0100               	movlb	0	; () banked
 10738  00273A  177A               	andwf	___ftmul@f2& (0+255),f,b
 10739  00273C  0EFF               	movlw	255
 10740  00273E  0100               	movlb	0	; () banked
 10741  002740  0100               	movlb	0	; () banked
 10742  002742  177B               	andwf	(___ftmul@f2+1)& (0+255),f,b
 10743  002744  0E00               	movlw	0
 10744  002746  0100               	movlb	0	; () banked
 10745  002748  0100               	movlb	0	; () banked
 10746  00274A  177C               	andwf	(___ftmul@f2+2)& (0+255),f,b
 10747                           
 10748                           ; BSR set to: 0
 10749  00274C  0E00               	movlw	0
 10750  00274E  0100               	movlb	0	; () banked
 10751  002750  0100               	movlb	0	; () banked
 10752  002752  6F81               	movwf	___ftmul@f3_as_product& (0+255),b
 10753  002754  0E00               	movlw	0
 10754  002756  0100               	movlb	0	; () banked
 10755  002758  0100               	movlb	0	; () banked
 10756  00275A  6F82               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 10757  00275C  0E00               	movlw	0
 10758  00275E  0100               	movlb	0	; () banked
 10759  002760  0100               	movlb	0	; () banked
 10760  002762  6F83               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 10761                           
 10762                           ; BSR set to: 0
 10763  002764  0100               	movlb	0	; () banked
 10764  002766  6F7D               	movwf	??___ftmul& (0+255),b
 10765  002768  0E07               	movlw	7
 10766  00276A  0100               	movlb	0	; () banked
 10767  00276C  0100               	movlb	0	; () banked
 10768  00276E  6F84               	movwf	___ftmul@cntr& (0+255),b
 10769  002770  0100               	movlb	0	; () banked
 10770  002772  517D               	movf	??___ftmul& (0+255),w,b
 10771  002774                     l4906:
 10772                           
 10773                           ; BSR set to: 0
 10774  002774  0100               	movlb	0	; () banked
 10775  002776  0100               	movlb	0	; () banked
 10776  002778  A177               	btfss	___ftmul@f1& (0+255),0,b
 10777  00277A  D012               	goto	l4910
 10778                           
 10779                           ; BSR set to: 0
 10780  00277C  0100               	movlb	0	; () banked
 10781  00277E  0100               	movlb	0	; () banked
 10782  002780  517A               	movf	___ftmul@f2& (0+255),w,b
 10783  002782  0100               	movlb	0	; () banked
 10784  002784  0100               	movlb	0	; () banked
 10785  002786  2781               	addwf	___ftmul@f3_as_product& (0+255),f,b
 10786  002788  0100               	movlb	0	; () banked
 10787  00278A  0100               	movlb	0	; () banked
 10788  00278C  517B               	movf	(___ftmul@f2+1)& (0+255),w,b
 10789  00278E  0100               	movlb	0	; () banked
 10790  002790  0100               	movlb	0	; () banked
 10791  002792  2382               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 10792  002794  0100               	movlb	0	; () banked
 10793  002796  0100               	movlb	0	; () banked
 10794  002798  517C               	movf	(___ftmul@f2+2)& (0+255),w,b
 10795  00279A  0100               	movlb	0	; () banked
 10796  00279C  0100               	movlb	0	; () banked
 10797  00279E  2383               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 10798  0027A0                     l4910:
 10799                           
 10800                           ; BSR set to: 0
 10801  0027A0  0100               	movlb	0	; () banked
 10802  0027A2  90D8               	bcf	status,0,c
 10803  0027A4  0100               	movlb	0	; () banked
 10804  0027A6  3379               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 10805  0027A8  0100               	movlb	0	; () banked
 10806  0027AA  3378               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 10807  0027AC  0100               	movlb	0	; () banked
 10808  0027AE  3377               	rrcf	___ftmul@f1& (0+255),f,b
 10809  0027B0  0100               	movlb	0	; () banked
 10810  0027B2  90D8               	bcf	status,0,c
 10811  0027B4  0100               	movlb	0	; () banked
 10812  0027B6  377A               	rlcf	___ftmul@f2& (0+255),f,b
 10813  0027B8  0100               	movlb	0	; () banked
 10814  0027BA  377B               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 10815  0027BC  0100               	movlb	0	; () banked
 10816  0027BE  377C               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 10817                           
 10818                           ; BSR set to: 0
 10819  0027C0  0100               	movlb	0	; () banked
 10820  0027C2  0100               	movlb	0	; () banked
 10821  0027C4  2F84               	decfsz	___ftmul@cntr& (0+255),f,b
 10822  0027C6  D7D6               	goto	l4906
 10823                           
 10824                           ; BSR set to: 0
 10825                           
 10826                           ; BSR set to: 0
 10827  0027C8  0100               	movlb	0	; () banked
 10828  0027CA  6F7D               	movwf	??___ftmul& (0+255),b
 10829  0027CC  0E09               	movlw	9
 10830  0027CE  0100               	movlb	0	; () banked
 10831  0027D0  0100               	movlb	0	; () banked
 10832  0027D2  6F84               	movwf	___ftmul@cntr& (0+255),b
 10833  0027D4  0100               	movlb	0	; () banked
 10834  0027D6  517D               	movf	??___ftmul& (0+255),w,b
 10835  0027D8                     l4916:
 10836                           
 10837                           ; BSR set to: 0
 10838  0027D8  0100               	movlb	0	; () banked
 10839  0027DA  0100               	movlb	0	; () banked
 10840  0027DC  A177               	btfss	___ftmul@f1& (0+255),0,b
 10841  0027DE  D012               	goto	l4920
 10842                           
 10843                           ; BSR set to: 0
 10844  0027E0  0100               	movlb	0	; () banked
 10845  0027E2  0100               	movlb	0	; () banked
 10846  0027E4  517A               	movf	___ftmul@f2& (0+255),w,b
 10847  0027E6  0100               	movlb	0	; () banked
 10848  0027E8  0100               	movlb	0	; () banked
 10849  0027EA  2781               	addwf	___ftmul@f3_as_product& (0+255),f,b
 10850  0027EC  0100               	movlb	0	; () banked
 10851  0027EE  0100               	movlb	0	; () banked
 10852  0027F0  517B               	movf	(___ftmul@f2+1)& (0+255),w,b
 10853  0027F2  0100               	movlb	0	; () banked
 10854  0027F4  0100               	movlb	0	; () banked
 10855  0027F6  2382               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 10856  0027F8  0100               	movlb	0	; () banked
 10857  0027FA  0100               	movlb	0	; () banked
 10858  0027FC  517C               	movf	(___ftmul@f2+2)& (0+255),w,b
 10859  0027FE  0100               	movlb	0	; () banked
 10860  002800  0100               	movlb	0	; () banked
 10861  002802  2383               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 10862  002804                     l4920:
 10863                           
 10864                           ; BSR set to: 0
 10865  002804  0100               	movlb	0	; () banked
 10866  002806  90D8               	bcf	status,0,c
 10867  002808  0100               	movlb	0	; () banked
 10868  00280A  3379               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 10869  00280C  0100               	movlb	0	; () banked
 10870  00280E  3378               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 10871  002810  0100               	movlb	0	; () banked
 10872  002812  3377               	rrcf	___ftmul@f1& (0+255),f,b
 10873  002814  0100               	movlb	0	; () banked
 10874  002816  90D8               	bcf	status,0,c
 10875  002818  0100               	movlb	0	; () banked
 10876  00281A  3383               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 10877  00281C  0100               	movlb	0	; () banked
 10878  00281E  3382               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 10879  002820  0100               	movlb	0	; () banked
 10880  002822  3381               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 10881                           
 10882                           ; BSR set to: 0
 10883  002824  0100               	movlb	0	; () banked
 10884  002826  0100               	movlb	0	; () banked
 10885  002828  2F84               	decfsz	___ftmul@cntr& (0+255),f,b
 10886  00282A  D7D6               	goto	l4916
 10887                           
 10888                           ; BSR set to: 0
 10889                           
 10890                           ; BSR set to: 0
 10891  00282C  C081  F02D         	movff	___ftmul@f3_as_product,___ftpack@arg
 10892  002830  C082  F02E         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 10893  002834  C083  F02F         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 10894  002838  C080  F030         	movff	___ftmul@exp,___ftpack@exp
 10895  00283C  C085  F031         	movff	___ftmul@sign,___ftpack@sign
 10896  002840  ECB7  F018         	call	___ftpack	;wreg free
 10897  002844  C02D  F077         	movff	?___ftpack,?___ftmul
 10898  002848  C02E  F078         	movff	?___ftpack+1,?___ftmul+1
 10899  00284C  C02F  F079         	movff	?___ftpack+2,?___ftmul+2
 10900  002850                     l909:
 10901  002850  0012               	return	
 10902  002852                     __end_of___ftmul:
 10903                           	opt stack 0
 10904                           tblptru	equ	0xFF8
 10905                           tblptrh	equ	0xFF7
 10906                           tblptrl	equ	0xFF6
 10907                           tablat	equ	0xFF5
 10908                           prodh	equ	0xFF4
 10909                           prodl	equ	0xFF3
 10910                           intcon	equ	0xFF2
 10911                           intcon2	equ	0xFF1
 10912                           indf0	equ	0xFEF
 10913                           fsr0h	equ	0xFEA
 10914                           fsr0l	equ	0xFE9
 10915                           wreg	equ	0xFE8
 10916                           indf1	equ	0xFE7
 10917                           fsr1h	equ	0xFE2
 10918                           fsr1l	equ	0xFE1
 10919                           indf2	equ	0xFDF
 10920                           postinc2	equ	0xFDE
 10921                           postdec2	equ	0xFDD
 10922                           fsr2h	equ	0xFDA
 10923                           fsr2l	equ	0xFD9
 10924                           status	equ	0xFD8
 10925                           
 10926 ;; *************** function _low_isr *****************
 10927 ;; Defined at:
 10928 ;;		line 17 in file "interrupts.c"
 10929 ;; Parameters:    Size  Location     Type
 10930 ;;		None
 10931 ;; Auto vars:     Size  Location     Type
 10932 ;;		None
 10933 ;; Return value:  Size  Location     Type
 10934 ;;		None               void
 10935 ;; Registers used:
 10936 ;;		None
 10937 ;; Tracked objects:
 10938 ;;		On entry : 0/0
 10939 ;;		On exit  : 0/0
 10940 ;;		Unchanged: 0/0
 10941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10942 ;;      Params:         0       0       0       0       0       0       0       0       0
 10943 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10944 ;;      Temps:         17       0       0       0       0       0       0       0       0
 10945 ;;      Totals:        17       0       0       0       0       0       0       0       0
 10946 ;;Total ram usage:       17 bytes
 10947 ;; Hardware stack levels used:    1
 10948 ;; Hardware stack levels required when called:    4
 10949 ;; This function calls:
 10950 ;;		Nothing
 10951 ;; This function is called by:
 10952 ;;		Interrupt level 1
 10953 ;; This function uses a non-reentrant model
 10954 ;;
 10955                           
 10956                           	psect	intcodelo
 10957  000018                     __pintcodelo:
 10958                           	opt stack 0
 10959  000018                     _low_isr:
 10960                           	opt stack 21
 10961                           
 10962                           ;incstack = 0
 10963  000018  CFD8 F001          	movff	status,??_low_isr
 10964  00001C  CFE8 F002          	movff	wreg,??_low_isr+1
 10965  000020  CFE0 F003          	movff	bsr,??_low_isr+2
 10966  000024  CFFA F004          	movff	pclath,??_low_isr+3
 10967  000028  CFFB F005          	movff	pclatu,??_low_isr+4
 10968  00002C  CFE9 F006          	movff	fsr0l,??_low_isr+5
 10969  000030  CFEA F007          	movff	fsr0h,??_low_isr+6
 10970  000034  CFE1 F008          	movff	fsr1l,??_low_isr+7
 10971  000038  CFE2 F009          	movff	fsr1h,??_low_isr+8
 10972  00003C  CFD9 F00A          	movff	fsr2l,??_low_isr+9
 10973  000040  CFDA F00B          	movff	fsr2h,??_low_isr+10
 10974  000044  CFF3 F00C          	movff	prodl,??_low_isr+11
 10975  000048  CFF4 F00D          	movff	prodh,??_low_isr+12
 10976  00004C  CFF6 F00E          	movff	tblptrl,??_low_isr+13
 10977  000050  CFF7 F00F          	movff	tblptrh,??_low_isr+14
 10978  000054  CFF8 F010          	movff	tblptru,??_low_isr+15
 10979  000058  CFF5 F011          	movff	tablat,??_low_isr+16
 10980  00005C  C011  FFF5         	movff	??_low_isr+16,tablat
 10981  000060  C010  FFF8         	movff	??_low_isr+15,tblptru
 10982  000064  C00F  FFF7         	movff	??_low_isr+14,tblptrh
 10983  000068  C00E  FFF6         	movff	??_low_isr+13,tblptrl
 10984  00006C  C00D  FFF4         	movff	??_low_isr+12,prodh
 10985  000070  C00C  FFF3         	movff	??_low_isr+11,prodl
 10986  000074  C00B  FFDA         	movff	??_low_isr+10,fsr2h
 10987  000078  C00A  FFD9         	movff	??_low_isr+9,fsr2l
 10988  00007C  C009  FFE2         	movff	??_low_isr+8,fsr1h
 10989  000080  C008  FFE1         	movff	??_low_isr+7,fsr1l
 10990  000084  C007  FFEA         	movff	??_low_isr+6,fsr0h
 10991  000088  C006  FFE9         	movff	??_low_isr+5,fsr0l
 10992  00008C  C005  FFFB         	movff	??_low_isr+4,pclatu
 10993  000090  C004  FFFA         	movff	??_low_isr+3,pclath
 10994  000094  C003  FFE0         	movff	??_low_isr+2,bsr
 10995  000098  C002  FFE8         	movff	??_low_isr+1,wreg
 10996  00009C  C001  FFD8         	movff	??_low_isr,status
 10997  0000A0  0010               	retfie	
 10998  0000A2                     __end_of_low_isr:
 10999                           	opt stack 0
 11000                           pclatu	equ	0xFFB
 11001                           pclath	equ	0xFFA
 11002                           tblptru	equ	0xFF8
 11003                           tblptrh	equ	0xFF7
 11004                           tblptrl	equ	0xFF6
 11005                           tablat	equ	0xFF5
 11006                           prodh	equ	0xFF4
 11007                           prodl	equ	0xFF3
 11008                           intcon	equ	0xFF2
 11009                           intcon2	equ	0xFF1
 11010                           indf0	equ	0xFEF
 11011                           fsr0h	equ	0xFEA
 11012                           fsr0l	equ	0xFE9
 11013                           wreg	equ	0xFE8
 11014                           indf1	equ	0xFE7
 11015                           fsr1h	equ	0xFE2
 11016                           fsr1l	equ	0xFE1
 11017                           bsr	equ	0xFE0
 11018                           indf2	equ	0xFDF
 11019                           postinc2	equ	0xFDE
 11020                           postdec2	equ	0xFDD
 11021                           fsr2h	equ	0xFDA
 11022                           fsr2l	equ	0xFD9
 11023                           status	equ	0xFD8
 11024                           
 11025 ;; *************** function _high_isr *****************
 11026 ;; Defined at:
 11027 ;;		line 8 in file "interrupts.c"
 11028 ;; Parameters:    Size  Location     Type
 11029 ;;		None
 11030 ;; Auto vars:     Size  Location     Type
 11031 ;;		None
 11032 ;; Return value:  Size  Location     Type
 11033 ;;		None               void
 11034 ;; Registers used:
 11035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11036 ;; Tracked objects:
 11037 ;;		On entry : 0/0
 11038 ;;		On exit  : 0/0
 11039 ;;		Unchanged: 0/0
 11040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11041 ;;      Params:         0       0       0       0       0       0       0       0       0
 11042 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11043 ;;      Temps:         15       0       0       0       0       0       0       0       0
 11044 ;;      Totals:        15       0       0       0       0       0       0       0       0
 11045 ;;Total ram usage:       15 bytes
 11046 ;; Hardware stack levels used:    1
 11047 ;; Hardware stack levels required when called:    3
 11048 ;; This function calls:
 11049 ;;		i2_lcd_clear
 11050 ;;		i2_lcd_write_buffer
 11051 ;; This function is called by:
 11052 ;;		Interrupt level 2
 11053 ;; This function uses a non-reentrant model
 11054 ;;
 11055                           
 11056                           	psect	intcode
 11057  000008                     __pintcode:
 11058                           	opt stack 0
 11059  000008                     _high_isr:
 11060                           	opt stack 21
 11061                           
 11062                           ;incstack = 0
 11063  000008  CFFA F01F          	movff	pclath,??_high_isr+1
 11064  00000C  CFFB F020          	movff	pclatu,??_high_isr+2
 11065  000010  ED69  F01A         	call	int_func,f	;refresh shadow registers
 11066                           pclatu	equ	0xFFB
 11067                           pclath	equ	0xFFA
 11068                           tblptru	equ	0xFF8
 11069                           tblptrh	equ	0xFF7
 11070                           tblptrl	equ	0xFF6
 11071                           tablat	equ	0xFF5
 11072                           prodh	equ	0xFF4
 11073                           prodl	equ	0xFF3
 11074                           intcon	equ	0xFF2
 11075                           intcon2	equ	0xFF1
 11076                           indf0	equ	0xFEF
 11077                           fsr0h	equ	0xFEA
 11078                           fsr0l	equ	0xFE9
 11079                           wreg	equ	0xFE8
 11080                           indf1	equ	0xFE7
 11081                           fsr1h	equ	0xFE2
 11082                           fsr1l	equ	0xFE1
 11083                           bsr	equ	0xFE0
 11084                           indf2	equ	0xFDF
 11085                           postinc2	equ	0xFDE
 11086                           postdec2	equ	0xFDD
 11087                           fsr2h	equ	0xFDA
 11088                           fsr2l	equ	0xFD9
 11089                           status	equ	0xFD8
 11090                           
 11091                           	psect	intcode_body
 11092  0034D2                     __pintcode_body:
 11093                           	opt stack 21
 11094  0034D2                     int_func:
 11095                           	opt stack 21
 11096  0034D2  0006               	pop		; remove dummy address from shadow register refresh
 11097  0034D4  CFE9 F021          	movff	fsr0l,??_high_isr+3
 11098  0034D8  CFEA F022          	movff	fsr0h,??_high_isr+4
 11099  0034DC  CFE1 F023          	movff	fsr1l,??_high_isr+5
 11100  0034E0  CFE2 F024          	movff	fsr1h,??_high_isr+6
 11101  0034E4  CFD9 F025          	movff	fsr2l,??_high_isr+7
 11102  0034E8  CFDA F026          	movff	fsr2h,??_high_isr+8
 11103  0034EC  CFF3 F027          	movff	prodl,??_high_isr+9
 11104  0034F0  CFF4 F028          	movff	prodh,??_high_isr+10
 11105  0034F4  CFF6 F029          	movff	tblptrl,??_high_isr+11
 11106  0034F8  CFF7 F02A          	movff	tblptrh,??_high_isr+12
 11107  0034FC  CFF8 F02B          	movff	tblptru,??_high_isr+13
 11108  003500  CFF5 F02C          	movff	tablat,??_high_isr+14
 11109                           
 11110                           ;interrupts.c: 9: if((INTCONbits.INT0IF == 1) && (INTCONbits.INT0IE == 1)){
 11111  003504  B2F2               	btfsc	intcon,1,c	;volatile
 11112  003506  A8F2               	btfss	intcon,4,c	;volatile
 11113  003508  D015               	goto	i2l188
 11114                           
 11115                           ;interrupts.c: 10: lcd_clear();
 11116  00350A  ECC9  F01D         	call	i2_lcd_clear	;wreg free
 11117                           
 11118                           ;interrupts.c: 11: lcd_write_buffer("INTERRUPT INT0", 14);
 11119  00350E  0E08               	movlw	high STR_1
 11120  003510  6E15               	movwf	i2lcd_write_buffer@buffer+1,c
 11121  003512  0E99               	movlw	low STR_1
 11122  003514  6E14               	movwf	i2lcd_write_buffer@buffer,c
 11123  003516  6E1E               	movwf	??_high_isr& (0+255),c
 11124  003518  0E0E               	movlw	14
 11125  00351A  6E16               	movwf	i2lcd_write_buffer@size,c
 11126  00351C  501E               	movf	??_high_isr& (0+255),w,c
 11127  00351E  EC43  F01B         	call	i2_lcd_write_buffer	;wreg free
 11128                           
 11129                           ;interrupts.c: 12: _delay((unsigned long)((10)*(48000000L/4000.0)));
 11130  003522  0E9C               	movlw	156
 11131  003524  6E1E               	movwf	??_high_isr& (0+255),c
 11132  003526  0ED7               	movlw	215
 11133  003528                     i2u496_47:
 11134  003528  2EE8               	decfsz	wreg,f,c
 11135  00352A  D7FE               	goto	i2u496_47
 11136  00352C  2E1E               	decfsz	??_high_isr& (0+255),f,c
 11137  00352E  D7FC               	goto	i2u496_47
 11138  003530  F000               	nop	
 11139                           
 11140                           ;interrupts.c: 13: INTCONbits.INT0IF = 0;
 11141  003532  92F2               	bcf	intcon,1,c	;volatile
 11142  003534                     i2l188:
 11143  003534  C02C  FFF5         	movff	??_high_isr+14,tablat
 11144  003538  C02B  FFF8         	movff	??_high_isr+13,tblptru
 11145  00353C  C02A  FFF7         	movff	??_high_isr+12,tblptrh
 11146  003540  C029  FFF6         	movff	??_high_isr+11,tblptrl
 11147  003544  C028  FFF4         	movff	??_high_isr+10,prodh
 11148  003548  C027  FFF3         	movff	??_high_isr+9,prodl
 11149  00354C  C026  FFDA         	movff	??_high_isr+8,fsr2h
 11150  003550  C025  FFD9         	movff	??_high_isr+7,fsr2l
 11151  003554  C024  FFE2         	movff	??_high_isr+6,fsr1h
 11152  003558  C023  FFE1         	movff	??_high_isr+5,fsr1l
 11153  00355C  C022  FFEA         	movff	??_high_isr+4,fsr0h
 11154  003560  C021  FFE9         	movff	??_high_isr+3,fsr0l
 11155  003564  C020  FFFB         	movff	??_high_isr+2,pclatu
 11156  003568  C01F  FFFA         	movff	??_high_isr+1,pclath
 11157  00356C  0011               	retfie		f
 11158  00356E                     __end_of_high_isr:
 11159                           	opt stack 0
 11160                           pclatu	equ	0xFFB
 11161                           pclath	equ	0xFFA
 11162                           tblptru	equ	0xFF8
 11163                           tblptrh	equ	0xFF7
 11164                           tblptrl	equ	0xFF6
 11165                           tablat	equ	0xFF5
 11166                           prodh	equ	0xFF4
 11167                           prodl	equ	0xFF3
 11168                           intcon	equ	0xFF2
 11169                           intcon2	equ	0xFF1
 11170                           indf0	equ	0xFEF
 11171                           fsr0h	equ	0xFEA
 11172                           fsr0l	equ	0xFE9
 11173                           wreg	equ	0xFE8
 11174                           indf1	equ	0xFE7
 11175                           fsr1h	equ	0xFE2
 11176                           fsr1l	equ	0xFE1
 11177                           bsr	equ	0xFE0
 11178                           indf2	equ	0xFDF
 11179                           postinc2	equ	0xFDE
 11180                           postdec2	equ	0xFDD
 11181                           fsr2h	equ	0xFDA
 11182                           fsr2l	equ	0xFD9
 11183                           status	equ	0xFD8
 11184                           
 11185 ;; *************** function i2_lcd_write_buffer *****************
 11186 ;; Defined at:
 11187 ;;		line 54 in file "lcd.c"
 11188 ;; Parameters:    Size  Location     Type
 11189 ;;  buffer          2   19[COMRAM] PTR const unsigned char 
 11190 ;;		 -> main@buffer(16), STR_1(15), 
 11191 ;;  size            1   21[COMRAM] unsigned char 
 11192 ;; Auto vars:     Size  Location     Type
 11193 ;;  lcd_write_bu    2   27[COMRAM] int 
 11194 ;;  lcd_write_bu    2   25[COMRAM] int 
 11195 ;; Return value:  Size  Location     Type
 11196 ;;		None               void
 11197 ;; Registers used:
 11198 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11199 ;; Tracked objects:
 11200 ;;		On entry : 0/0
 11201 ;;		On exit  : 0/0
 11202 ;;		Unchanged: 0/0
 11203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11204 ;;      Params:         3       0       0       0       0       0       0       0       0
 11205 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11206 ;;      Temps:          3       0       0       0       0       0       0       0       0
 11207 ;;      Totals:        10       0       0       0       0       0       0       0       0
 11208 ;;Total ram usage:       10 bytes
 11209 ;; Hardware stack levels used:    1
 11210 ;; Hardware stack levels required when called:    2
 11211 ;; This function calls:
 11212 ;;		i2_lcd_write
 11213 ;; This function is called by:
 11214 ;;		_high_isr
 11215 ;; This function uses a non-reentrant model
 11216 ;;
 11217                           
 11218                           	psect	text48
 11219  003686                     __ptext48:
 11220                           	opt stack 0
 11221  003686                     i2_lcd_write_buffer:
 11222                           	opt stack 21
 11223                           
 11224                           ;lcd.c: 55: int pos = 0;
 11225                           
 11226                           ;incstack = 0
 11227  003686  0E00               	movlw	0
 11228  003688  6E1D               	movwf	i2lcd_write_buffer@pos+1,c
 11229  00368A  0E00               	movlw	0
 11230  00368C  6E1C               	movwf	i2lcd_write_buffer@pos,c
 11231                           
 11232                           ;lcd.c: 56: size = (size > 0x10) ? size = 0x10 : size;
 11233  00368E  0E11               	movlw	17
 11234  003690  5C16               	subwf	i2lcd_write_buffer@size,w,c
 11235  003692  A0D8               	btfss	status,0,c
 11236  003694  D004               	goto	L19
 11237  003696  6E17               	movwf	??i2_lcd_write_buffer& (0+255),c
 11238  003698  0E10               	movlw	16
 11239  00369A  6E16               	movwf	i2lcd_write_buffer@size,c
 11240  00369C  5017               	movf	??i2_lcd_write_buffer& (0+255),w,c
 11241  00369E                     L19:
 11242  00369E  C016  F01A         	movff	i2lcd_write_buffer@size,i2_lcd_write_buffer$1753
 11243  0036A2  6A1B               	clrf	i2_lcd_write_buffer$1753+1,c
 11244  0036A4  C01A  F016         	movff	i2_lcd_write_buffer$1753,i2lcd_write_buffer@size
 11245                           
 11246                           ;lcd.c: 57: for (pos = 0; pos < size; pos++)
 11247  0036A8  0E00               	movlw	0
 11248  0036AA  6E1D               	movwf	i2lcd_write_buffer@pos+1,c
 11249  0036AC  0E00               	movlw	0
 11250  0036AE  6E1C               	movwf	i2lcd_write_buffer@pos,c
 11251  0036B0  D01C               	goto	i2l5184
 11252  0036B2                     i2l5180:
 11253                           
 11254                           ;lcd.c: 58: {
 11255                           ;lcd.c: 59: lcd_write(buffer[pos]);
 11256  0036B2  C014  F017         	movff	i2lcd_write_buffer@buffer,??i2_lcd_write_buffer
 11257  0036B6  C015  F018         	movff	i2lcd_write_buffer@buffer+1,??i2_lcd_write_buffer+1
 11258  0036BA  501C               	movf	i2lcd_write_buffer@pos,w,c
 11259  0036BC  2617               	addwf	??i2_lcd_write_buffer,f,c
 11260  0036BE  501D               	movf	i2lcd_write_buffer@pos+1,w,c
 11261  0036C0  2218               	addwfc	??i2_lcd_write_buffer+1,f,c
 11262  0036C2  C017  FFF6         	movff	??i2_lcd_write_buffer,tblptrl
 11263  0036C6  C018  FFF7         	movff	??i2_lcd_write_buffer+1,tblptrh
 11264  0036CA  6AF8               	clrf	tblptru,c
 11265  0036CC  0E07               	movlw	(high __ramtop+-1)
 11266  0036CE  64F7               	cpfsgt	tblptrh,c
 11267  0036D0  D003               	bra	i2u404_47
 11268  0036D2  0008               	tblrd		*
 11269  0036D4  50F5               	movf	tablat,w,c
 11270  0036D6  D005               	bra	i2u404_40
 11271  0036D8                     i2u404_47:
 11272  0036D8  CFF6 FFE9          	movff	tblptrl,fsr0l
 11273  0036DC  CFF7 FFEA          	movff	tblptrh,fsr0h
 11274  0036E0  50EF               	movf	indf0,w,c
 11275  0036E2                     i2u404_40:
 11276  0036E2  EC79  F01D         	call	i2_lcd_write
 11277  0036E6  4A1C               	infsnz	i2lcd_write_buffer@pos,f,c
 11278  0036E8  2A1D               	incf	i2lcd_write_buffer@pos+1,f,c
 11279  0036EA                     i2l5184:
 11280  0036EA  5016               	movf	i2lcd_write_buffer@size,w,c
 11281  0036EC  6E17               	movwf	??i2_lcd_write_buffer& (0+255),c
 11282  0036EE  6A18               	clrf	(??i2_lcd_write_buffer+1)& (0+255),c
 11283  0036F0  501D               	movf	i2lcd_write_buffer@pos+1,w,c
 11284  0036F2  0A80               	xorlw	128
 11285  0036F4  6E19               	movwf	(??i2_lcd_write_buffer+2)& (0+255),c
 11286  0036F6  5017               	movf	??i2_lcd_write_buffer,w,c
 11287  0036F8  5C1C               	subwf	i2lcd_write_buffer@pos,w,c
 11288  0036FA  5018               	movf	??i2_lcd_write_buffer+1,w,c
 11289  0036FC  0A80               	xorlw	128
 11290  0036FE  5819               	subwfb	(??i2_lcd_write_buffer+2)& (0+255),w,c
 11291  003700  B0D8               	btfsc	status,0,c
 11292  003702  0012               	return	
 11293  003704  D7D6               	goto	i2l5180
 11294  003706                     __end_ofi2_lcd_write_buffer:
 11295                           	opt stack 0
 11296                           pclatu	equ	0xFFB
 11297                           pclath	equ	0xFFA
 11298                           tblptru	equ	0xFF8
 11299                           tblptrh	equ	0xFF7
 11300                           tblptrl	equ	0xFF6
 11301                           tablat	equ	0xFF5
 11302                           prodh	equ	0xFF4
 11303                           prodl	equ	0xFF3
 11304                           intcon	equ	0xFF2
 11305                           intcon2	equ	0xFF1
 11306                           indf0	equ	0xFEF
 11307                           fsr0h	equ	0xFEA
 11308                           fsr0l	equ	0xFE9
 11309                           wreg	equ	0xFE8
 11310                           indf1	equ	0xFE7
 11311                           fsr1h	equ	0xFE2
 11312                           fsr1l	equ	0xFE1
 11313                           bsr	equ	0xFE0
 11314                           indf2	equ	0xFDF
 11315                           postinc2	equ	0xFDE
 11316                           postdec2	equ	0xFDD
 11317                           fsr2h	equ	0xFDA
 11318                           fsr2l	equ	0xFD9
 11319                           status	equ	0xFD8
 11320                           
 11321 ;; *************** function i2_lcd_write *****************
 11322 ;; Defined at:
 11323 ;;		line 36 in file "lcd.c"
 11324 ;; Parameters:    Size  Location     Type
 11325 ;;  x               1    wreg     unsigned char 
 11326 ;; Auto vars:     Size  Location     Type
 11327 ;;  x               1   18[COMRAM] unsigned char 
 11328 ;; Return value:  Size  Location     Type
 11329 ;;		None               void
 11330 ;; Registers used:
 11331 ;;		wreg, cstack
 11332 ;; Tracked objects:
 11333 ;;		On entry : 0/0
 11334 ;;		On exit  : 0/0
 11335 ;;		Unchanged: 0/0
 11336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11337 ;;      Params:         0       0       0       0       0       0       0       0       0
 11338 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11339 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11340 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11341 ;;Total ram usage:        1 bytes
 11342 ;; Hardware stack levels used:    1
 11343 ;; Hardware stack levels required when called:    1
 11344 ;; This function calls:
 11345 ;;		i2_lcd_delay
 11346 ;; This function is called by:
 11347 ;;		i2_lcd_write_buffer
 11348 ;; This function uses a non-reentrant model
 11349 ;;
 11350                           
 11351                           	psect	text49
 11352  003AF2                     __ptext49:
 11353                           	opt stack 0
 11354  003AF2                     i2_lcd_write:
 11355                           	opt stack 21
 11356                           
 11357                           ;incstack = 0
 11358                           ;i2lcd_write@x stored from wreg
 11359  003AF2  CFE8 F013          	movff	wreg,i2lcd_write@x
 11360                           
 11361                           ;lcd.c: 37: PORTD = x;
 11362  003AF6  C013  FF83         	movff	i2lcd_write@x,3971	;volatile
 11363                           
 11364                           ;lcd.c: 38: PORTAbits.RA1 = 1;
 11365  003AFA  8280               	bsf	3968,1,c	;volatile
 11366                           
 11367                           ;lcd.c: 39: PORTAbits.RA2 = 0;
 11368  003AFC  9480               	bcf	3968,2,c	;volatile
 11369                           
 11370                           ;lcd.c: 40: PORTAbits.RA3 = 0;
 11371  003AFE  9680               	bcf	3968,3,c	;volatile
 11372                           
 11373                           ;lcd.c: 41: lcd_delay();
 11374  003B00  ECA1  F01D         	call	i2_lcd_delay	;wreg free
 11375                           
 11376                           ;lcd.c: 42: PORTAbits.RA3 = 1;
 11377  003B04  8680               	bsf	3968,3,c	;volatile
 11378  003B06  0012               	return	
 11379  003B08                     __end_ofi2_lcd_write:
 11380                           	opt stack 0
 11381                           pclatu	equ	0xFFB
 11382                           pclath	equ	0xFFA
 11383                           tblptru	equ	0xFF8
 11384                           tblptrh	equ	0xFF7
 11385                           tblptrl	equ	0xFF6
 11386                           tablat	equ	0xFF5
 11387                           prodh	equ	0xFF4
 11388                           prodl	equ	0xFF3
 11389                           intcon	equ	0xFF2
 11390                           intcon2	equ	0xFF1
 11391                           indf0	equ	0xFEF
 11392                           fsr0h	equ	0xFEA
 11393                           fsr0l	equ	0xFE9
 11394                           wreg	equ	0xFE8
 11395                           indf1	equ	0xFE7
 11396                           fsr1h	equ	0xFE2
 11397                           fsr1l	equ	0xFE1
 11398                           bsr	equ	0xFE0
 11399                           indf2	equ	0xFDF
 11400                           postinc2	equ	0xFDE
 11401                           postdec2	equ	0xFDD
 11402                           fsr2h	equ	0xFDA
 11403                           fsr2l	equ	0xFD9
 11404                           status	equ	0xFD8
 11405                           
 11406 ;; *************** function i2_lcd_clear *****************
 11407 ;; Defined at:
 11408 ;;		line 89 in file "lcd.c"
 11409 ;; Parameters:    Size  Location     Type
 11410 ;;		None
 11411 ;; Auto vars:     Size  Location     Type
 11412 ;;		None
 11413 ;; Return value:  Size  Location     Type
 11414 ;;		None               void
 11415 ;; Registers used:
 11416 ;;		wreg, cstack
 11417 ;; Tracked objects:
 11418 ;;		On entry : 0/0
 11419 ;;		On exit  : 0/0
 11420 ;;		Unchanged: 0/0
 11421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11422 ;;      Params:         0       0       0       0       0       0       0       0       0
 11423 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11424 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11425 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11426 ;;Total ram usage:        0 bytes
 11427 ;; Hardware stack levels used:    1
 11428 ;; Hardware stack levels required when called:    2
 11429 ;; This function calls:
 11430 ;;		i2_lcd_write_cmd
 11431 ;; This function is called by:
 11432 ;;		_high_isr
 11433 ;; This function uses a non-reentrant model
 11434 ;;
 11435                           
 11436                           	psect	text50
 11437  003B92                     __ptext50:
 11438                           	opt stack 0
 11439  003B92                     i2_lcd_clear:
 11440                           	opt stack 21
 11441                           
 11442                           ;lcd.c: 90: lcd_write_cmd(0x01);
 11443                           
 11444                           ;incstack = 0
 11445  003B92  0E01               	movlw	1
 11446  003B94  EC84  F01D         	call	i2_lcd_write_cmd
 11447  003B98  0012               	return	
 11448  003B9A                     __end_ofi2_lcd_clear:
 11449                           	opt stack 0
 11450                           pclatu	equ	0xFFB
 11451                           pclath	equ	0xFFA
 11452                           tblptru	equ	0xFF8
 11453                           tblptrh	equ	0xFF7
 11454                           tblptrl	equ	0xFF6
 11455                           tablat	equ	0xFF5
 11456                           prodh	equ	0xFF4
 11457                           prodl	equ	0xFF3
 11458                           intcon	equ	0xFF2
 11459                           intcon2	equ	0xFF1
 11460                           indf0	equ	0xFEF
 11461                           fsr0h	equ	0xFEA
 11462                           fsr0l	equ	0xFE9
 11463                           wreg	equ	0xFE8
 11464                           indf1	equ	0xFE7
 11465                           fsr1h	equ	0xFE2
 11466                           fsr1l	equ	0xFE1
 11467                           bsr	equ	0xFE0
 11468                           indf2	equ	0xFDF
 11469                           postinc2	equ	0xFDE
 11470                           postdec2	equ	0xFDD
 11471                           fsr2h	equ	0xFDA
 11472                           fsr2l	equ	0xFD9
 11473                           status	equ	0xFD8
 11474                           
 11475 ;; *************** function i2_lcd_write_cmd *****************
 11476 ;; Defined at:
 11477 ;;		line 45 in file "lcd.c"
 11478 ;; Parameters:    Size  Location     Type
 11479 ;;  x               1    wreg     unsigned char 
 11480 ;; Auto vars:     Size  Location     Type
 11481 ;;  x               1   18[COMRAM] unsigned char 
 11482 ;; Return value:  Size  Location     Type
 11483 ;;		None               void
 11484 ;; Registers used:
 11485 ;;		wreg, cstack
 11486 ;; Tracked objects:
 11487 ;;		On entry : 0/0
 11488 ;;		On exit  : 0/0
 11489 ;;		Unchanged: 0/0
 11490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11491 ;;      Params:         0       0       0       0       0       0       0       0       0
 11492 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11493 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11494 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11495 ;;Total ram usage:        1 bytes
 11496 ;; Hardware stack levels used:    1
 11497 ;; Hardware stack levels required when called:    1
 11498 ;; This function calls:
 11499 ;;		i2_lcd_delay
 11500 ;; This function is called by:
 11501 ;;		i2_lcd_clear
 11502 ;; This function uses a non-reentrant model
 11503 ;;
 11504                           
 11505                           	psect	text51
 11506  003B08                     __ptext51:
 11507                           	opt stack 0
 11508  003B08                     i2_lcd_write_cmd:
 11509                           	opt stack 21
 11510                           
 11511                           ;incstack = 0
 11512                           ;i2lcd_write_cmd@x stored from wreg
 11513  003B08  CFE8 F013          	movff	wreg,i2lcd_write_cmd@x
 11514                           
 11515                           ;lcd.c: 46: PORTD = x;
 11516  003B0C  C013  FF83         	movff	i2lcd_write_cmd@x,3971	;volatile
 11517                           
 11518                           ;lcd.c: 47: PORTAbits.RA1 = 0;
 11519  003B10  9280               	bcf	3968,1,c	;volatile
 11520                           
 11521                           ;lcd.c: 48: PORTAbits.RA2 = 0;
 11522  003B12  9480               	bcf	3968,2,c	;volatile
 11523                           
 11524                           ;lcd.c: 49: PORTAbits.RA3 = 0;
 11525  003B14  9680               	bcf	3968,3,c	;volatile
 11526                           
 11527                           ;lcd.c: 50: lcd_delay();
 11528  003B16  ECA1  F01D         	call	i2_lcd_delay	;wreg free
 11529                           
 11530                           ;lcd.c: 51: PORTAbits.RA3 = 1;
 11531  003B1A  8680               	bsf	3968,3,c	;volatile
 11532  003B1C  0012               	return	
 11533  003B1E                     __end_ofi2_lcd_write_cmd:
 11534                           	opt stack 0
 11535                           pclatu	equ	0xFFB
 11536                           pclath	equ	0xFFA
 11537                           tblptru	equ	0xFF8
 11538                           tblptrh	equ	0xFF7
 11539                           tblptrl	equ	0xFF6
 11540                           tablat	equ	0xFF5
 11541                           prodh	equ	0xFF4
 11542                           prodl	equ	0xFF3
 11543                           intcon	equ	0xFF2
 11544                           intcon2	equ	0xFF1
 11545                           indf0	equ	0xFEF
 11546                           fsr0h	equ	0xFEA
 11547                           fsr0l	equ	0xFE9
 11548                           wreg	equ	0xFE8
 11549                           indf1	equ	0xFE7
 11550                           fsr1h	equ	0xFE2
 11551                           fsr1l	equ	0xFE1
 11552                           bsr	equ	0xFE0
 11553                           indf2	equ	0xFDF
 11554                           postinc2	equ	0xFDE
 11555                           postdec2	equ	0xFDD
 11556                           fsr2h	equ	0xFDA
 11557                           fsr2l	equ	0xFD9
 11558                           status	equ	0xFD8
 11559                           
 11560 ;; *************** function i2_lcd_delay *****************
 11561 ;; Defined at:
 11562 ;;		line 85 in file "lcd.c"
 11563 ;; Parameters:    Size  Location     Type
 11564 ;;		None
 11565 ;; Auto vars:     Size  Location     Type
 11566 ;;		None
 11567 ;; Return value:  Size  Location     Type
 11568 ;;		None               void
 11569 ;; Registers used:
 11570 ;;		wreg
 11571 ;; Tracked objects:
 11572 ;;		On entry : 0/0
 11573 ;;		On exit  : 0/0
 11574 ;;		Unchanged: 0/0
 11575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11576 ;;      Params:         0       0       0       0       0       0       0       0       0
 11577 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11578 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11579 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11580 ;;Total ram usage:        1 bytes
 11581 ;; Hardware stack levels used:    1
 11582 ;; This function calls:
 11583 ;;		Nothing
 11584 ;; This function is called by:
 11585 ;;		i2_lcd_write
 11586 ;;		i2_lcd_write_cmd
 11587 ;; This function uses a non-reentrant model
 11588 ;;
 11589                           
 11590                           	psect	text52
 11591  003B42                     __ptext52:
 11592                           	opt stack 0
 11593  003B42                     i2_lcd_delay:
 11594                           	opt stack 21
 11595                           
 11596                           ;lcd.c: 86: _delay((unsigned long)((2)*(48000000L/4000.0)));
 11597                           
 11598                           ;incstack = 0
 11599  003B42  0E20               	movlw	32
 11600  003B44  6E12               	movwf	??i2_lcd_delay& (0+255),c
 11601  003B46  0E2A               	movlw	42
 11602  003B48                     i2u497_47:
 11603  003B48  2EE8               	decfsz	wreg,f,c
 11604  003B4A  D7FE               	goto	i2u497_47
 11605  003B4C  2E12               	decfsz	??i2_lcd_delay& (0+255),f,c
 11606  003B4E  D7FC               	goto	i2u497_47
 11607  003B50  0012               	return	
 11608  003B52                     __end_ofi2_lcd_delay:
 11609                           	opt stack 0
 11610                           pclatu	equ	0xFFB
 11611                           pclath	equ	0xFFA
 11612                           tblptru	equ	0xFF8
 11613                           tblptrh	equ	0xFF7
 11614                           tblptrl	equ	0xFF6
 11615                           tablat	equ	0xFF5
 11616                           prodh	equ	0xFF4
 11617                           prodl	equ	0xFF3
 11618                           intcon	equ	0xFF2
 11619                           intcon2	equ	0xFF1
 11620                           indf0	equ	0xFEF
 11621                           fsr0h	equ	0xFEA
 11622                           fsr0l	equ	0xFE9
 11623                           wreg	equ	0xFE8
 11624                           indf1	equ	0xFE7
 11625                           fsr1h	equ	0xFE2
 11626                           fsr1l	equ	0xFE1
 11627                           bsr	equ	0xFE0
 11628                           indf2	equ	0xFDF
 11629                           postinc2	equ	0xFDE
 11630                           postdec2	equ	0xFDD
 11631                           fsr2h	equ	0xFDA
 11632                           fsr2l	equ	0xFD9
 11633                           status	equ	0xFD8
 11634                           pclatu	equ	0xFFB
 11635                           pclath	equ	0xFFA
 11636                           tblptru	equ	0xFF8
 11637                           tblptrh	equ	0xFF7
 11638                           tblptrl	equ	0xFF6
 11639                           tablat	equ	0xFF5
 11640                           prodh	equ	0xFF4
 11641                           prodl	equ	0xFF3
 11642                           intcon	equ	0xFF2
 11643                           intcon2	equ	0xFF1
 11644                           indf0	equ	0xFEF
 11645                           fsr0h	equ	0xFEA
 11646                           fsr0l	equ	0xFE9
 11647                           wreg	equ	0xFE8
 11648                           indf1	equ	0xFE7
 11649                           fsr1h	equ	0xFE2
 11650                           fsr1l	equ	0xFE1
 11651                           bsr	equ	0xFE0
 11652                           indf2	equ	0xFDF
 11653                           postinc2	equ	0xFDE
 11654                           postdec2	equ	0xFDD
 11655                           fsr2h	equ	0xFDA
 11656                           fsr2l	equ	0xFD9
 11657                           status	equ	0xFD8
 11658                           
 11659                           	psect	rparam
 11660  0000                     pclatu	equ	0xFFB
 11661                           pclath	equ	0xFFA
 11662                           tblptru	equ	0xFF8
 11663                           tblptrh	equ	0xFF7
 11664                           tblptrl	equ	0xFF6
 11665                           tablat	equ	0xFF5
 11666                           prodh	equ	0xFF4
 11667                           prodl	equ	0xFF3
 11668                           intcon	equ	0xFF2
 11669                           intcon2	equ	0xFF1
 11670                           indf0	equ	0xFEF
 11671                           fsr0h	equ	0xFEA
 11672                           fsr0l	equ	0xFE9
 11673                           wreg	equ	0xFE8
 11674                           indf1	equ	0xFE7
 11675                           fsr1h	equ	0xFE2
 11676                           fsr1l	equ	0xFE1
 11677                           bsr	equ	0xFE0
 11678                           indf2	equ	0xFDF
 11679                           postinc2	equ	0xFDE
 11680                           postdec2	equ	0xFDD
 11681                           fsr2h	equ	0xFDA
 11682                           fsr2l	equ	0xFD9
 11683                           status	equ	0xFD8


Data Sizes:
    Strings     46
    Constant    134
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     50      51
    BANK0           160    139     139
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 16
		 -> main@buffer(BANK0[16]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 16
		 -> main@buffer(BANK0[16]), 

    memset@p1	PTR void  size(2) Largest target is 16
		 -> main@buffer(BANK0[16]), 

    memset@p	PTR unsigned char  size(2) Largest target is 16
		 -> main@buffer(BANK0[16]), 

    __asftsub@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@fval(BANK0[3]), 

    __asftmul@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@integ(BANK0[3]), 

    __asftadd@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@fval(BANK0[3]), 

    sprintf@_val._cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_3(CODE[13]), STR_2(CODE[18]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> main@buffer(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1807$_cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    lcd_write_buffer@buffer	PTR const unsigned char  size(2) Largest target is 16
		 -> main@buffer(BANK0[16]), STR_1(CODE[15]), 

    sp__memset	PTR void  size(2) Largest target is 16
		 -> main@buffer(BANK0[16]), 


Critical Paths under _main in COMRAM

    _main->_lcd_test
    _main->_memset
    _main->_strlen
    _sprintf->___awdiv
    _sprintf->___ftge
    _sprintf->___lldiv
    _sprintf->___lltoft
    _sprintf->__div_to_l_
    _sprintf->__tdiv_to_l_
    _scale->___awdiv
    _fround->___awdiv
    ___wmul->___awdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___asftsub->___lltoft
    ___ftadd->___ftpack
    _lcd_write_buffer->_lcd_write
    _lcd_test->_lcd_pos
    _lcd_write->_lcd_delay
    _lcd_pos->_lcd_write_cmd
    _lcd_enable->_lcd_delay
    _lcd_cursor_off->_lcd_write_cmd
    _lcd_clear->_lcd_write_cmd
    _lcd_write_cmd->_lcd_delay
    ___lwtoft->___ftpack
    ___ftdiv->___ftpack
    _InitApp->_OpenUSART
    ___ftmul->___awdiv

Critical Paths under _high_isr in COMRAM

    _high_isr->i2_lcd_write_buffer
    i2_lcd_write_buffer->i2_lcd_write
    i2_lcd_write->i2_lcd_delay
    i2_lcd_clear->i2_lcd_write_cmd
    i2_lcd_write_cmd->i2_lcd_delay

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fttol
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___asftsub->___ftsub
    ___ftsub->___ftadd
    ___asftmul->___ftmul
    ___asftadd->_fround
    ___ftadd->___ftpack
    ___lwtoft->___ftpack
    ___ftdiv->___lwtoft
    ___ftmul->___ftdiv

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                31    31      0   58389
                                            111 BANK0     28    28      0
                            _BusyADC
                _ConfigureOscillator
                         _ConvertADC
                            _InitApp
                            _ReadADC
                         _WriteUSART
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                          _lcd_clear
                     _lcd_cursor_off
                         _lcd_enable
                           _lcd_init
                            _lcd_pos
                           _lcd_test
                   _lcd_write_buffer
                             _memset
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               6     4      2     302
                                             44 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             55    46      9   46709
                                             60 BANK0     51    42      9
                          ___asftadd
                          ___asftmul
                          ___asftsub
                            ___awdiv
                            ___ftdiv (ARG)
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                           ___lwtoft (ARG)
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3    9858
                                             38 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                             44 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3    9579
                                             38 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2067
                                             10 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1603
                                             44 COMRAM     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1745
                                             49 COMRAM     1     1      0
                                              2 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     409
                                             44 COMRAM     6     0      6
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          16    10      6     552
                                             44 COMRAM     6     0      6
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    1846
                                             49 COMRAM     1     1      0
                                              3 BANK0      8     4      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     752
                                              8 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     480
                                             44 COMRAM     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     411
                                             45 BANK0     15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                             44 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     454
                                             44 COMRAM     6     0      6
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___asftsub                                            5     0      5    3099
                                             21 BANK0      5     0      5
                            ___ftsub
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    2927
                                             15 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) ___asftmul                                            5     0      5    3918
                                             38 BANK0      5     0      5
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) ___asftadd                                            5     0      5    2948
                                             48 BANK0      5     0      5
                            ___ftadd
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    2776
                                              3 BANK0     12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _memset                                               8     2      6     414
                                             44 COMRAM     6     0      6
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_write_buffer                                    10     7      3     449
                                             46 COMRAM     3     0      3
                                              0 BANK0      7     7      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_test                                            21    21      0     551
                                             49 COMRAM     1     1      0
                                              0 BANK0     20    20      0
                            _lcd_pos
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            1     1      0      22
                                             45 COMRAM     1     1      0
                          _lcd_delay
 ---------------------------------------------------------------------------------
 (2) _lcd_pos                                              3     2      1     369
                                             46 COMRAM     3     2      1
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0       0
                                             45 COMRAM     1     1      0
                         _lcd_enable
 ---------------------------------------------------------------------------------
 (2) _lcd_enable                                           0     0      0       0
                          _lcd_delay
 ---------------------------------------------------------------------------------
 (1) _lcd_cursor_off                                       0     0      0      22
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0      22
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_write_cmd                                        1     1      0      22
                                             45 COMRAM     1     1      0
                          _lcd_delay
 ---------------------------------------------------------------------------------
 (3) _lcd_delay                                            1     1      0       0
                                             44 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             5     2      3    1885
                                              3 BANK0      5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2190
                                              8 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) _WriteUSART                                           1     1      0      22
                                             44 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              2     0      2       0
                                             44 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              2     2      0     555
                                              0 BANK0      2     2      0
                            _OpenADC
                          _OpenUSART
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (2) _SetChanADC                                           2     2      0      22
                                             44 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            6     4      2     273
                                             44 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     260
                                             44 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1724
                                             44 COMRAM     5     0      5
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3746
                                             23 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1724
                                             44 COMRAM     5     0      5
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _low_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _high_isr                                            15    15      0     761
                                             29 COMRAM    15    15      0
                        i2_lcd_clear
                 i2_lcd_write_buffer
 ---------------------------------------------------------------------------------
 (8) i2_lcd_write_buffer                                  10     7      3     688
                                             19 COMRAM    10     7      3
                        i2_lcd_write
 ---------------------------------------------------------------------------------
 (9) i2_lcd_write                                          1     1      0      73
                                             18 COMRAM     1     1      0
                        i2_lcd_delay
 ---------------------------------------------------------------------------------
 (8) i2_lcd_clear                                          0     0      0      73
                    i2_lcd_write_cmd
 ---------------------------------------------------------------------------------
 (9) i2_lcd_write_cmd                                      1     1      0      73
                                             18 COMRAM     1     1      0
                        i2_lcd_delay
 ---------------------------------------------------------------------------------
 (10) i2_lcd_delay                                         1     1      0       0
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyADC
   _ConfigureOscillator
   _ConvertADC
   _InitApp
     _OpenADC
     _OpenUSART
     _SetChanADC
   _ReadADC
   _WriteUSART
   ___ftdiv
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___ftdiv (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___lwtoft
     ___ftpack
   _lcd_clear
     _lcd_write_cmd
       _lcd_delay
   _lcd_cursor_off
     _lcd_write_cmd
       _lcd_delay
   _lcd_enable
     _lcd_delay
   _lcd_init
     _lcd_enable
       _lcd_delay
   _lcd_pos
     _lcd_write_cmd
       _lcd_delay
   _lcd_test
     _lcd_pos
       _lcd_write_cmd
         _lcd_delay
     _lcd_write
       _lcd_delay
   _lcd_write_buffer
     _lcd_write
       _lcd_delay
   _memset
   _sprintf
     ___asftadd
       ___ftadd
         ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___asftmul
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___asftsub
       ___ftsub
         ___ftadd
           ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___awdiv
       ___awmod (ARG)
     ___ftdiv (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftge (ARG)
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg (ARG)
     ___fttol (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv (ARG)
     ___llmod (ARG)
       ___lldiv (ARG)
     ___lltoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_ (ARG)
     __tdiv_to_l_ (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _strlen

 _low_isr (ROOT)

 _high_isr (ROOT)
   i2_lcd_clear
     i2_lcd_write_cmd
       i2_lcd_delay
   i2_lcd_write_buffer
     i2_lcd_write
       i2_lcd_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8B      8B       5       86.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     32      33       1       53.7%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BE      20        0.0%
DATA                 0      0      BE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Tue Mar 25 22:16:07 2014

                ___asftadd@f2 0092                             l5 3B76                 ___asftadd@f1p 0090  
                          l34 382E                  ___awdiv@sign 0067                   __CFG_BOR$ON 000000  
                          bsr 000FE0           ___wmul@multiplicand 006C                   __CFG_BORV$3 000000  
                ___asftmul@f2 0088                  __CFG_CP0$OFF 000000                  ___asftsub@f2 0077  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                ___ftadd@exp1 006E                  ___ftadd@exp2 006D                   __CFG_LVP$ON 000000  
    __size_ofi2_lcd_write_cmd 0016                  ___ftadd@sign 006C                           l123 373E  
                         l124 3740                           l125 374A                           l126 374C  
                         l119 372A                           l128 376E                           l241 1E54  
                         l251 1FBA                           l335 3430                           l467 11E6  
                         l397 1C92                           l903 34D0                           l808 3224  
                         l851 2144                           l860 2262                           l909 2850  
                         l845 20C6                           l846 2372                           l919 3AA0  
                         l767 29FE                           l880 2B5C                           l776 29EE  
                         l849 210A                           l929 2E8A                           l769 2922  
                         l877 2B98                           l869 229A                           l973 3086  
                         l885 2D18                           l894 2D08                           l879 2AFA  
                         l983 315C                           l888 2C7C                  __CFG_CPB$OFF 000000  
                __CFG_CPD$OFF 000000                  ___awmod@sign 0061    __end_ofi2_lcd_write_buffer 3706  
                         wreg 000FE8                 ___asftmul@f1p 0086                 ___asftsub@f1p 0075  
                ___ftdiv@cntr 0071                  ___ftdiv@sign 0076                  __CFG_WDT$OFF 000000  
                        l5022 346A                          l4160 39CA                          l4152 3426  
                        l5032 34CE                          l5104 306E                          l4170 39EA  
                        l5026 34A2                          l4164 39D8                          l4174 3A38  
                        l5046 2D46                          l5126 357C                          l5064 2DEA  
                        l5128 3592                          l5400 1F8E                          l4178 3A4C  
                        l5082 2E7A                          l5074 2E2E                          l4506 3988  
                        l5410 1FE4                          l5076 2E48                          l5068 2E08  
                        l5092 2FE0                          l4700 2960                          l4508 398C  
                        l5412 200A                          l3902 372C                          l5078 2E50  
                        l5094 2FF6                          l4710 2992                          l5430 08F4  
                        l4800 21E2                          l5096 2FFE                          l4720 29CC  
                        l4624 2BEA                          l4608 3A80                          l5504 0BE8  
                        l5424 08CE                          l5352 1CDA                          l4810 223E  
                        l4802 21F2                          l4722 29E6                          l4714 29B0  
                        l4618 2BC2                          l5530 0D3A                          l5514 0C52  
                        l5450 09F4                          l5354 1CDE                          l4740 31D2  
                        l4732 318C                          l4812 2254                          l4804 2202  
                        l5612 10CA                          l5620 117A                          l5604 1084  
                        l5460 0A7C                          l5436 0936                          l5444 09C0  
                        l4910 27A0                          l4742 31F8                          l4734 3196  
                        l4654 2CAC                          l4638 2C46                          l5710 1560  
                        l5622 118A                          l5542 0DCA                          l5462 0A84  
                        l5454 0A4C                          l5374 1E22                          l4920 2804  
                        l4744 3202                          l4736 31BC                          l4728 317E  
                        l3944 3B2C                          l4680 28BE                          l4664 2CE6  
                        l5720 15CC                          l5712 156E                          l5704 1516  
                        l5480 0B24                          l5472 0AE8                          l5456 0A66  
                        l5384 1E7E                          l5376 1E30                          l4906 2774  
                        l4818 22D2                          l4770 20D4                          l4674 2888  
                        l4666 2D00                          l4658 2CCA                          l5802 1C66  
                        l5642 1222                          l5634 11EA                          l5570 0F1E  
                        l5554 0E7E                          l5546 0E10                          l5538 0DA2  
                        l5474 0AF8                          l4916 27D8                          l4844 2A70  
                        l3980 32B0                          l4828 234E                          l5820 2EF8  
                        l5732 1624                          l5716 15B2                          l5628 11A8  
                        l5492 0B86                          l5468 0AB4                          l5740 16F8  
                        l3894 371E                          l4838 2A2C                          l4782 2136  
                        l5830 2F3A                          l5814 2ECA                          l5726 15F4  
                        l5718 15C0                          l5646 1276                          l5590 0FE2  
                        l5558 0EA4                          l5486 0B48                          l5478 0B0C  
                        l5742 171C                          l5398 1F80                          l3976 3268  
                        l4792 2190                          l4776 2118                          l5664 13AC  
                        l5656 137E                          l5576 0F84                          l5488 0B62  
                        l5496 0B90                          l5826 2F20                          l5842 2F94  
                        l5738 16E2                          l5690 1470                          l5658 138E  
                        l5594 1042                          l5666 13BA                          l5498 0BC6  
                        l4892 2702                          l5828 2F32                          l5764 263C  
                        l5756 252A                          l5676 1412                          l4886 26BE  
                        l4798 21CC                          l5846 2FAC                          l5838 2F80  
                        l5870 3352                          l5862 332C                          l5694 149E  
                        l5598 1066                          l5784 19C2                          l5890 30BA  
                        l5882 3386                          l5874 3366                          l5866 3342  
                        l5858 3310                          l5778 18D2                          l5698 14DE  
                        l5892 30D4                          l5868 334E                          l5796 1B6A  
                        l5788 19D4                          l5894 30DC                          l5878 3374  
                        l5898 3140                          STR_1 0899                          STR_2 0887  
                        STR_3 08A8                          u2080 3B74                          u2410 339E  
                        u3220 2CD4                          u3310 29BA                          u3151 2BB0  
                        u3240 2872                          u3401 2062                          u2290 32A4  
                        u3411 2086                          u3171 2BD8                          u3260 28A8  
                        u4300 0CA6                          u3245 2866                          _PIE1 000F9D  
                        u2297 329A                          u3265 289C                          u4305 0C9A  
                        u3611 2A1A                          u4075 1D0E                          u3631 2A46  
                        u3640 2A56                          u3900 2D72                          u3661 26AC  
                        u4285 0C2A                          u3681 26D8                          u3905 2D68  
                        u3690 26E8                          u3930 2E12                          u3881 2D34  
                        u4927 2034                          u4937 3842                          u4947 3B38  
                        u4957 3668                   lcd_test@pos 0072                  __CFG_PWRT$ON 000000  
               __CFG_FCMEN$ON 000000                          _main 1C94                  ___ftpack@arg 002D  
                ___ftpack@exp 0030                          fsr0h 000FEA                          fsr1h 000FE2  
                        indf0 000FEF                          fsr0l 000FE9                          fsr2h 000FDA  
                        indf1 000FE7                          fsr1l 000FE1                          indf2 000FDF  
                        fsr2l 000FD9                          pclat 000FFA         _lcd_write_buffer$1753 0063  
                main@adcValue 00E7                          prodh 000FF4                          prodl 000FF3  
              ?_lcd_write_cmd 0001                          start 00A2                 __CFG_IESO$OFF 000000  
                _sprintf$1820 00AE                  _sprintf$2470 00AB                 __CFG_MCLRE$ON 000000  
                ___ftmul@cntr 0084                  ___ftmul@sign 0085               __end_of_BusyADC 3B78  
             __end_of_ReadADC 3B82               __end_of_InitApp 3686               __end_of_OpenADC 3832  
                ___fttol@exp1 009B                  ___fttol@lval 0097                 __CFG_PLLDIV$5 000000  
                 i2_lcd_delay 3B42                   i2_lcd_clear 3B92                  lcd_pos@linha 0031  
              __CFG_CCP2MX$ON 000000                         ?_main 0001               __end_of___awdiv 2FB6  
             __end_of___ftadd 2374               __end_of___awmod 3390               __end_of___ftdiv 2B9A  
                       _CMCON 000FB4               __end_of___ftneg 3AAE               __end_of___lldiv 3098  
                 i2_lcd_write 3AF2               __end_of___ftmul 2852               ___awdiv@divisor 0064  
             __end_of___llmod 316E               __end_of___ftsub 38FA               __end_of___fttol 2E8C  
                       i2l188 3534               ___awdiv@counter 0066                         _RCREG 000FAE  
                       _RCSTA 000FAB                         _SPBRG 000FAF                         _PORTA 000F80  
                       _PORTB 000F81                         _PORTC 000F82                         _PORTD 000F83  
                       _PORTE 000F84                 __CFG_USBDIV$2 000000                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISC 000F94                         _TRISD 000F95  
                       _TRISE 000F96                         _TXREG 000FAD                         _TXSTA 000FAC  
         _ConfigureOscillator 3B9E                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                  ___lltoft@exp 0032  
              __CFG_EBTR0$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000               __end_of_lcd_pos 39F2                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
             __end_of_dpowers 0829                         _scale 172A               __end_of_isdigit 3A88  
               ___ftpack@sign 0031                    _ConvertADC 3B9A               __end_of_low_isr 00A2  
                       tablat 000FF5                         status 000FD8               __end_of_sprintf 172A  
              __CFG_ICPRT$OFF 000000                __CFG_PBADEN$ON 000000          ?_ConfigureOscillator 0001  
              WriteUSART@data 002D               __initialization 3B60                  __end_of_main 2048  
                      ??_main 00CF                 ___fttol@sign1 0096                 __activetblptr 000002  
                  _SetChanADC 3AAE          __size_of__tdiv_to_l_ 0180                 lcd_pos@coluna 002F  
               lcd_test@F5277 0877             ??i2_lcd_write_cmd 0013                        _ADCON0 000FC2  
                      _ADCON1 000FC1                        _ADCON2 000FC0              ___llmod@dividend 0068  
                      ?_scale 0086                        _ADRESH 000FC4                        _ADRESL 000FC3  
            ___awdiv@dividend 0062              __end_of___ftpack 3226              __end_of___lltoft 35FE  
                      i2l5180 36B2                        i2l5184 36EA              __end_of___lwtoft 3A2A  
                      _SPBRGH 000FB0               ??_lcd_write_cmd 002E                     ??_BusyADC 002D  
                   ??_ReadADC 002F                     ??_InitApp 0060         ??_ConfigureOscillator 002D  
              __CFG_VREGEN$ON 000000                     ??_OpenADC 002F                __CFG_XINST$OFF 000000  
            __end_of__powers_ 0877              __end_of_lcd_init 3876              __end_of_high_isr 356E  
          __size_of_OpenUSART 006A              __end_of_lcd_test 3432                        ___ftge 3432  
    __end_of_lcd_write_buffer 32DC                        ___wmul 3770                     ??___awdiv 0032  
                   ??___ftadd 0069                __CFG_STVREN$ON 000000                     ??___awmod 0031  
                   ??___ftdiv 006E                     ??___ftneg 0030                     ??___lldiv 002D  
                   ??___ftmul 007D                     ??___llmod 0070                     ??___ftsub 0032  
                   ??___fttol 0091                        _memset 3A2A                        _fround 2374  
            ___awdiv@quotient 0068                sprintf@vd_1822 00B6               ___awmod@divisor 002F  
             ___awmod@counter 0060                        _strlen 397E                     ??_lcd_pos 0030  
       ___ftmul@f3_as_product 0081                     ??_isdigit 002D                  __mediumconst 0000  
                   ??_low_isr 0001                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                     ??_sprintf 00A5              ??_lcd_cursor_off 002F  
                 ?_ConvertADC 0001            __size_of___asftadd 0042            __size_of___asftmul 0042  
          __size_of___asftsub 0042        i2lcd_write_buffer@size 0016       i2_lcd_write_buffer$1753 001A  
                  __accesstop 0060       __end_of__initialization 3B62                    ___ftadd@f1 0063  
                  ___ftadd@f2 0066                    ___ftge@ff1 002D                    ___ftge@ff2 0030  
                  ___ftdiv@f1 0068                    ___ftdiv@f2 006B                    ___ftdiv@f3 0072  
                  ___ftneg@f1 002D                    ___ftmul@f1 0077                    ___ftmul@f2 007A  
                  ___ftsub@f1 006F                    ___ftsub@f2 0072                    ___fttol@f1 008D  
                  _WriteUSART 3B1E                __pcstackCOMRAM 0001                    ___lltoft@c 0063  
               __end_of_scale 1C94                    ___lwtoft@c 0063                    __div_to_l_ 2852  
                 ?_SetChanADC 0001            __size_of_lcd_delay 0010            __size_of_lcd_clear 0008  
           __end_of_OpenUSART 3770               __div_to_l_@exp1 0069            __size_of_lcd_write 0016  
             __div_to_l_@cntr 0068                  sprintf@integ 00BC                       ??_scale 0033  
             __div_to_l_@quot 0064                  sprintf@width 00C3            i2_lcd_write_buffer 3686  
               __div_to_l_@f1 002D                 __div_to_l_@f2 0030                  i2lcd_write@x 0013  
                     ?___ftge 002D           ?i2_lcd_write_buffer 0014                       ?___wmul 006A  
           __end_of___asftadd 397E                       _BAUDCON 000FB8                       ?_memset 002D  
                     ?_fround 0086                  ?i2_lcd_delay 0001                  ?i2_lcd_clear 0001  
           __end_of___asftmul 393C             __end_of___asftsub 38B8           __size_of_ConvertADC 0004  
                   ?___ftpack 002D                     ?___lltoft 0063                  ?i2_lcd_write 0001  
                     ?_strlen 002D                     ?___lwtoft 0063              i2lcd_write_cmd@x 0013  
                  _lcd_enable 3B52          ??i2_lcd_write_buffer 0017                     ?_lcd_init 0001  
                   ?_high_isr 0001                     ?_lcd_test 0001                       _BusyADC 3B6C  
                     _ReadADC 3B78                       _InitApp 35FE                       _OpenADC 37D2  
           __end_of__npowers_ 0850                       __Hparam 0000           __size_of_SetChanADC 0018  
                  _scale$2469 0089                       __Lparam 0000             __end_of_lcd_delay 3B42  
           __end_of_lcd_clear 3B92                   ?_WriteUSART 0001               __size_of___ftge 00A0  
                     ___awdiv 2E8C                       ___ftadd 2048                       ___awmod 32DC  
                     ___ftdiv 2A00             __end_of_lcd_write 3ADC                       ___ftneg 3A88  
                     ___lldiv 2FB6               __size_of___wmul 0062                       ___ftmul 2692  
                     ___llmod 3098                       ___ftsub 38B8                       ___fttol 2D1A  
                __psmallconst 0800               i2_lcd_write_cmd 3B08                       __pcinit 3B60  
                  ??___ftpack 0060               __size_of_memset 0034               __size_of_fround 031E  
                     __ramtop 0800                    ??___lltoft 0067                       __ptext0 1C94  
                     __ptext1 397E                       __ptext2 08B6                       __ptext3 172A  
                     __ptext4 3A5E                       __ptext5 2374                       __ptext6 3770  
                     __ptext7 32DC                       __ptext8 2E8C                       __ptext9 2B9A  
                     _lcd_pos 39B8                    ??___lwtoft 0066               __size_of_strlen 003A  
                 ?__div_to_l_ 002D                       _dpowers 0801                       _isdigit 3A5E  
            ___awmod@dividend 002D                       _low_isr 0018                OpenADC@config2 002D  
                     _sprintf 08B6                    ??_lcd_init 002E                    ??_high_isr 001E  
                  ??_lcd_test 0032                __pintcode_body 34D2          end_of_initialization 3B62  
                     memset@c 002F                       memset@n 0031                       memset@p 0060  
               __Lmediumconst 0000                       int_func 34D2               main@adcValueOld 00E0  
             ___lldiv@divisor 0064               ___lldiv@counter 0032                     _RCSTAbits 000FAB  
                     postdec2 000FDD                       postinc2 000FDE             ?_lcd_write_buffer 002F  
              __tdiv_to_l_@f1 002D                __tdiv_to_l_@f2 0030                       strlen@s 002D  
               ??__tdiv_to_l_ 0060            ??_lcd_write_buffer 0060                     _PORTAbits 000F80  
                 ?_lcd_enable 0001                     _TRISAbits 000F92                     _TRISCbits 000F94  
         __size_of_WriteUSART 0014                  ??_ConvertADC 002D   __end_of_ConfigureOscillator 3BA0  
                 ___ftdiv@exp 0075                    main@buffer 00D0                     _TXSTAbits 000FAC  
                  lcd_test@ln 0070                lcd_write_cmd@x 002E         __end_of_lcd_write_cmd 3AF2  
         __size_of__div_to_l_ 01AE       __end_ofi2_lcd_write_cmd 3B1E                    lcd_write@x 002E  
                 ___ftmul@exp 0080                __end_of___ftge 34D2                __end_of___wmul 37D2  
          __end_of_ConvertADC 3B9E                __end_of_memset 3A5E                __end_of_fround 2692  
        __size_ofi2_lcd_delay 0010          __size_ofi2_lcd_clear 0008                  ??_SetChanADC 002D  
              __end_of_strlen 39B8           start_initialization 3B60          __size_ofi2_lcd_write 0016  
         __end_of__tdiv_to_l_ 2D1A                     _OpenUSART 3706               ___llmod@divisor 006C  
             ___llmod@counter 0071        lcd_write_buffer@buffer 002F           __size_of_lcd_enable 000E  
          __end_of_SetChanADC 3AC6                      ??___ftge 0060                      ??___wmul 0033  
            __CFG_LPT1OSC$OFF 000000                      ??_memset 0033                      ??_fround 0033  
                    ??_strlen 002F         i2lcd_write_buffer@pos 001C                    fround@prec 008F  
           __size_of___ftpack 00B8                     ___asftadd 393C                     ___asftmul 38FA  
                   ___asftsub 3876             __size_of___lltoft 0090                   __pbssCOMRAM 0033  
           __size_of___lwtoft 0038                 __pcstackBANK0 0060           __end_of__stringdata 08B5  
                _isdigit$2095 002E          lcd_write_buffer@size 0031                    ?_OpenUSART 002D  
           __size_of_lcd_init 0044             __size_of_high_isr 3566                   sprintf@_val 00C8  
                 sprintf@flag 00BF             __size_of_lcd_test 00A2                   sprintf@fval 00C5  
                 sprintf@prec 00CC                      ?_BusyADC 0001                      ?_ReadADC 002D  
                    ?_InitApp 0001             OpenADC@portconfig 002E                      ?_OpenADC 002D  
                   _main$2466 00E2       __size_of_lcd_cursor_off 0008              ?i2_lcd_write_cmd 0001  
                ??_WriteUSART 002D                     __pintcode 0008                      ?___awdiv 0062  
                    ?___ftadd 0063                      ?___awmod 002D                      ?___ftdiv 0068  
                    ?___ftneg 002D                      ?___lldiv 0060                      ?___ftmul 0077  
                    ?___llmod 0068                      ?___ftsub 006F                     __npowers_ 0829  
                    ?___fttol 008D                     _lcd_delay 3B32                     _lcd_clear 3B8A  
                 __pintcodelo 0018                   __tdiv_to_l_ 2B9A                     _lcd_write 3AC6  
                    ?_lcd_pos 002F                  ??__div_to_l_ 0060                   __smallconst 0800  
                  ?___asftadd 0090                      ?_isdigit 0001                    ?___asftmul 0086  
       __end_oflcd_test@F5277 0887                    ?___asftsub 0075                      ?_low_isr 0001  
 __size_ofi2_lcd_write_buffer 0080                      ?_sprintf 009C                __size_of_scale 056A  
          __end_of_WriteUSART 3B32                ___wmul@product 006E                 OpenADC@config 0031  
                    _PIE1bits 000F9D                      i2u404_40 36E2                      i2u404_47 36D8  
                    _PIR1bits 000F9E            __end_of__div_to_l_ 2A00                      i2u496_47 3528  
                    i2u497_47 3B48                      _RCONbits 000FD0              __CFG_WDTPS$32768 000000  
                  ?_lcd_delay 0001                    ?_lcd_clear 0001                    _ADCON0bits 000FC2  
                 __stringdata 0887                    ?_lcd_write 0001             ___wmul@multiplier 006A  
             lcd_test@msgTest 0060                  ??_lcd_enable 002E                     main@count 00E9  
   __size_of_lcd_write_buffer 00B6                   _INTCON2bits 000FF1                   ??_OpenUSART 002F  
             OpenUSART@config 0032              __size_of_BusyADC 000C              __size_of_ReadADC 000A  
            __size_of_InitApp 0088                      __Hrparam 0000              __size_of_OpenADC 0060  
                    __Lrparam 0000            __end_of_lcd_enable 3B60              __size_of___awdiv 012A  
            __size_of___ftadd 032C              __size_of___awmod 00B4              __size_of___ftdiv 019A  
            __size_of___ftneg 0026              __size_of___lldiv 00E2              __size_of___ftmul 01C0  
            __size_of___llmod 00D6              __size_of___ftsub 0042              __size_of___fttol 0172  
                    ___ftpack 316E                   _fround$2467 008C                   _fround$2468 0089  
                    ___lltoft 356E                      ___lwtoft 39F2           lcd_write_buffer@pos 0065  
                 ??___asftadd 0033              __size_of_lcd_pos 003A                    sprintf@exp 00C1  
                 ??___asftmul 0033                   ??___asftsub 0033              __size_of_isdigit 002A  
            __size_of_low_isr 008A                      __ptext10 2852                      __ptext11 356E  
                    __ptext20 393C                      __ptext12 3098                      __ptext21 2048  
                    __ptext13 2FB6                      __ptext30 3B8A                      __ptext22 3A2A  
                    __ptext14 2D1A                      __ptext31 3ADC                      __ptext23 3226  
                    __ptext15 3A88                      __ptext40 37D2                      __ptext32 3B32  
                    __ptext24 3390                      __ptext16 3432                      __ptext41 3B9A  
                    __ptext33 39F2                      __ptext25 3AC6                      __ptext17 3876  
                    __ptext50 3B92                      __ptext42 3B9E                      __ptext34 2A00  
                    __ptext26 39B8                      __ptext18 38B8                      __ptext51 3B08  
                    __ptext43 3B6C                      __ptext35 3B1E                      __ptext27 3832  
                    __ptext19 38FA                      __ptext52 3B42                      __ptext44 316E  
                    __ptext36 3B78                      __ptext28 3B52                      __ptext45 2692  
                    __ptext37 35FE                      __ptext29 3B82                      __ptext38 3AAE  
                    __ptext39 3706                      __ptext48 3686                      __ptext49 3AF2  
                    __powers_ 0850                      _lcd_init 3832                      _high_isr 0008  
                    _lcd_test 3390              __size_of_sprintf 0E74                 __size_of_main 03B4  
__size_of_ConfigureOscillator 0002                _lcd_cursor_off 3B82                 ??i2_lcd_delay 0012  
               ??i2_lcd_clear 0014                   ??_lcd_delay 002D                   ??_lcd_clear 002F  
                    main@size 00E5                 ??i2_lcd_write 0013                   ??_lcd_write 002E  
       __CFG_CPUDIV$OSC1_PLL2 000000                    _INTCONbits 000FF2        __size_of_lcd_write_cmd 0016  
              OpenUSART@spbrg 002D                      isdigit@c 002F                      memset@p1 002D  
                    scale@scl 008C                      intlevel1 0000                      intlevel2 0000  
                   sprintf@ap 00BA              __tdiv_to_l_@exp1 0068                     sprintf@vd 00B2  
                   sprintf@sp 009C              __tdiv_to_l_@cntr 0067              __tdiv_to_l_@quot 0063  
            ___lldiv@dividend 0060        __end_of_lcd_cursor_off 3B8A             SetChanADC@channel 002E  
                ?__tdiv_to_l_ 002D                      sprintf@c 00CE                      sprintf@f 009E  
            ___lldiv@quotient 002E                      strlen@cp 0031           __end_ofi2_lcd_delay 3B52  
         __end_ofi2_lcd_clear 3B9A           __end_ofi2_lcd_write 3B08              _lcd_write_buffer 3226  
    i2lcd_write_buffer@buffer 0014            __CFG_FOSC$HSPLL_HS 000000               ?_lcd_cursor_off 0001  
                _USART_Status 0033                 _lcd_write_cmd 3ADC  
