

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Mar 24 13:54:32 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    30  0000                     
    31                           	psect	smallconst
    32  000800                     __psmallconst:
    33                           	opt stack 0
    34  000800  00                 	db	0
    35  000801                     lcd_test@F5275:
    36                           	opt stack 0
    37  000801  54                 	db	84
    38  000802  45                 	db	69
    39  000803  53                 	db	83
    40  000804  54                 	db	84
    41  000805  45                 	db	69
    42  000806  54                 	db	84
    43  000807  45                 	db	69
    44  000808  53                 	db	83
    45  000809  54                 	db	84
    46  00080A  45                 	db	69
    47  00080B  54                 	db	84
    48  00080C  45                 	db	69
    49  00080D  53                 	db	83
    50  00080E  54                 	db	84
    51  00080F  45                 	db	69
    52  000810  2E                 	db	46
    53  000811                     __end_oflcd_test@F5275:
    54                           	opt stack 0
    55  0000                     _ADCON1	set	4033
    56  0000                     _CMCON	set	4020
    57  0000                     _INTCON2bits	set	4081
    58  0000                     _INTCONbits	set	4082
    59  0000                     _PORTA	set	3968
    60  0000                     _PORTAbits	set	3968
    61  0000                     _PORTB	set	3969
    62  0000                     _PORTC	set	3970
    63  0000                     _PORTD	set	3971
    64  0000                     _PORTE	set	3972
    65  0000                     _RCONbits	set	4048
    66  0000                     _TRISA	set	3986
    67  0000                     _TRISAbits	set	3986
    68  0000                     _TRISB	set	3987
    69  0000                     _TRISC	set	3988
    70  0000                     _TRISD	set	3989
    71  0000                     _TRISE	set	3990
    72  000811                     __stringdata:
    73                           	opt stack 0
    74  000811                     STR_1:
    75  000811  49                 	db	73	;'I'
    76  000812  4E                 	db	78	;'N'
    77  000813  54                 	db	84	;'T'
    78  000814  45                 	db	69	;'E'
    79  000815  52                 	db	82	;'R'
    80  000816  52                 	db	82	;'R'
    81  000817  55                 	db	85	;'U'
    82  000818  50                 	db	80	;'P'
    83  000819  54                 	db	84	;'T'
    84  00081A  20                 	db	32
    85  00081B  49                 	db	73	;'I'
    86  00081C  4E                 	db	78	;'N'
    87  00081D  54                 	db	84	;'T'
    88  00081E  30                 	db	48	;'0'
    89  00081F  00                 	db	0
    90  000820                     __end_of__stringdata:
    91                           	opt stack 0
    92                           
    93                           ; #config settings
    94  000820  00                 	db	0	; dummy byte at the end
    95  0000                     
    96                           	psect	cinit
    97  000B34                     __pcinit:
    98                           	opt stack 0
    99  000B34                     start_initialization:
   100                           	opt stack 0
   101  000B34                     __initialization:
   102                           	opt stack 0
   103  000B34                     end_of_initialization:
   104                           	opt stack 0
   105  000B34                     __end_of__initialization:
   106                           	opt stack 0
   107  000B34  0E00               	movlw	low (__Lmediumconst shr (0+16))
   108  000B36  6EF8               	movwf	tblptru,c
   109  000B38  0100               	movlb	0
   110  000B3A  EF43  F005         	goto	_main	;jump to C main() function
   111                           tblptru	equ	0xFF8
   112                           
   113                           	psect	cstackBANK0
   114  000060                     __pcstackBANK0:
   115                           	opt stack 0
   116  000060                     lcd_test@msgTest:
   117                           	opt stack 0
   118                           
   119                           ; 16 bytes @ 0x0
   120  000060                     	ds	16
   121  000070                     lcd_test@ln:
   122                           	opt stack 0
   123                           
   124                           ; 2 bytes @ 0x10
   125  000070                     	ds	2
   126  000072                     lcd_test@pos:
   127                           	opt stack 0
   128                           
   129                           ; 2 bytes @ 0x12
   130  000072                     	ds	2
   131                           tblptru	equ	0xFF8
   132                           
   133                           	psect	cstackCOMRAM
   134  000001                     __pcstackCOMRAM:
   135                           	opt stack 0
   136  000001                     ??_low_isr:
   137  000001                     
   138                           ; 0 bytes @ 0x0
   139  000001                     	ds	17
   140  000012                     ??i2_lcd_delay:
   141                           
   142                           ; 0 bytes @ 0x11
   143  000012                     	ds	1
   144  000013                     i2lcd_write@x:
   145                           	opt stack 0
   146  000013                     i2lcd_write_cmd@x:
   147                           	opt stack 0
   148                           
   149                           ; 1 bytes @ 0x12
   150  000013                     	ds	1
   151  000014                     lcd_write_buffer@buffer:
   152                           	opt stack 0
   153                           
   154                           ; 2 bytes @ 0x13
   155  000014                     	ds	2
   156  000016                     lcd_write_buffer@size:
   157                           	opt stack 0
   158                           
   159                           ; 1 bytes @ 0x15
   160  000016                     	ds	1
   161  000017                     ??_lcd_write_buffer:
   162                           
   163                           ; 0 bytes @ 0x16
   164  000017                     	ds	3
   165  00001A                     _lcd_write_buffer$524:
   166                           	opt stack 0
   167                           
   168                           ; 2 bytes @ 0x19
   169  00001A                     	ds	2
   170  00001C                     lcd_write_buffer@pos:
   171                           	opt stack 0
   172                           
   173                           ; 2 bytes @ 0x1B
   174  00001C                     	ds	2
   175  00001E                     ??_high_isr:
   176                           
   177                           ; 0 bytes @ 0x1D
   178  00001E                     	ds	15
   179  00002D                     ??_lcd_delay:
   180                           
   181                           ; 0 bytes @ 0x2C
   182  00002D                     	ds	1
   183  00002E                     ??_lcd_init:
   184  00002E                     lcd_write@x:
   185                           	opt stack 0
   186  00002E                     lcd_write_cmd@x:
   187                           	opt stack 0
   188                           
   189                           ; 1 bytes @ 0x2D
   190  00002E                     	ds	1
   191  00002F                     lcd_pos@coluna:
   192                           	opt stack 0
   193                           
   194                           ; 1 bytes @ 0x2E
   195  00002F                     	ds	1
   196  000030                     ??_lcd_pos:
   197                           
   198                           ; 0 bytes @ 0x2F
   199  000030                     	ds	1
   200  000031                     lcd_pos@linha:
   201                           	opt stack 0
   202                           
   203                           ; 1 bytes @ 0x30
   204  000031                     	ds	1
   205  000032                     ??_lcd_test:
   206                           
   207                           ; 0 bytes @ 0x31
   208  000032                     	ds	1
   209  000033                     ??_main:
   210                           
   211                           ; 0 bytes @ 0x32
   212  000033                     	ds	1
   213                           tblptru	equ	0xFF8
   214                           
   215 ;;
   216 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   217 ;;
   218 ;; *************** function _main *****************
   219 ;; Defined at:
   220 ;;		line 8 in file "main.c"
   221 ;; Parameters:    Size  Location     Type
   222 ;;		None
   223 ;; Auto vars:     Size  Location     Type
   224 ;;		None
   225 ;; Return value:  Size  Location     Type
   226 ;;		None               void
   227 ;; Registers used:
   228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   229 ;; Tracked objects:
   230 ;;		On entry : 0/0
   231 ;;		On exit  : 0/0
   232 ;;		Unchanged: 0/0
   233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   234 ;;      Params:         0       0       0       0       0       0       0       0       0
   235 ;;      Locals:         0       0       0       0       0       0       0       0       0
   236 ;;      Temps:          1       0       0       0       0       0       0       0       0
   237 ;;      Totals:         1       0       0       0       0       0       0       0       0
   238 ;;Total ram usage:        1 bytes
   239 ;; Hardware stack levels required when called:    9
   240 ;; This function calls:
   241 ;;		_ConfigureOscillator
   242 ;;		_InitApp
   243 ;;		_lcd_cursor_off
   244 ;;		_lcd_enable
   245 ;;		_lcd_init
   246 ;;		_lcd_pos
   247 ;;		_lcd_test
   248 ;; This function is called by:
   249 ;;		Startup code after reset
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253                           	psect	text0
   254  000A86                     __ptext0:
   255                           	opt stack 0
   256  000A86                     _main:
   257                           	opt stack 22
   258                           
   259                           ;main.c: 10: ConfigureOscillator();
   260                           
   261                           ;incstack = 0
   262  000A86  ECA7  F005         	call	_ConfigureOscillator	;wreg free
   263                           
   264                           ;main.c: 11: InitApp();
   265  000A8A  EC06  F005         	call	_InitApp	;wreg free
   266                           
   267                           ;main.c: 13: lcd_init();
   268  000A8E  ECE5  F004         	call	_lcd_init	;wreg free
   269                           
   270                           ;main.c: 14: lcd_enable();
   271  000A92  EC93  F005         	call	_lcd_enable	;wreg free
   272                           
   273                           ;main.c: 15: lcd_cursor_off();
   274  000A96  EC9F  F005         	call	_lcd_cursor_off	;wreg free
   275                           
   276                           ;main.c: 16: lcd_test();
   277  000A9A  EC11  F004         	call	_lcd_test	;wreg free
   278                           
   279                           ;main.c: 17: lcd_pos(2,1);
   280  000A9E  6E33               	movwf	??_main& (0+255),c
   281  000AA0  0E01               	movlw	1
   282  000AA2  6E2F               	movwf	lcd_pos@coluna,c
   283  000AA4  5033               	movf	??_main& (0+255),w,c
   284  000AA6  0E02               	movlw	2
   285  000AA8  EC26  F005         	call	_lcd_pos
   286  000AAC                     l32:
   287                           
   288                           ;main.c: 19: {
   289  000AAC  D7FF               	goto	l32
   290  000AAE                     __end_of_main:
   291                           	opt stack 0
   292                           tblptru	equ	0xFF8
   293                           
   294 ;; *************** function _lcd_test *****************
   295 ;; Defined at:
   296 ;;		line 22 in file "lcd.c"
   297 ;; Parameters:    Size  Location     Type
   298 ;;		None
   299 ;; Auto vars:     Size  Location     Type
   300 ;;  msgTest        16    0[BANK0 ] const unsigned char [16]
   301 ;;  pos             2   18[BANK0 ] int 
   302 ;;  ln              2   16[BANK0 ] int 
   303 ;; Return value:  Size  Location     Type
   304 ;;		None               void
   305 ;; Registers used:
   306 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   307 ;; Tracked objects:
   308 ;;		On entry : 0/0
   309 ;;		On exit  : 0/0
   310 ;;		Unchanged: 0/0
   311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   312 ;;      Params:         0       0       0       0       0       0       0       0       0
   313 ;;      Locals:         0      20       0       0       0       0       0       0       0
   314 ;;      Temps:          1       0       0       0       0       0       0       0       0
   315 ;;      Totals:         1      20       0       0       0       0       0       0       0
   316 ;;Total ram usage:       21 bytes
   317 ;; Hardware stack levels used:    1
   318 ;; Hardware stack levels required when called:    8
   319 ;; This function calls:
   320 ;;		_lcd_pos
   321 ;;		_lcd_write
   322 ;; This function is called by:
   323 ;;		_main
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           	psect	text1
   328  000822                     __ptext1:
   329                           	opt stack 0
   330  000822                     _lcd_test:
   331                           	opt stack 22
   332                           
   333                           ;lcd.c: 23: int ln;
   334                           ;lcd.c: 24: int pos;
   335                           ;lcd.c: 25: const char msgTest[ ] = {'T', 'E', 'S', 'T', 'E', 'T', 'E', 'S', 'T', 'E', '
      +                          T', 'E', 'S', 'T', 'E', '.'};
   336                           
   337                           ;incstack = 0
   338  000822  0E01               	movlw	low lcd_test@F5275
   339  000824  6EF6               	movwf	tblptrl,c
   340  000826  0E08               	movlw	high lcd_test@F5275
   341  000828  6EF7               	movwf	tblptrh,c
   342  00082A  EE20  F060         	lfsr	2,lcd_test@msgTest
   343  00082E  0E10               	movlw	16
   344  000830                     u180:
   345  000830  0009               	tblrd		*+
   346  000832  CFF5 FFDE          	movff	tablat,postinc2
   347  000836  2EE8               	decfsz	wreg,f,c
   348  000838  D7FB               	bra	u180
   349                           
   350                           ;lcd.c: 27: for (ln = 1; ln < 3; ln++) {
   351  00083A  0E00               	movlw	0
   352  00083C  0100               	movlb	0	; () banked
   353  00083E  0100               	movlb	0	; () banked
   354  000840  6F71               	movwf	(lcd_test@ln+1)& (0+255),b
   355  000842  0E01               	movlw	1
   356  000844  0100               	movlb	0	; () banked
   357  000846  6F70               	movwf	lcd_test@ln& (0+255),b
   358  000848                     
   359                           ; BSR set to: 0
   360  000848  0100               	movlb	0	; () banked
   361  00084A  0100               	movlb	0	; () banked
   362  00084C  5171               	movf	(lcd_test@ln+1)& (0+255),w,b
   363  00084E  0A80               	xorlw	128
   364  000850  0F80               	addlw	-128
   365  000852  0E03               	movlw	3
   366  000854  B4D8               	btfsc	status,2,c
   367  000856  5D70               	subwf	lcd_test@ln& (0+255),w,b
   368  000858  B0D8               	btfsc	status,0,c
   369  00085A  D033               	goto	l101
   370                           
   371                           ; BSR set to: 0
   372                           ;lcd.c: 28: lcd_pos(ln, 1);
   373                           
   374                           ; BSR set to: 0
   375                           
   376                           ; BSR set to: 0
   377  00085C  6E32               	movwf	??_lcd_test& (0+255),c
   378  00085E  0E01               	movlw	1
   379  000860  6E2F               	movwf	lcd_pos@coluna,c
   380  000862  5032               	movf	??_lcd_test& (0+255),w,c
   381  000864  0100               	movlb	0	; () banked
   382  000866  0100               	movlb	0	; () banked
   383  000868  5170               	movf	lcd_test@ln& (0+255),w,b
   384  00086A  EC26  F005         	call	_lcd_pos
   385                           
   386                           ;lcd.c: 29: for (pos = 0; pos < 0x10; pos++)
   387  00086E  0E00               	movlw	0
   388  000870  0100               	movlb	0	; () banked
   389  000872  0100               	movlb	0	; () banked
   390  000874  6F73               	movwf	(lcd_test@pos+1)& (0+255),b
   391  000876  0E00               	movlw	0
   392  000878  0100               	movlb	0	; () banked
   393  00087A  6F72               	movwf	lcd_test@pos& (0+255),b
   394  00087C                     
   395                           ; BSR set to: 0
   396  00087C  0100               	movlb	0	; () banked
   397  00087E  0100               	movlb	0	; () banked
   398  000880  5173               	movf	(lcd_test@pos+1)& (0+255),w,b
   399  000882  0A80               	xorlw	128
   400  000884  0F80               	addlw	-128
   401  000886  0E10               	movlw	16
   402  000888  B4D8               	btfsc	status,2,c
   403  00088A  5D72               	subwf	lcd_test@pos& (0+255),w,b
   404  00088C  B0D8               	btfsc	status,0,c
   405  00088E  D014               	goto	l1024
   406                           
   407                           ; BSR set to: 0
   408                           ;lcd.c: 30: {
   409                           ;lcd.c: 31: lcd_write(msgTest[pos]);
   410                           
   411                           ; BSR set to: 0
   412                           
   413                           ; BSR set to: 0
   414  000890  0100               	movlb	0	; () banked
   415  000892  0E60               	movlw	low lcd_test@msgTest
   416  000894  0100               	movlb	0	; () banked
   417  000896  0100               	movlb	0	; () banked
   418  000898  2572               	addwf	lcd_test@pos& (0+255),w,b
   419  00089A  6ED9               	movwf	fsr2l,c
   420  00089C  0100               	movlb	0	; () banked
   421  00089E  0E00               	movlw	high lcd_test@msgTest
   422  0008A0  0100               	movlb	0	; () banked
   423  0008A2  0100               	movlb	0	; () banked
   424  0008A4  2173               	addwfc	(lcd_test@pos+1)& (0+255),w,b
   425  0008A6  6EDA               	movwf	fsr2h,c
   426  0008A8  50DF               	movf	indf2,w,c
   427  0008AA  EC57  F005         	call	_lcd_write
   428  0008AE  0100               	movlb	0	; () banked
   429  0008B0  0100               	movlb	0	; () banked
   430  0008B2  4B72               	infsnz	lcd_test@pos& (0+255),f,b
   431  0008B4  2B73               	incf	(lcd_test@pos+1)& (0+255),f,b
   432  0008B6  D7E2               	goto	L1
   433  0008B8                     l1024:
   434                           
   435                           ; BSR set to: 0
   436  0008B8  0100               	movlb	0	; () banked
   437  0008BA  0100               	movlb	0	; () banked
   438  0008BC  4B70               	infsnz	lcd_test@ln& (0+255),f,b
   439  0008BE  2B71               	incf	(lcd_test@ln+1)& (0+255),f,b
   440  0008C0  D7C3               	goto	L2
   441  0008C2                     l101:
   442                           
   443                           ; BSR set to: 0
   444  0008C2  0012               	return	
   445  0008C4                     __end_of_lcd_test:
   446                           	opt stack 0
   447                           tblptru	equ	0xFF8
   448                           tblptrh	equ	0xFF7
   449                           tblptrl	equ	0xFF6
   450                           tablat	equ	0xFF5
   451                           wreg	equ	0xFE8
   452                           indf2	equ	0xFDF
   453                           postinc2	equ	0xFDE
   454                           fsr2h	equ	0xFDA
   455                           fsr2l	equ	0xFD9
   456                           status	equ	0xFD8
   457                           
   458 ;; *************** function _lcd_write *****************
   459 ;; Defined at:
   460 ;;		line 36 in file "lcd.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;  x               1    wreg     unsigned char 
   463 ;; Auto vars:     Size  Location     Type
   464 ;;  x               1   45[COMRAM] unsigned char 
   465 ;; Return value:  Size  Location     Type
   466 ;;		None               void
   467 ;; Registers used:
   468 ;;		wreg, cstack
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   474 ;;      Params:         0       0       0       0       0       0       0       0       0
   475 ;;      Locals:         1       0       0       0       0       0       0       0       0
   476 ;;      Temps:          0       0       0       0       0       0       0       0       0
   477 ;;      Totals:         1       0       0       0       0       0       0       0       0
   478 ;;Total ram usage:        1 bytes
   479 ;; Hardware stack levels used:    1
   480 ;; Hardware stack levels required when called:    6
   481 ;; This function calls:
   482 ;;		_lcd_delay
   483 ;; This function is called by:
   484 ;;		_lcd_test
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           	psect	text2
   489  000AAE                     __ptext2:
   490                           	opt stack 0
   491  000AAE                     _lcd_write:
   492                           	opt stack 23
   493                           
   494                           ; BSR set to: 0
   495                           ;incstack = 0
   496                           ;lcd_write@x stored from wreg
   497  000AAE  CFE8 F02E          	movff	wreg,lcd_write@x
   498                           
   499                           ;lcd.c: 37: PORTD = x;
   500  000AB2  C02E  FF83         	movff	lcd_write@x,3971	;volatile
   501                           
   502                           ;lcd.c: 38: PORTAbits.RA1 = 1;
   503  000AB6  8280               	bsf	3968,1,c	;volatile
   504                           
   505                           ;lcd.c: 39: PORTAbits.RA2 = 0;
   506  000AB8  9480               	bcf	3968,2,c	;volatile
   507                           
   508                           ;lcd.c: 40: PORTAbits.RA3 = 0;
   509  000ABA  9680               	bcf	3968,3,c	;volatile
   510                           
   511                           ;lcd.c: 41: lcd_delay();
   512  000ABC  EC83  F005         	call	_lcd_delay	;wreg free
   513                           
   514                           ;lcd.c: 42: PORTAbits.RA3 = 1;
   515  000AC0  8680               	bsf	3968,3,c	;volatile
   516  000AC2  0012               	return	
   517  000AC4                     __end_of_lcd_write:
   518                           	opt stack 0
   519                           tblptru	equ	0xFF8
   520                           tblptrh	equ	0xFF7
   521                           tblptrl	equ	0xFF6
   522                           tablat	equ	0xFF5
   523                           wreg	equ	0xFE8
   524                           indf2	equ	0xFDF
   525                           postinc2	equ	0xFDE
   526                           fsr2h	equ	0xFDA
   527                           fsr2l	equ	0xFD9
   528                           status	equ	0xFD8
   529                           
   530 ;; *************** function _lcd_pos *****************
   531 ;; Defined at:
   532 ;;		line 71 in file "lcd.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;  linha           1    wreg     unsigned char 
   535 ;;  coluna          1   46[COMRAM] unsigned char 
   536 ;; Auto vars:     Size  Location     Type
   537 ;;  linha           1   48[COMRAM] unsigned char 
   538 ;; Return value:  Size  Location     Type
   539 ;;		None               void
   540 ;; Registers used:
   541 ;;		wreg, status,2, status,0, cstack
   542 ;; Tracked objects:
   543 ;;		On entry : 0/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   547 ;;      Params:         1       0       0       0       0       0       0       0       0
   548 ;;      Locals:         1       0       0       0       0       0       0       0       0
   549 ;;      Temps:          1       0       0       0       0       0       0       0       0
   550 ;;      Totals:         3       0       0       0       0       0       0       0       0
   551 ;;Total ram usage:        3 bytes
   552 ;; Hardware stack levels used:    1
   553 ;; Hardware stack levels required when called:    7
   554 ;; This function calls:
   555 ;;		_lcd_write_cmd
   556 ;; This function is called by:
   557 ;;		_main
   558 ;;		_lcd_test
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           	psect	text3
   563  000A4C                     __ptext3:
   564                           	opt stack 0
   565  000A4C                     _lcd_pos:
   566                           	opt stack 22
   567                           
   568                           ;incstack = 0
   569                           ;lcd_pos@linha stored from wreg
   570  000A4C  CFE8 F031          	movff	wreg,lcd_pos@linha
   571                           
   572                           ;lcd.c: 73: if (linha <= 1) {
   573  000A50  0E02               	movlw	2
   574  000A52  5C31               	subwf	lcd_pos@linha,w,c
   575  000A54  B0D8               	btfsc	status,0,c
   576  000A56  D003               	goto	l1032
   577                           
   578                           ;lcd.c: 74: linha = 0x80;
   579  000A58  6E30               	movwf	??_lcd_pos& (0+255),c
   580  000A5A  0E80               	movlw	128
   581  000A5C  D005               	goto	L3
   582  000A5E                     l1032:
   583                           
   584                           ;lcd.c: 76: if (linha >= 2) {
   585  000A5E  0E01               	movlw	1
   586  000A60  6431               	cpfsgt	lcd_pos@linha,c
   587  000A62  D004               	goto	l1036
   588                           
   589                           ;lcd.c: 77: linha = 0xC0;
   590  000A64  6E30               	movwf	??_lcd_pos& (0+255),c
   591  000A66  0EC0               	movlw	192
   592  000A68                     L3:
   593  000A68  6E31               	movwf	lcd_pos@linha,c
   594  000A6A  5030               	movf	??_lcd_pos& (0+255),w,c
   595  000A6C                     l1036:
   596                           
   597                           ;lcd.c: 78: }
   598                           ;lcd.c: 79: }
   599                           ;lcd.c: 81: if ((coluna > 1) && (coluna <= 16)) linha += coluna;
   600  000A6C  0E01               	movlw	1
   601  000A6E  642F               	cpfsgt	lcd_pos@coluna,c
   602  000A70  D006               	goto	l1042
   603  000A72  0E11               	movlw	17
   604  000A74  5C2F               	subwf	lcd_pos@coluna,w,c
   605  000A76  B0D8               	btfsc	status,0,c
   606  000A78  D002               	goto	l1042
   607  000A7A  502F               	movf	lcd_pos@coluna,w,c
   608  000A7C  2631               	addwf	lcd_pos@linha,f,c
   609  000A7E                     l1042:
   610                           
   611                           ;lcd.c: 82: lcd_write_cmd(linha);
   612  000A7E  5031               	movf	lcd_pos@linha,w,c
   613  000A80  EC62  F005         	call	_lcd_write_cmd
   614  000A84  0012               	return	
   615  000A86                     __end_of_lcd_pos:
   616                           	opt stack 0
   617                           tblptru	equ	0xFF8
   618                           tblptrh	equ	0xFF7
   619                           tblptrl	equ	0xFF6
   620                           tablat	equ	0xFF5
   621                           wreg	equ	0xFE8
   622                           indf2	equ	0xFDF
   623                           postinc2	equ	0xFDE
   624                           fsr2h	equ	0xFDA
   625                           fsr2l	equ	0xFD9
   626                           status	equ	0xFD8
   627                           
   628 ;; *************** function _lcd_init *****************
   629 ;; Defined at:
   630 ;;		line 3 in file "lcd.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;		None               void
   637 ;; Registers used:
   638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   644 ;;      Params:         0       0       0       0       0       0       0       0       0
   645 ;;      Locals:         0       0       0       0       0       0       0       0       0
   646 ;;      Temps:          1       0       0       0       0       0       0       0       0
   647 ;;      Totals:         1       0       0       0       0       0       0       0       0
   648 ;;Total ram usage:        1 bytes
   649 ;; Hardware stack levels used:    1
   650 ;; Hardware stack levels required when called:    7
   651 ;; This function calls:
   652 ;;		_lcd_enable
   653 ;; This function is called by:
   654 ;;		_main
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658                           	psect	text4
   659  0009CA                     __ptext4:
   660                           	opt stack 0
   661  0009CA                     _lcd_init:
   662                           	opt stack 23
   663                           
   664                           ;lcd.c: 4: TRISAbits.RA1 = 0;
   665                           
   666                           ;incstack = 0
   667  0009CA  9292               	bcf	3986,1,c	;volatile
   668                           
   669                           ;lcd.c: 5: TRISAbits.RA2 = 0;
   670  0009CC  9492               	bcf	3986,2,c	;volatile
   671                           
   672                           ;lcd.c: 6: TRISAbits.RA3 = 0;
   673  0009CE  9692               	bcf	3986,3,c	;volatile
   674                           
   675                           ;lcd.c: 7: TRISD = 0X00;
   676  0009D0  0E00               	movlw	0
   677  0009D2  6E95               	movwf	3989,c	;volatile
   678                           
   679                           ;lcd.c: 9: _delay((unsigned long)((20)*(20000000L/4000.0)));
   680  0009D4  0E82               	movlw	130
   681  0009D6  6E2E               	movwf	??_lcd_init& (0+255),c
   682  0009D8  0EDE               	movlw	222
   683  0009DA                     u277:
   684  0009DA  2EE8               	decfsz	wreg,f,c
   685  0009DC  D7FE               	goto	u277
   686  0009DE  2E2E               	decfsz	??_lcd_init& (0+255),f,c
   687  0009E0  D7FC               	goto	u277
   688                           
   689                           ;lcd.c: 10: PORTD = 0X1;
   690  0009E2  0E01               	movlw	1
   691  0009E4  6E83               	movwf	3971,c	;volatile
   692                           
   693                           ;lcd.c: 11: lcd_enable();
   694  0009E6  EC93  F005         	call	_lcd_enable	;wreg free
   695                           
   696                           ;lcd.c: 12: PORTD = 0X38;
   697  0009EA  0E38               	movlw	56
   698  0009EC  6E83               	movwf	3971,c	;volatile
   699                           
   700                           ;lcd.c: 13: lcd_enable();
   701  0009EE  EC93  F005         	call	_lcd_enable	;wreg free
   702                           
   703                           ;lcd.c: 14: PORTD = 0X0e;
   704  0009F2  0E0E               	movlw	14
   705  0009F4  6E83               	movwf	3971,c	;volatile
   706                           
   707                           ;lcd.c: 15: lcd_enable();
   708  0009F6  EC93  F005         	call	_lcd_enable	;wreg free
   709                           
   710                           ;lcd.c: 16: PORTD = 0X06;
   711  0009FA  0E06               	movlw	6
   712  0009FC  6E83               	movwf	3971,c	;volatile
   713                           
   714                           ;lcd.c: 17: lcd_enable();
   715  0009FE  EC93  F005         	call	_lcd_enable	;wreg free
   716                           
   717                           ;lcd.c: 18: PORTD = 0X80;
   718  000A02  0E80               	movlw	128
   719  000A04  6E83               	movwf	3971,c	;volatile
   720                           
   721                           ;lcd.c: 19: lcd_enable();
   722  000A06  EC93  F005         	call	_lcd_enable	;wreg free
   723  000A0A  0012               	return	
   724  000A0C                     __end_of_lcd_init:
   725                           	opt stack 0
   726                           tblptru	equ	0xFF8
   727                           tblptrh	equ	0xFF7
   728                           tblptrl	equ	0xFF6
   729                           tablat	equ	0xFF5
   730                           wreg	equ	0xFE8
   731                           indf2	equ	0xFDF
   732                           postinc2	equ	0xFDE
   733                           fsr2h	equ	0xFDA
   734                           fsr2l	equ	0xFD9
   735                           status	equ	0xFD8
   736                           
   737 ;; *************** function _lcd_enable *****************
   738 ;; Defined at:
   739 ;;		line 63 in file "lcd.c"
   740 ;; Parameters:    Size  Location     Type
   741 ;;		None
   742 ;; Auto vars:     Size  Location     Type
   743 ;;		None
   744 ;; Return value:  Size  Location     Type
   745 ;;		None               void
   746 ;; Registers used:
   747 ;;		wreg, cstack
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   753 ;;      Params:         0       0       0       0       0       0       0       0       0
   754 ;;      Locals:         0       0       0       0       0       0       0       0       0
   755 ;;      Temps:          0       0       0       0       0       0       0       0       0
   756 ;;      Totals:         0       0       0       0       0       0       0       0       0
   757 ;;Total ram usage:        0 bytes
   758 ;; Hardware stack levels used:    1
   759 ;; Hardware stack levels required when called:    6
   760 ;; This function calls:
   761 ;;		_lcd_delay
   762 ;; This function is called by:
   763 ;;		_main
   764 ;;		_lcd_init
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           	psect	text5
   769  000B26                     __ptext5:
   770                           	opt stack 0
   771  000B26                     _lcd_enable:
   772                           	opt stack 23
   773                           
   774                           ;lcd.c: 64: PORTAbits.RA1 = 0;
   775                           
   776                           ;incstack = 0
   777  000B26  9280               	bcf	3968,1,c	;volatile
   778                           
   779                           ;lcd.c: 65: PORTAbits.RA2 = 0;
   780  000B28  9480               	bcf	3968,2,c	;volatile
   781                           
   782                           ;lcd.c: 66: PORTAbits.RA3 = 0;
   783  000B2A  9680               	bcf	3968,3,c	;volatile
   784                           
   785                           ;lcd.c: 67: lcd_delay();
   786  000B2C  EC83  F005         	call	_lcd_delay	;wreg free
   787                           
   788                           ;lcd.c: 68: PORTAbits.RA3 = 1;
   789  000B30  8680               	bsf	3968,3,c	;volatile
   790  000B32  0012               	return	
   791  000B34                     __end_of_lcd_enable:
   792                           	opt stack 0
   793                           tblptru	equ	0xFF8
   794                           tblptrh	equ	0xFF7
   795                           tblptrl	equ	0xFF6
   796                           tablat	equ	0xFF5
   797                           wreg	equ	0xFE8
   798                           indf2	equ	0xFDF
   799                           postinc2	equ	0xFDE
   800                           fsr2h	equ	0xFDA
   801                           fsr2l	equ	0xFD9
   802                           status	equ	0xFD8
   803                           
   804 ;; *************** function _lcd_cursor_off *****************
   805 ;; Defined at:
   806 ;;		line 93 in file "lcd.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;		None
   809 ;; Auto vars:     Size  Location     Type
   810 ;;		None
   811 ;; Return value:  Size  Location     Type
   812 ;;		None               void
   813 ;; Registers used:
   814 ;;		wreg, cstack
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   820 ;;      Params:         0       0       0       0       0       0       0       0       0
   821 ;;      Locals:         0       0       0       0       0       0       0       0       0
   822 ;;      Temps:          0       0       0       0       0       0       0       0       0
   823 ;;      Totals:         0       0       0       0       0       0       0       0       0
   824 ;;Total ram usage:        0 bytes
   825 ;; Hardware stack levels used:    1
   826 ;; Hardware stack levels required when called:    7
   827 ;; This function calls:
   828 ;;		_lcd_write_cmd
   829 ;; This function is called by:
   830 ;;		_main
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           	psect	text6
   835  000B3E                     __ptext6:
   836                           	opt stack 0
   837  000B3E                     _lcd_cursor_off:
   838                           	opt stack 23
   839                           
   840                           ;lcd.c: 94: lcd_write_cmd(0x0C);
   841                           
   842                           ;incstack = 0
   843  000B3E  0E0C               	movlw	12
   844  000B40  EC62  F005         	call	_lcd_write_cmd
   845  000B44  0012               	return	
   846  000B46                     __end_of_lcd_cursor_off:
   847                           	opt stack 0
   848                           tblptru	equ	0xFF8
   849                           tblptrh	equ	0xFF7
   850                           tblptrl	equ	0xFF6
   851                           tablat	equ	0xFF5
   852                           wreg	equ	0xFE8
   853                           indf2	equ	0xFDF
   854                           postinc2	equ	0xFDE
   855                           fsr2h	equ	0xFDA
   856                           fsr2l	equ	0xFD9
   857                           status	equ	0xFD8
   858                           
   859 ;; *************** function _lcd_write_cmd *****************
   860 ;; Defined at:
   861 ;;		line 45 in file "lcd.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;  x               1    wreg     unsigned char 
   864 ;; Auto vars:     Size  Location     Type
   865 ;;  x               1   45[COMRAM] unsigned char 
   866 ;; Return value:  Size  Location     Type
   867 ;;		None               void
   868 ;; Registers used:
   869 ;;		wreg, cstack
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   875 ;;      Params:         0       0       0       0       0       0       0       0       0
   876 ;;      Locals:         1       0       0       0       0       0       0       0       0
   877 ;;      Temps:          0       0       0       0       0       0       0       0       0
   878 ;;      Totals:         1       0       0       0       0       0       0       0       0
   879 ;;Total ram usage:        1 bytes
   880 ;; Hardware stack levels used:    1
   881 ;; Hardware stack levels required when called:    6
   882 ;; This function calls:
   883 ;;		_lcd_delay
   884 ;; This function is called by:
   885 ;;		_lcd_pos
   886 ;;		_lcd_cursor_off
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           	psect	text7
   891  000AC4                     __ptext7:
   892                           	opt stack 0
   893  000AC4                     _lcd_write_cmd:
   894                           	opt stack 22
   895                           
   896                           ;incstack = 0
   897                           ;lcd_write_cmd@x stored from wreg
   898  000AC4  CFE8 F02E          	movff	wreg,lcd_write_cmd@x
   899                           
   900                           ;lcd.c: 46: PORTD = x;
   901  000AC8  C02E  FF83         	movff	lcd_write_cmd@x,3971	;volatile
   902                           
   903                           ;lcd.c: 47: PORTAbits.RA1 = 0;
   904  000ACC  9280               	bcf	3968,1,c	;volatile
   905                           
   906                           ;lcd.c: 48: PORTAbits.RA2 = 0;
   907  000ACE  9480               	bcf	3968,2,c	;volatile
   908                           
   909                           ;lcd.c: 49: PORTAbits.RA3 = 0;
   910  000AD0  9680               	bcf	3968,3,c	;volatile
   911                           
   912                           ;lcd.c: 50: lcd_delay();
   913  000AD2  EC83  F005         	call	_lcd_delay	;wreg free
   914                           
   915                           ;lcd.c: 51: PORTAbits.RA3 = 1;
   916  000AD6  8680               	bsf	3968,3,c	;volatile
   917  000AD8  0012               	return	
   918  000ADA                     __end_of_lcd_write_cmd:
   919                           	opt stack 0
   920                           tblptru	equ	0xFF8
   921                           tblptrh	equ	0xFF7
   922                           tblptrl	equ	0xFF6
   923                           tablat	equ	0xFF5
   924                           wreg	equ	0xFE8
   925                           indf2	equ	0xFDF
   926                           postinc2	equ	0xFDE
   927                           fsr2h	equ	0xFDA
   928                           fsr2l	equ	0xFD9
   929                           status	equ	0xFD8
   930                           
   931 ;; *************** function _lcd_delay *****************
   932 ;; Defined at:
   933 ;;		line 85 in file "lcd.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;		None
   936 ;; Auto vars:     Size  Location     Type
   937 ;;		None
   938 ;; Return value:  Size  Location     Type
   939 ;;		None               void
   940 ;; Registers used:
   941 ;;		wreg
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   947 ;;      Params:         0       0       0       0       0       0       0       0       0
   948 ;;      Locals:         0       0       0       0       0       0       0       0       0
   949 ;;      Temps:          1       0       0       0       0       0       0       0       0
   950 ;;      Totals:         1       0       0       0       0       0       0       0       0
   951 ;;Total ram usage:        1 bytes
   952 ;; Hardware stack levels used:    1
   953 ;; Hardware stack levels required when called:    5
   954 ;; This function calls:
   955 ;;		Nothing
   956 ;; This function is called by:
   957 ;;		_lcd_write
   958 ;;		_lcd_write_cmd
   959 ;;		_lcd_enable
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           	psect	text8
   964  000B06                     __ptext8:
   965                           	opt stack 0
   966  000B06                     _lcd_delay:
   967                           	opt stack 23
   968                           
   969                           ;lcd.c: 86: _delay((unsigned long)((2)*(20000000L/4000.0)));
   970                           
   971                           ;incstack = 0
   972  000B06  0E0D               	movlw	13
   973  000B08  6E2D               	movwf	??_lcd_delay& (0+255),c
   974  000B0A  0EFC               	movlw	252
   975  000B0C                     u287:
   976  000B0C  2EE8               	decfsz	wreg,f,c
   977  000B0E  D7FE               	goto	u287
   978  000B10  2E2D               	decfsz	??_lcd_delay& (0+255),f,c
   979  000B12  D7FC               	goto	u287
   980  000B14  0012               	return	
   981  000B16                     __end_of_lcd_delay:
   982                           	opt stack 0
   983                           tblptru	equ	0xFF8
   984                           tblptrh	equ	0xFF7
   985                           tblptrl	equ	0xFF6
   986                           tablat	equ	0xFF5
   987                           wreg	equ	0xFE8
   988                           indf2	equ	0xFDF
   989                           postinc2	equ	0xFDE
   990                           fsr2h	equ	0xFDA
   991                           fsr2l	equ	0xFD9
   992                           status	equ	0xFD8
   993                           
   994 ;; *************** function _InitApp *****************
   995 ;; Defined at:
   996 ;;		line 6 in file "user.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;		None
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;		None
  1001 ;; Return value:  Size  Location     Type
  1002 ;;		None               void
  1003 ;; Registers used:
  1004 ;;		wreg, status,2
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1010 ;;      Params:         0       0       0       0       0       0       0       0       0
  1011 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1012 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1013 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1014 ;;Total ram usage:        0 bytes
  1015 ;; Hardware stack levels used:    1
  1016 ;; Hardware stack levels required when called:    5
  1017 ;; This function calls:
  1018 ;;		Nothing
  1019 ;; This function is called by:
  1020 ;;		_main
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           	psect	text9
  1025  000A0C                     __ptext9:
  1026                           	opt stack 0
  1027  000A0C                     _InitApp:
  1028                           	opt stack 25
  1029                           
  1030                           ;user.c: 8: TRISA = 0x00;
  1031                           
  1032                           ;incstack = 0
  1033  000A0C  0E00               	movlw	0
  1034  000A0E  6E92               	movwf	3986,c	;volatile
  1035                           
  1036                           ;user.c: 9: TRISB = 0b00000001;
  1037  000A10  0E01               	movlw	1
  1038  000A12  6E93               	movwf	3987,c	;volatile
  1039                           
  1040                           ;user.c: 10: TRISC = 0x00;
  1041  000A14  0E00               	movlw	0
  1042  000A16  6E94               	movwf	3988,c	;volatile
  1043                           
  1044                           ;user.c: 11: TRISD = 0x00;
  1045  000A18  0E00               	movlw	0
  1046  000A1A  6E95               	movwf	3989,c	;volatile
  1047                           
  1048                           ;user.c: 12: TRISE = 0x00;
  1049  000A1C  0E00               	movlw	0
  1050  000A1E  6E96               	movwf	3990,c	;volatile
  1051                           
  1052                           ;user.c: 14: ADCON1 = 0x0F;
  1053  000A20  0E0F               	movlw	15
  1054  000A22  6EC1               	movwf	4033,c	;volatile
  1055                           
  1056                           ;user.c: 15: CMCON = 0x07;
  1057  000A24  0E07               	movlw	7
  1058  000A26  6EB4               	movwf	4020,c	;volatile
  1059                           
  1060                           ;user.c: 17: PORTA = 0X00;
  1061  000A28  0E00               	movlw	0
  1062  000A2A  6E80               	movwf	3968,c	;volatile
  1063                           
  1064                           ;user.c: 18: PORTB = 0X00;
  1065  000A2C  0E00               	movlw	0
  1066  000A2E  6E81               	movwf	3969,c	;volatile
  1067                           
  1068                           ;user.c: 19: PORTC = 0X00;
  1069  000A30  0E00               	movlw	0
  1070  000A32  6E82               	movwf	3970,c	;volatile
  1071                           
  1072                           ;user.c: 20: PORTD = 0X00;
  1073  000A34  0E00               	movlw	0
  1074  000A36  6E83               	movwf	3971,c	;volatile
  1075                           
  1076                           ;user.c: 21: PORTE = 0X00;
  1077  000A38  0E00               	movlw	0
  1078  000A3A  6E84               	movwf	3972,c	;volatile
  1079                           
  1080                           ;user.c: 23: INTCON2bits.INTEDG0 = 0;
  1081  000A3C  9CF1               	bcf	intcon2,6,c	;volatile
  1082                           
  1083                           ;user.c: 24: INTCON2bits.RBIP = 1;
  1084  000A3E  80F1               	bsf	intcon2,0,c	;volatile
  1085                           
  1086                           ;user.c: 26: INTCONbits.INT0IF = 0;
  1087  000A40  92F2               	bcf	intcon,1,c	;volatile
  1088                           
  1089                           ;user.c: 27: INTCONbits.INT0IE = 1;
  1090  000A42  88F2               	bsf	intcon,4,c	;volatile
  1091                           
  1092                           ;user.c: 29: RCONbits.IPEN = 1;
  1093  000A44  8ED0               	bsf	4048,7,c	;volatile
  1094                           
  1095                           ;user.c: 30: INTCONbits.GIEH = 1;
  1096  000A46  8EF2               	bsf	intcon,7,c	;volatile
  1097                           
  1098                           ;user.c: 31: INTCONbits.GIEL = 0;
  1099  000A48  9CF2               	bcf	intcon,6,c	;volatile
  1100  000A4A  0012               	return	
  1101  000A4C                     __end_of_InitApp:
  1102                           	opt stack 0
  1103                           tblptru	equ	0xFF8
  1104                           tblptrh	equ	0xFF7
  1105                           tblptrl	equ	0xFF6
  1106                           tablat	equ	0xFF5
  1107                           intcon	equ	0xFF2
  1108                           intcon2	equ	0xFF1
  1109                           wreg	equ	0xFE8
  1110                           indf2	equ	0xFDF
  1111                           postinc2	equ	0xFDE
  1112                           fsr2h	equ	0xFDA
  1113                           fsr2l	equ	0xFD9
  1114                           status	equ	0xFD8
  1115                           
  1116 ;; *************** function _ConfigureOscillator *****************
  1117 ;; Defined at:
  1118 ;;		line 6 in file "system.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;		None
  1123 ;; Return value:  Size  Location     Type
  1124 ;;		None               void
  1125 ;; Registers used:
  1126 ;;		None
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1132 ;;      Params:         0       0       0       0       0       0       0       0       0
  1133 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1134 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1135 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1136 ;;Total ram usage:        0 bytes
  1137 ;; Hardware stack levels used:    1
  1138 ;; Hardware stack levels required when called:    5
  1139 ;; This function calls:
  1140 ;;		Nothing
  1141 ;; This function is called by:
  1142 ;;		_main
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           	psect	text10
  1147  000B4E                     __ptext10:
  1148                           	opt stack 0
  1149  000B4E                     _ConfigureOscillator:
  1150                           	opt stack 25
  1151                           
  1152                           ;incstack = 0
  1153  000B4E  0012               	return	
  1154  000B50                     __end_of_ConfigureOscillator:
  1155                           	opt stack 0
  1156                           tblptru	equ	0xFF8
  1157                           tblptrh	equ	0xFF7
  1158                           tblptrl	equ	0xFF6
  1159                           tablat	equ	0xFF5
  1160                           intcon	equ	0xFF2
  1161                           intcon2	equ	0xFF1
  1162                           wreg	equ	0xFE8
  1163                           indf2	equ	0xFDF
  1164                           postinc2	equ	0xFDE
  1165                           fsr2h	equ	0xFDA
  1166                           fsr2l	equ	0xFD9
  1167                           status	equ	0xFD8
  1168                           
  1169 ;; *************** function _low_isr *****************
  1170 ;; Defined at:
  1171 ;;		line 16 in file "interrupts.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;		None
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;		None
  1176 ;; Return value:  Size  Location     Type
  1177 ;;		None               void
  1178 ;; Registers used:
  1179 ;;		None
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1185 ;;      Params:         0       0       0       0       0       0       0       0       0
  1186 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1187 ;;      Temps:         17       0       0       0       0       0       0       0       0
  1188 ;;      Totals:        17       0       0       0       0       0       0       0       0
  1189 ;;Total ram usage:       17 bytes
  1190 ;; Hardware stack levels used:    1
  1191 ;; Hardware stack levels required when called:    4
  1192 ;; This function calls:
  1193 ;;		Nothing
  1194 ;; This function is called by:
  1195 ;;		Interrupt level 1
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	intcodelo
  1200  000018                     __pintcodelo:
  1201                           	opt stack 0
  1202  000018                     _low_isr:
  1203                           	opt stack 22
  1204                           
  1205                           ;incstack = 0
  1206  000018  CFD8 F001          	movff	status,??_low_isr
  1207  00001C  CFE8 F002          	movff	wreg,??_low_isr+1
  1208  000020  CFE0 F003          	movff	bsr,??_low_isr+2
  1209  000024  CFFA F004          	movff	pclath,??_low_isr+3
  1210  000028  CFFB F005          	movff	pclatu,??_low_isr+4
  1211  00002C  CFE9 F006          	movff	fsr0l,??_low_isr+5
  1212  000030  CFEA F007          	movff	fsr0h,??_low_isr+6
  1213  000034  CFE1 F008          	movff	fsr1l,??_low_isr+7
  1214  000038  CFE2 F009          	movff	fsr1h,??_low_isr+8
  1215  00003C  CFD9 F00A          	movff	fsr2l,??_low_isr+9
  1216  000040  CFDA F00B          	movff	fsr2h,??_low_isr+10
  1217  000044  CFF3 F00C          	movff	prodl,??_low_isr+11
  1218  000048  CFF4 F00D          	movff	prodh,??_low_isr+12
  1219  00004C  CFF6 F00E          	movff	tblptrl,??_low_isr+13
  1220  000050  CFF7 F00F          	movff	tblptrh,??_low_isr+14
  1221  000054  CFF8 F010          	movff	tblptru,??_low_isr+15
  1222  000058  CFF5 F011          	movff	tablat,??_low_isr+16
  1223  00005C  C011  FFF5         	movff	??_low_isr+16,tablat
  1224  000060  C010  FFF8         	movff	??_low_isr+15,tblptru
  1225  000064  C00F  FFF7         	movff	??_low_isr+14,tblptrh
  1226  000068  C00E  FFF6         	movff	??_low_isr+13,tblptrl
  1227  00006C  C00D  FFF4         	movff	??_low_isr+12,prodh
  1228  000070  C00C  FFF3         	movff	??_low_isr+11,prodl
  1229  000074  C00B  FFDA         	movff	??_low_isr+10,fsr2h
  1230  000078  C00A  FFD9         	movff	??_low_isr+9,fsr2l
  1231  00007C  C009  FFE2         	movff	??_low_isr+8,fsr1h
  1232  000080  C008  FFE1         	movff	??_low_isr+7,fsr1l
  1233  000084  C007  FFEA         	movff	??_low_isr+6,fsr0h
  1234  000088  C006  FFE9         	movff	??_low_isr+5,fsr0l
  1235  00008C  C005  FFFB         	movff	??_low_isr+4,pclatu
  1236  000090  C004  FFFA         	movff	??_low_isr+3,pclath
  1237  000094  C003  FFE0         	movff	??_low_isr+2,bsr
  1238  000098  C002  FFE8         	movff	??_low_isr+1,wreg
  1239  00009C  C001  FFD8         	movff	??_low_isr,status
  1240  0000A0  0010               	retfie	
  1241  0000A2                     __end_of_low_isr:
  1242                           	opt stack 0
  1243                           pclatu	equ	0xFFB
  1244                           pclath	equ	0xFFA
  1245                           tblptru	equ	0xFF8
  1246                           tblptrh	equ	0xFF7
  1247                           tblptrl	equ	0xFF6
  1248                           tablat	equ	0xFF5
  1249                           prodh	equ	0xFF4
  1250                           prodl	equ	0xFF3
  1251                           intcon	equ	0xFF2
  1252                           intcon2	equ	0xFF1
  1253                           fsr0h	equ	0xFEA
  1254                           fsr0l	equ	0xFE9
  1255                           wreg	equ	0xFE8
  1256                           fsr1h	equ	0xFE2
  1257                           fsr1l	equ	0xFE1
  1258                           bsr	equ	0xFE0
  1259                           indf2	equ	0xFDF
  1260                           postinc2	equ	0xFDE
  1261                           fsr2h	equ	0xFDA
  1262                           fsr2l	equ	0xFD9
  1263                           status	equ	0xFD8
  1264                           
  1265 ;; *************** function _high_isr *****************
  1266 ;; Defined at:
  1267 ;;		line 7 in file "interrupts.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;		None
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;		None
  1272 ;; Return value:  Size  Location     Type
  1273 ;;		None               void
  1274 ;; Registers used:
  1275 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1281 ;;      Params:         0       0       0       0       0       0       0       0       0
  1282 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1283 ;;      Temps:         15       0       0       0       0       0       0       0       0
  1284 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1285 ;;Total ram usage:       15 bytes
  1286 ;; Hardware stack levels used:    1
  1287 ;; Hardware stack levels required when called:    3
  1288 ;; This function calls:
  1289 ;;		_lcd_clear
  1290 ;;		_lcd_write_buffer
  1291 ;; This function is called by:
  1292 ;;		Interrupt level 2
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           	psect	intcode
  1297  000008                     __pintcode:
  1298                           	opt stack 0
  1299  000008                     _high_isr:
  1300                           	opt stack 22
  1301                           
  1302                           ;incstack = 0
  1303  000008  CFFA F01F          	movff	pclath,??_high_isr+1
  1304  00000C  CFFB F020          	movff	pclatu,??_high_isr+2
  1305  000010  ED62  F004         	call	int_func,f	;refresh shadow registers
  1306                           pclatu	equ	0xFFB
  1307                           pclath	equ	0xFFA
  1308                           tblptru	equ	0xFF8
  1309                           tblptrh	equ	0xFF7
  1310                           tblptrl	equ	0xFF6
  1311                           tablat	equ	0xFF5
  1312                           prodh	equ	0xFF4
  1313                           prodl	equ	0xFF3
  1314                           intcon	equ	0xFF2
  1315                           intcon2	equ	0xFF1
  1316                           fsr0h	equ	0xFEA
  1317                           fsr0l	equ	0xFE9
  1318                           wreg	equ	0xFE8
  1319                           fsr1h	equ	0xFE2
  1320                           fsr1l	equ	0xFE1
  1321                           bsr	equ	0xFE0
  1322                           indf2	equ	0xFDF
  1323                           postinc2	equ	0xFDE
  1324                           fsr2h	equ	0xFDA
  1325                           fsr2l	equ	0xFD9
  1326                           status	equ	0xFD8
  1327                           
  1328                           	psect	intcode_body
  1329  0008C4                     __pintcode_body:
  1330                           	opt stack 22
  1331  0008C4                     int_func:
  1332                           	opt stack 22
  1333  0008C4  0006               	pop		; remove dummy address from shadow register refresh
  1334  0008C6  CFE9 F021          	movff	fsr0l,??_high_isr+3
  1335  0008CA  CFEA F022          	movff	fsr0h,??_high_isr+4
  1336  0008CE  CFE1 F023          	movff	fsr1l,??_high_isr+5
  1337  0008D2  CFE2 F024          	movff	fsr1h,??_high_isr+6
  1338  0008D6  CFD9 F025          	movff	fsr2l,??_high_isr+7
  1339  0008DA  CFDA F026          	movff	fsr2h,??_high_isr+8
  1340  0008DE  CFF3 F027          	movff	prodl,??_high_isr+9
  1341  0008E2  CFF4 F028          	movff	prodh,??_high_isr+10
  1342  0008E6  CFF6 F029          	movff	tblptrl,??_high_isr+11
  1343  0008EA  CFF7 F02A          	movff	tblptrh,??_high_isr+12
  1344  0008EE  CFF8 F02B          	movff	tblptru,??_high_isr+13
  1345  0008F2  CFF5 F02C          	movff	tablat,??_high_isr+14
  1346                           
  1347                           ;interrupts.c: 8: if((INTCONbits.INT0IF == 1) && (INTCONbits.INT0IE == 1)){
  1348  0008F6  B2F2               	btfsc	intcon,1,c	;volatile
  1349  0008F8  A8F2               	btfss	intcon,4,c	;volatile
  1350  0008FA  D014               	goto	i2l12
  1351                           
  1352                           ;interrupts.c: 9: lcd_clear();
  1353  0008FC  ECA3  F005         	call	_lcd_clear	;wreg free
  1354                           
  1355                           ;interrupts.c: 10: lcd_write_buffer("INTERRUPT INT0", 14);
  1356  000900  0E08               	movlw	high STR_1
  1357  000902  6E15               	movwf	lcd_write_buffer@buffer+1,c
  1358  000904  0E11               	movlw	low STR_1
  1359  000906  6E14               	movwf	lcd_write_buffer@buffer,c
  1360  000908  6E1E               	movwf	??_high_isr& (0+255),c
  1361  00090A  0E0E               	movlw	14
  1362  00090C  6E16               	movwf	lcd_write_buffer@size,c
  1363  00090E  501E               	movf	??_high_isr& (0+255),w,c
  1364  000910  ECAF  F004         	call	_lcd_write_buffer	;wreg free
  1365                           
  1366                           ;interrupts.c: 11: _delay((unsigned long)((20)*(20000000L/4000.0)));
  1367  000914  0E82               	movlw	130
  1368  000916  6E1E               	movwf	??_high_isr& (0+255),c
  1369  000918  0EDE               	movlw	222
  1370  00091A                     i2u29_47:
  1371  00091A  2EE8               	decfsz	wreg,f,c
  1372  00091C  D7FE               	goto	i2u29_47
  1373  00091E  2E1E               	decfsz	??_high_isr& (0+255),f,c
  1374  000920  D7FC               	goto	i2u29_47
  1375                           
  1376                           ;interrupts.c: 12: INTCONbits.INT0IF = 0;
  1377  000922  92F2               	bcf	intcon,1,c	;volatile
  1378  000924                     i2l12:
  1379  000924  C02C  FFF5         	movff	??_high_isr+14,tablat
  1380  000928  C02B  FFF8         	movff	??_high_isr+13,tblptru
  1381  00092C  C02A  FFF7         	movff	??_high_isr+12,tblptrh
  1382  000930  C029  FFF6         	movff	??_high_isr+11,tblptrl
  1383  000934  C028  FFF4         	movff	??_high_isr+10,prodh
  1384  000938  C027  FFF3         	movff	??_high_isr+9,prodl
  1385  00093C  C026  FFDA         	movff	??_high_isr+8,fsr2h
  1386  000940  C025  FFD9         	movff	??_high_isr+7,fsr2l
  1387  000944  C024  FFE2         	movff	??_high_isr+6,fsr1h
  1388  000948  C023  FFE1         	movff	??_high_isr+5,fsr1l
  1389  00094C  C022  FFEA         	movff	??_high_isr+4,fsr0h
  1390  000950  C021  FFE9         	movff	??_high_isr+3,fsr0l
  1391  000954  C020  FFFB         	movff	??_high_isr+2,pclatu
  1392  000958  C01F  FFFA         	movff	??_high_isr+1,pclath
  1393  00095C  0011               	retfie		f
  1394  00095E                     __end_of_high_isr:
  1395                           	opt stack 0
  1396                           pclatu	equ	0xFFB
  1397                           pclath	equ	0xFFA
  1398                           tblptru	equ	0xFF8
  1399                           tblptrh	equ	0xFF7
  1400                           tblptrl	equ	0xFF6
  1401                           tablat	equ	0xFF5
  1402                           prodh	equ	0xFF4
  1403                           prodl	equ	0xFF3
  1404                           intcon	equ	0xFF2
  1405                           intcon2	equ	0xFF1
  1406                           fsr0h	equ	0xFEA
  1407                           fsr0l	equ	0xFE9
  1408                           wreg	equ	0xFE8
  1409                           fsr1h	equ	0xFE2
  1410                           fsr1l	equ	0xFE1
  1411                           bsr	equ	0xFE0
  1412                           indf2	equ	0xFDF
  1413                           postinc2	equ	0xFDE
  1414                           fsr2h	equ	0xFDA
  1415                           fsr2l	equ	0xFD9
  1416                           status	equ	0xFD8
  1417                           
  1418 ;; *************** function _lcd_write_buffer *****************
  1419 ;; Defined at:
  1420 ;;		line 54 in file "lcd.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;  buffer          2   19[COMRAM] PTR const unsigned char 
  1423 ;;		 -> STR_1(15), 
  1424 ;;  size            1   21[COMRAM] unsigned char 
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;  pos             2   27[COMRAM] int 
  1427 ;; Return value:  Size  Location     Type
  1428 ;;		None               void
  1429 ;; Registers used:
  1430 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1436 ;;      Params:         3       0       0       0       0       0       0       0       0
  1437 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1438 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1439 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1440 ;;Total ram usage:       10 bytes
  1441 ;; Hardware stack levels used:    1
  1442 ;; Hardware stack levels required when called:    2
  1443 ;; This function calls:
  1444 ;;		i2_lcd_write
  1445 ;; This function is called by:
  1446 ;;		_high_isr
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           	psect	text13
  1451  00095E                     __ptext13:
  1452                           	opt stack 0
  1453  00095E                     _lcd_write_buffer:
  1454                           	opt stack 22
  1455                           
  1456                           ;lcd.c: 55: int pos = 0;
  1457                           
  1458                           ;incstack = 0
  1459  00095E  0E00               	movlw	0
  1460  000960  6E1D               	movwf	lcd_write_buffer@pos+1,c
  1461  000962  0E00               	movlw	0
  1462  000964  6E1C               	movwf	lcd_write_buffer@pos,c
  1463                           
  1464                           ;lcd.c: 56: size = (size > 0x10) ? size = 0x10 : size;
  1465  000966  0E11               	movlw	17
  1466  000968  5C16               	subwf	lcd_write_buffer@size,w,c
  1467  00096A  A0D8               	btfss	status,0,c
  1468  00096C  D004               	goto	L4
  1469  00096E  6E17               	movwf	??_lcd_write_buffer& (0+255),c
  1470  000970  0E10               	movlw	16
  1471  000972  6E16               	movwf	lcd_write_buffer@size,c
  1472  000974  5017               	movf	??_lcd_write_buffer& (0+255),w,c
  1473  000976                     L4:
  1474  000976  C016  F01A         	movff	lcd_write_buffer@size,_lcd_write_buffer$524
  1475  00097A  6A1B               	clrf	_lcd_write_buffer$524+1,c
  1476  00097C  C01A  F016         	movff	_lcd_write_buffer$524,lcd_write_buffer@size
  1477                           
  1478                           ;lcd.c: 57: for (pos = 0; pos < size; pos++)
  1479  000980  0E00               	movlw	0
  1480  000982  6E1D               	movwf	lcd_write_buffer@pos+1,c
  1481  000984  0E00               	movlw	0
  1482  000986  6E1C               	movwf	lcd_write_buffer@pos,c
  1483  000988  D012               	goto	i2l952
  1484  00098A                     i2l948:
  1485                           
  1486                           ;lcd.c: 58: {
  1487                           ;lcd.c: 59: lcd_write(buffer[pos]);
  1488  00098A  C014  F017         	movff	lcd_write_buffer@buffer,??_lcd_write_buffer
  1489  00098E  C015  F018         	movff	lcd_write_buffer@buffer+1,??_lcd_write_buffer+1
  1490  000992  501C               	movf	lcd_write_buffer@pos,w,c
  1491  000994  2617               	addwf	??_lcd_write_buffer,f,c
  1492  000996  501D               	movf	lcd_write_buffer@pos+1,w,c
  1493  000998  2218               	addwfc	??_lcd_write_buffer+1,f,c
  1494  00099A  C017  FFF6         	movff	??_lcd_write_buffer,tblptrl
  1495  00099E  C018  FFF7         	movff	??_lcd_write_buffer+1,tblptrh
  1496  0009A2  0008               	tblrd		*
  1497  0009A4  50F5               	movf	tablat,w,c
  1498  0009A6  EC6D  F005         	call	i2_lcd_write
  1499  0009AA  4A1C               	infsnz	lcd_write_buffer@pos,f,c
  1500  0009AC  2A1D               	incf	lcd_write_buffer@pos+1,f,c
  1501  0009AE                     i2l952:
  1502  0009AE  5016               	movf	lcd_write_buffer@size,w,c
  1503  0009B0  6E17               	movwf	??_lcd_write_buffer& (0+255),c
  1504  0009B2  6A18               	clrf	(??_lcd_write_buffer+1)& (0+255),c
  1505  0009B4  501D               	movf	lcd_write_buffer@pos+1,w,c
  1506  0009B6  0A80               	xorlw	128
  1507  0009B8  6E19               	movwf	(??_lcd_write_buffer+2)& (0+255),c
  1508  0009BA  5017               	movf	??_lcd_write_buffer,w,c
  1509  0009BC  5C1C               	subwf	lcd_write_buffer@pos,w,c
  1510  0009BE  5018               	movf	??_lcd_write_buffer+1,w,c
  1511  0009C0  0A80               	xorlw	128
  1512  0009C2  5819               	subwfb	(??_lcd_write_buffer+2)& (0+255),w,c
  1513  0009C4  B0D8               	btfsc	status,0,c
  1514  0009C6  0012               	return	
  1515  0009C8  D7E0               	goto	i2l948
  1516  0009CA                     __end_of_lcd_write_buffer:
  1517                           	opt stack 0
  1518                           pclatu	equ	0xFFB
  1519                           pclath	equ	0xFFA
  1520                           tblptru	equ	0xFF8
  1521                           tblptrh	equ	0xFF7
  1522                           tblptrl	equ	0xFF6
  1523                           tablat	equ	0xFF5
  1524                           prodh	equ	0xFF4
  1525                           prodl	equ	0xFF3
  1526                           intcon	equ	0xFF2
  1527                           intcon2	equ	0xFF1
  1528                           fsr0h	equ	0xFEA
  1529                           fsr0l	equ	0xFE9
  1530                           wreg	equ	0xFE8
  1531                           fsr1h	equ	0xFE2
  1532                           fsr1l	equ	0xFE1
  1533                           bsr	equ	0xFE0
  1534                           indf2	equ	0xFDF
  1535                           postinc2	equ	0xFDE
  1536                           fsr2h	equ	0xFDA
  1537                           fsr2l	equ	0xFD9
  1538                           status	equ	0xFD8
  1539                           
  1540 ;; *************** function i2_lcd_write *****************
  1541 ;; Defined at:
  1542 ;;		line 36 in file "lcd.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;  x               1    wreg     unsigned char 
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;  x               1   18[COMRAM] unsigned char 
  1547 ;; Return value:  Size  Location     Type
  1548 ;;		None               void
  1549 ;; Registers used:
  1550 ;;		wreg, cstack
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1556 ;;      Params:         0       0       0       0       0       0       0       0       0
  1557 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1558 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1559 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1560 ;;Total ram usage:        1 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; Hardware stack levels required when called:    1
  1563 ;; This function calls:
  1564 ;;		i2_lcd_delay
  1565 ;; This function is called by:
  1566 ;;		_lcd_write_buffer
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           	psect	text14
  1571  000ADA                     __ptext14:
  1572                           	opt stack 0
  1573  000ADA                     i2_lcd_write:
  1574                           	opt stack 22
  1575                           
  1576                           ;incstack = 0
  1577                           ;i2lcd_write@x stored from wreg
  1578  000ADA  CFE8 F013          	movff	wreg,i2lcd_write@x
  1579                           
  1580                           ;lcd.c: 37: PORTD = x;
  1581  000ADE  C013  FF83         	movff	i2lcd_write@x,3971	;volatile
  1582                           
  1583                           ;lcd.c: 38: PORTAbits.RA1 = 1;
  1584  000AE2  8280               	bsf	3968,1,c	;volatile
  1585                           
  1586                           ;lcd.c: 39: PORTAbits.RA2 = 0;
  1587  000AE4  9480               	bcf	3968,2,c	;volatile
  1588                           
  1589                           ;lcd.c: 40: PORTAbits.RA3 = 0;
  1590  000AE6  9680               	bcf	3968,3,c	;volatile
  1591                           
  1592                           ;lcd.c: 41: lcd_delay();
  1593  000AE8  EC8B  F005         	call	i2_lcd_delay	;wreg free
  1594                           
  1595                           ;lcd.c: 42: PORTAbits.RA3 = 1;
  1596  000AEC  8680               	bsf	3968,3,c	;volatile
  1597  000AEE  0012               	return	
  1598  000AF0                     __end_ofi2_lcd_write:
  1599                           	opt stack 0
  1600                           pclatu	equ	0xFFB
  1601                           pclath	equ	0xFFA
  1602                           tblptru	equ	0xFF8
  1603                           tblptrh	equ	0xFF7
  1604                           tblptrl	equ	0xFF6
  1605                           tablat	equ	0xFF5
  1606                           prodh	equ	0xFF4
  1607                           prodl	equ	0xFF3
  1608                           intcon	equ	0xFF2
  1609                           intcon2	equ	0xFF1
  1610                           fsr0h	equ	0xFEA
  1611                           fsr0l	equ	0xFE9
  1612                           wreg	equ	0xFE8
  1613                           fsr1h	equ	0xFE2
  1614                           fsr1l	equ	0xFE1
  1615                           bsr	equ	0xFE0
  1616                           indf2	equ	0xFDF
  1617                           postinc2	equ	0xFDE
  1618                           fsr2h	equ	0xFDA
  1619                           fsr2l	equ	0xFD9
  1620                           status	equ	0xFD8
  1621                           
  1622 ;; *************** function _lcd_clear *****************
  1623 ;; Defined at:
  1624 ;;		line 89 in file "lcd.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;		None
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;		None
  1629 ;; Return value:  Size  Location     Type
  1630 ;;		None               void
  1631 ;; Registers used:
  1632 ;;		wreg, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1638 ;;      Params:         0       0       0       0       0       0       0       0       0
  1639 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1640 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1641 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1642 ;;Total ram usage:        0 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    2
  1645 ;; This function calls:
  1646 ;;		i2_lcd_write_cmd
  1647 ;; This function is called by:
  1648 ;;		_high_isr
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           	psect	text15
  1653  000B46                     __ptext15:
  1654                           	opt stack 0
  1655  000B46                     _lcd_clear:
  1656                           	opt stack 22
  1657                           
  1658                           ;lcd.c: 90: lcd_write_cmd(0x01);
  1659                           
  1660                           ;incstack = 0
  1661  000B46  0E01               	movlw	1
  1662  000B48  EC78  F005         	call	i2_lcd_write_cmd
  1663  000B4C  0012               	return	
  1664  000B4E                     __end_of_lcd_clear:
  1665                           	opt stack 0
  1666                           pclatu	equ	0xFFB
  1667                           pclath	equ	0xFFA
  1668                           tblptru	equ	0xFF8
  1669                           tblptrh	equ	0xFF7
  1670                           tblptrl	equ	0xFF6
  1671                           tablat	equ	0xFF5
  1672                           prodh	equ	0xFF4
  1673                           prodl	equ	0xFF3
  1674                           intcon	equ	0xFF2
  1675                           intcon2	equ	0xFF1
  1676                           fsr0h	equ	0xFEA
  1677                           fsr0l	equ	0xFE9
  1678                           wreg	equ	0xFE8
  1679                           fsr1h	equ	0xFE2
  1680                           fsr1l	equ	0xFE1
  1681                           bsr	equ	0xFE0
  1682                           indf2	equ	0xFDF
  1683                           postinc2	equ	0xFDE
  1684                           fsr2h	equ	0xFDA
  1685                           fsr2l	equ	0xFD9
  1686                           status	equ	0xFD8
  1687                           
  1688 ;; *************** function i2_lcd_write_cmd *****************
  1689 ;; Defined at:
  1690 ;;		line 45 in file "lcd.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;  x               1    wreg     unsigned char 
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;  x               1   18[COMRAM] unsigned char 
  1695 ;; Return value:  Size  Location     Type
  1696 ;;		None               void
  1697 ;; Registers used:
  1698 ;;		wreg, cstack
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1704 ;;      Params:         0       0       0       0       0       0       0       0       0
  1705 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1706 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1707 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1708 ;;Total ram usage:        1 bytes
  1709 ;; Hardware stack levels used:    1
  1710 ;; Hardware stack levels required when called:    1
  1711 ;; This function calls:
  1712 ;;		i2_lcd_delay
  1713 ;; This function is called by:
  1714 ;;		_lcd_clear
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text16
  1719  000AF0                     __ptext16:
  1720                           	opt stack 0
  1721  000AF0                     i2_lcd_write_cmd:
  1722                           	opt stack 22
  1723                           
  1724                           ;incstack = 0
  1725                           ;i2lcd_write_cmd@x stored from wreg
  1726  000AF0  CFE8 F013          	movff	wreg,i2lcd_write_cmd@x
  1727                           
  1728                           ;lcd.c: 46: PORTD = x;
  1729  000AF4  C013  FF83         	movff	i2lcd_write_cmd@x,3971	;volatile
  1730                           
  1731                           ;lcd.c: 47: PORTAbits.RA1 = 0;
  1732  000AF8  9280               	bcf	3968,1,c	;volatile
  1733                           
  1734                           ;lcd.c: 48: PORTAbits.RA2 = 0;
  1735  000AFA  9480               	bcf	3968,2,c	;volatile
  1736                           
  1737                           ;lcd.c: 49: PORTAbits.RA3 = 0;
  1738  000AFC  9680               	bcf	3968,3,c	;volatile
  1739                           
  1740                           ;lcd.c: 50: lcd_delay();
  1741  000AFE  EC8B  F005         	call	i2_lcd_delay	;wreg free
  1742                           
  1743                           ;lcd.c: 51: PORTAbits.RA3 = 1;
  1744  000B02  8680               	bsf	3968,3,c	;volatile
  1745  000B04  0012               	return	
  1746  000B06                     __end_ofi2_lcd_write_cmd:
  1747                           	opt stack 0
  1748                           pclatu	equ	0xFFB
  1749                           pclath	equ	0xFFA
  1750                           tblptru	equ	0xFF8
  1751                           tblptrh	equ	0xFF7
  1752                           tblptrl	equ	0xFF6
  1753                           tablat	equ	0xFF5
  1754                           prodh	equ	0xFF4
  1755                           prodl	equ	0xFF3
  1756                           intcon	equ	0xFF2
  1757                           intcon2	equ	0xFF1
  1758                           fsr0h	equ	0xFEA
  1759                           fsr0l	equ	0xFE9
  1760                           wreg	equ	0xFE8
  1761                           fsr1h	equ	0xFE2
  1762                           fsr1l	equ	0xFE1
  1763                           bsr	equ	0xFE0
  1764                           indf2	equ	0xFDF
  1765                           postinc2	equ	0xFDE
  1766                           fsr2h	equ	0xFDA
  1767                           fsr2l	equ	0xFD9
  1768                           status	equ	0xFD8
  1769                           
  1770 ;; *************** function i2_lcd_delay *****************
  1771 ;; Defined at:
  1772 ;;		line 85 in file "lcd.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;		None
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;		None
  1777 ;; Return value:  Size  Location     Type
  1778 ;;		None               void
  1779 ;; Registers used:
  1780 ;;		wreg
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1786 ;;      Params:         0       0       0       0       0       0       0       0       0
  1787 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1788 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1789 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1790 ;;Total ram usage:        1 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; This function calls:
  1793 ;;		Nothing
  1794 ;; This function is called by:
  1795 ;;		i2_lcd_write
  1796 ;;		i2_lcd_write_cmd
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           	psect	text17
  1801  000B16                     __ptext17:
  1802                           	opt stack 0
  1803  000B16                     i2_lcd_delay:
  1804                           	opt stack 22
  1805                           
  1806                           ;lcd.c: 86: _delay((unsigned long)((2)*(20000000L/4000.0)));
  1807                           
  1808                           ;incstack = 0
  1809  000B16  0E0D               	movlw	13
  1810  000B18  6E12               	movwf	??i2_lcd_delay& (0+255),c
  1811  000B1A  0EFC               	movlw	252
  1812  000B1C                     i2u30_47:
  1813  000B1C  2EE8               	decfsz	wreg,f,c
  1814  000B1E  D7FE               	goto	i2u30_47
  1815  000B20  2E12               	decfsz	??i2_lcd_delay& (0+255),f,c
  1816  000B22  D7FC               	goto	i2u30_47
  1817  000B24  0012               	return	
  1818  000B26                     __end_ofi2_lcd_delay:
  1819                           	opt stack 0
  1820                           pclatu	equ	0xFFB
  1821                           pclath	equ	0xFFA
  1822                           tblptru	equ	0xFF8
  1823                           tblptrh	equ	0xFF7
  1824                           tblptrl	equ	0xFF6
  1825                           tablat	equ	0xFF5
  1826                           prodh	equ	0xFF4
  1827                           prodl	equ	0xFF3
  1828                           intcon	equ	0xFF2
  1829                           intcon2	equ	0xFF1
  1830                           fsr0h	equ	0xFEA
  1831                           fsr0l	equ	0xFE9
  1832                           wreg	equ	0xFE8
  1833                           fsr1h	equ	0xFE2
  1834                           fsr1l	equ	0xFE1
  1835                           bsr	equ	0xFE0
  1836                           indf2	equ	0xFDF
  1837                           postinc2	equ	0xFDE
  1838                           fsr2h	equ	0xFDA
  1839                           fsr2l	equ	0xFD9
  1840                           status	equ	0xFD8
  1841                           pclatu	equ	0xFFB
  1842                           pclath	equ	0xFFA
  1843                           tblptru	equ	0xFF8
  1844                           tblptrh	equ	0xFF7
  1845                           tblptrl	equ	0xFF6
  1846                           tablat	equ	0xFF5
  1847                           prodh	equ	0xFF4
  1848                           prodl	equ	0xFF3
  1849                           intcon	equ	0xFF2
  1850                           intcon2	equ	0xFF1
  1851                           fsr0h	equ	0xFEA
  1852                           fsr0l	equ	0xFE9
  1853                           wreg	equ	0xFE8
  1854                           fsr1h	equ	0xFE2
  1855                           fsr1l	equ	0xFE1
  1856                           bsr	equ	0xFE0
  1857                           indf2	equ	0xFDF
  1858                           postinc2	equ	0xFDE
  1859                           fsr2h	equ	0xFDA
  1860                           fsr2l	equ	0xFD9
  1861                           status	equ	0xFD8
  1862                           
  1863                           	psect	rparam
  1864  0000                     pclatu	equ	0xFFB
  1865                           pclath	equ	0xFFA
  1866                           tblptru	equ	0xFF8
  1867                           tblptrh	equ	0xFF7
  1868                           tblptrl	equ	0xFF6
  1869                           tablat	equ	0xFF5
  1870                           prodh	equ	0xFF4
  1871                           prodl	equ	0xFF3
  1872                           intcon	equ	0xFF2
  1873                           intcon2	equ	0xFF1
  1874                           fsr0h	equ	0xFEA
  1875                           fsr0l	equ	0xFE9
  1876                           wreg	equ	0xFE8
  1877                           fsr1h	equ	0xFE2
  1878                           fsr1l	equ	0xFE1
  1879                           bsr	equ	0xFE0
  1880                           indf2	equ	0xFDF
  1881                           postinc2	equ	0xFDE
  1882                           fsr2h	equ	0xFDA
  1883                           fsr2l	equ	0xFD9
  1884                           status	equ	0xFD8


Data Sizes:
    Strings     15
    Constant    16
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     51      51
    BANK0           160     20      20
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    lcd_write_buffer@buffer	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_lcd_test
    _lcd_test->_lcd_pos
    _lcd_write->_lcd_delay
    _lcd_pos->_lcd_write_cmd
    _lcd_enable->_lcd_delay
    _lcd_cursor_off->_lcd_write_cmd
    _lcd_write_cmd->_lcd_delay

Critical Paths under _high_isr in COMRAM

    _high_isr->_lcd_write_buffer
    _lcd_write_buffer->i2_lcd_write
    i2_lcd_write->i2_lcd_delay
    _lcd_clear->i2_lcd_write_cmd
    i2_lcd_write_cmd->i2_lcd_delay

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_lcd_test

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     730
                                             50 COMRAM     1     1      0
                _ConfigureOscillator
                            _InitApp
                     _lcd_cursor_off
                         _lcd_enable
                           _lcd_init
                            _lcd_pos
                           _lcd_test
 ---------------------------------------------------------------------------------
 (1) _lcd_test                                            21    21      0     445
                                             49 COMRAM     1     1      0
                                              0 BANK0     20    20      0
                            _lcd_pos
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            1     1      0      22
                                             45 COMRAM     1     1      0
                          _lcd_delay
 ---------------------------------------------------------------------------------
 (2) _lcd_pos                                              3     2      1     263
                                             46 COMRAM     3     2      1
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0       0
                                             45 COMRAM     1     1      0
                         _lcd_enable
 ---------------------------------------------------------------------------------
 (2) _lcd_enable                                           0     0      0       0
                          _lcd_delay
 ---------------------------------------------------------------------------------
 (1) _lcd_cursor_off                                       0     0      0      22
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_write_cmd                                        1     1      0      22
                                             45 COMRAM     1     1      0
                          _lcd_delay
 ---------------------------------------------------------------------------------
 (3) _lcd_delay                                            1     1      0       0
                                             44 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _low_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_isr                                            15    15      0     413
                                             29 COMRAM    15    15      0
                          _lcd_clear
                   _lcd_write_buffer
 ---------------------------------------------------------------------------------
 (7) _lcd_write_buffer                                    10     7      3     340
                                             19 COMRAM    10     7      3
                        i2_lcd_write
 ---------------------------------------------------------------------------------
 (8) i2_lcd_write                                          1     1      0      73
                                             18 COMRAM     1     1      0
                        i2_lcd_delay
 ---------------------------------------------------------------------------------
 (7) _lcd_clear                                            0     0      0      73
                    i2_lcd_write_cmd
 ---------------------------------------------------------------------------------
 (8) i2_lcd_write_cmd                                      1     1      0      73
                                             18 COMRAM     1     1      0
                        i2_lcd_delay
 ---------------------------------------------------------------------------------
 (9) i2_lcd_delay                                          1     1      0       0
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _lcd_cursor_off
     _lcd_write_cmd
       _lcd_delay
   _lcd_enable
     _lcd_delay
   _lcd_init
     _lcd_enable
       _lcd_delay
   _lcd_pos
     _lcd_write_cmd
       _lcd_delay
   _lcd_test
     _lcd_pos
       _lcd_write_cmd
         _lcd_delay
     _lcd_write
       _lcd_delay

 _low_isr (ROOT)

 _high_isr (ROOT)
   _lcd_clear
     i2_lcd_write_cmd
       i2_lcd_delay
   _lcd_write_buffer
     i2_lcd_write
       i2_lcd_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     33      33       1       53.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     14      14       5       12.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Mar 24 13:54:32 2014

                          l32 0AAC                   __CFG_BOR$ON 000000                            bsr 000FE0  
                 __CFG_BORV$1 000000                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000      __size_ofi2_lcd_write_cmd 0016  
                         l101 08C2                  __CFG_CPB$OFF 000000                           u180 0830  
                __CFG_CPD$OFF 000000                           u277 09DA                           u287 0B0C  
                         wreg 000FE8                  __CFG_FOSC$HS 000000                  __CFG_LVP$OFF 000000  
                __CFG_WDT$OFF 000000                          l1032 0A5E                          l1024 08B8  
                        l1042 0A7E                          l1036 0A6C                          STR_1 0811  
                        i2l12 0924                   lcd_test@pos 0072                  __CFG_PWRT$ON 000000  
                        _main 0A86                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr0l 000FE9                          fsr2h 000FDA                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                          pclat 000FFA  
                        prodh 000FF4                          prodl 000FF3                ?_lcd_write_cmd 0001  
                        start 00A2                 __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000  
             __end_of_InitApp 0A4C                 __CFG_PLLDIV$5 000000                   i2_lcd_delay 0B16  
                lcd_pos@linha 0031                __CFG_CCP2MX$ON 000000                         ?_main 0001  
                       _CMCON 000FB4                   i2_lcd_write 0ADA                         i2l952 09AE  
                       i2l948 098A                         _PORTA 000F80                         _PORTB 000F81  
                       _PORTC 000F82                         _PORTD 000F83                         _PORTE 000F84  
               __CFG_USBDIV$1 000000                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISC 000F94                         _TRISD 000F95                         _TRISE 000F96  
         _ConfigureOscillator 0B4E                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000               __end_of_lcd_pos 0A86                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
             __end_of_low_isr 00A2                         tablat 000FF5                         status 000FD8  
              __CFG_ICPRT$OFF 000000          ?_ConfigureOscillator 0001               __initialization 0B34  
                __end_of_main 0AAE                        ??_main 0033                 __activetblptr 000002  
               lcd_pos@coluna 002F                 lcd_test@F5275 0801             ??i2_lcd_write_cmd 0013  
                      _ADCON1 000FC1               ??_lcd_write_cmd 002E                     ??_InitApp 002D  
       ??_ConfigureOscillator 002D                __CFG_XINST$OFF 000000              __end_of_lcd_init 0A0C  
            __end_of_high_isr 095E              __end_of_lcd_test 08C4      __end_of_lcd_write_buffer 09CA  
              __CFG_STVREN$ON 000000                     ??_lcd_pos 0030                  __mediumconst 0000  
                   ??_low_isr 0001                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8              ??_lcd_cursor_off 002F                    __accesstop 0060  
     __end_of__initialization 0B34               __CFG_PBADEN$OFF 000000                __pcstackCOMRAM 0001  
          __size_of_lcd_delay 0010            __size_of_lcd_clear 0008            __size_of_lcd_write 0016  
                i2lcd_write@x 0013                  ?i2_lcd_delay 0001                  ?i2_lcd_write 0001  
            i2lcd_write_cmd@x 0013                    _lcd_enable 0B26                       i2u30_47 0B1C  
                     i2u29_47 091A                     ?_lcd_init 0001                     ?_high_isr 0001  
                   ?_lcd_test 0001               __CFG_VREGEN$OFF 000000                       _InitApp 0A0C  
                     __Hparam 0000                       __Lparam 0000             __end_of_lcd_delay 0B16  
           __end_of_lcd_clear 0B4E             __end_of_lcd_write 0AC4                  __psmallconst 0800  
             i2_lcd_write_cmd 0AF0                       __pcinit 0B34                       __ramtop 0800  
                     __ptext0 0A86                       __ptext1 0822                       __ptext2 0AAE  
                     __ptext3 0A4C                       __ptext4 09CA                       __ptext5 0B26  
                     __ptext6 0B3E                       __ptext7 0AC4                       __ptext8 0B06  
                     __ptext9 0A0C                       _lcd_pos 0A4C                       _low_isr 0018  
                  ??_lcd_init 002E                    ??_high_isr 001E                    ??_lcd_test 0032  
              __pintcode_body 08C4          end_of_initialization 0B34                 __Lmediumconst 0000  
                     int_func 08C4                       postinc2 000FDE             ?_lcd_write_buffer 0014  
          ??_lcd_write_buffer 0017                     _PORTAbits 000F80                   ?_lcd_enable 0001  
                   _TRISAbits 000F92   __end_of_ConfigureOscillator 0B50                    lcd_test@ln 0070  
              lcd_write_cmd@x 002E         __end_of_lcd_write_cmd 0ADA          _lcd_write_buffer$524 001A  
     __end_ofi2_lcd_write_cmd 0B06                    lcd_write@x 002E          __size_ofi2_lcd_delay 0010  
         start_initialization 0B34          __size_ofi2_lcd_write 0016        lcd_write_buffer@buffer 0014  
         __size_of_lcd_enable 000E              __CFG_LPT1OSC$OFF 000000                 __pcstackBANK0 0060  
         __end_of__stringdata 0820          lcd_write_buffer@size 0016             __size_of_lcd_init 0042  
           __size_of_high_isr 0956             __size_of_lcd_test 00A2                      ?_InitApp 0001  
     __size_of_lcd_cursor_off 0008              ?i2_lcd_write_cmd 0001                     __pintcode 0008  
                   _lcd_delay 0B06                     _lcd_clear 0B46                   __pintcodelo 0018  
                   _lcd_write 0AAE                      ?_lcd_pos 002F                   __smallconst 0800  
       __end_oflcd_test@F5275 0811                      ?_low_isr 0001                      _RCONbits 000FD0  
            __CFG_WDTPS$32768 000000                    ?_lcd_delay 0001                    ?_lcd_clear 0001  
                 __stringdata 0811                    ?_lcd_write 0001               lcd_test@msgTest 0060  
                ??_lcd_enable 002E     __size_of_lcd_write_buffer 006C                   _INTCON2bits 000FF1  
            __size_of_InitApp 0040                      __Hrparam 0000                      __Lrparam 0000  
          __end_of_lcd_enable 0B34           lcd_write_buffer@pos 001C              __size_of_lcd_pos 003A  
            __size_of_low_isr 008A                      __ptext10 0B4E                      __ptext13 095E  
                    __ptext14 0ADA                      __ptext15 0B46                      __ptext16 0AF0  
                    __ptext17 0B16                      _lcd_init 09CA                      _high_isr 0008  
                    _lcd_test 0822                 __size_of_main 0028  __size_of_ConfigureOscillator 0002  
              _lcd_cursor_off 0B3E                 ??i2_lcd_delay 0012                   ??_lcd_delay 002D  
                 ??_lcd_clear 0014                 ??i2_lcd_write 0013                   ??_lcd_write 002E  
       __CFG_CPUDIV$OSC1_PLL2 000000                    _INTCONbits 000FF2        __size_of_lcd_write_cmd 0016  
                    intlevel1 0000                      intlevel2 0000        __end_of_lcd_cursor_off 0B46  
         __end_ofi2_lcd_delay 0B26           __end_ofi2_lcd_write 0AF0              _lcd_write_buffer 095E  
             ?_lcd_cursor_off 0001                 _lcd_write_cmd 0AC4  
